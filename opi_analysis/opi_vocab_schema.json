{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.org/opi_vocab_schema.json",
  "title": "OPI vocabularies and quantity types",
  "description": "Auto-generated schema containing every Enum (vocabulary) and pydantic BaseModel (quantity) shipped with the ORCA Python Interface.",
  "$defs": {
    "ArbitraryStringPos": {
      "title": "ArbitraryStringPos",
      "description": "Position of `ArbitraryString`.\n\nAttributes:\n    TOP: Place at very top of input file.\n    BOTTOM: Place at very bottom of input file.\n    BEFORE_COORDS: Place a bottom of input file, but before the coords block (i.e. \"*xyz\")",
      "type": "string",
      "enum": [
        "top",
        "bottom",
        "before_coords"
      ]
    },
    "BlockOutput": {
      "description": "Class to model the %output block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "jsonpropfile": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Jsonpropfile"
        },
        "jsongbwfile": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Jsongbwfile"
        }
      },
      "title": "BlockOutput",
      "type": "object"
    },
    "OrcaBinary": {
      "title": "OrcaBinary",
      "description": "List of relevant ORCA binaries.",
      "type": "string",
      "enum": [
        "orca",
        "orca_2json",
        "orca_2aim",
        "orca_2mkl",
        "orca_crystalprep",
        "orca_lft",
        "orca_loc",
        "orca_mapspc",
        "orca_mergefrag",
        "orca_plot",
        "orca_pltvib",
        "orca_vib"
      ]
    },
    "StrEnum": {
      "title": "StrEnum",
      "description": "Enum where members are also (and must be) strings",
      "type": "string",
      "enum": []
    },
    "AtomList": {
      "description": "Class to model `uphillatoms`, `topobreak`, `reactiveatoms` attributes in `BlockGeom`.",
      "properties": {
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ]
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "title": "AtomList",
      "type": "object"
    },
    "AtomRadii": {
      "description": "Class to model `atomradii` attribute in `BlockCpcm`.\n\nAttributes\n-----------\nn: int\n    Number of atom for which radius is defined\nradius: float\n    Radius(in Angstrom)",
      "properties": {
        "n": {
          "exclusiveMinimum": 0,
          "maximum": 118,
          "title": "N",
          "type": "integer"
        },
        "radius": {
          "exclusiveMinimum": 0.0,
          "title": "Radius",
          "type": "number"
        }
      },
      "required": [
        "n",
        "radius"
      ],
      "title": "AtomRadii",
      "type": "object"
    },
    "Block": {
      "description": "Base Class for Block.\nEach ORCA input block is defined in the module block_<block_name>.py\nEvery class defined for a block is derived from this base Block class ,\nwhich defines attributes, methods and properties shared by all blocks.",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        }
      },
      "title": "Block",
      "type": "object"
    },
    "BlockAutoCI": {
      "description": "Class to model %autoci block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "citype": {
          "anyOf": [
            {
              "enum": [
                "CID",
                "CISD",
                "CCSD",
                "CEPA0",
                "FICMRCI",
                "FICMRCEPA0",
                "FICMRACPF",
                "FICMRAQCC",
                "FICDDCI3",
                "FICMRCC"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Citype"
        }
      },
      "title": "BlockAutoCI",
      "type": "object"
    },
    "BlockCasscf": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %casscf block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nel"
        },
        "norb": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Norb"
        },
        "mult": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "bweight": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bweight"
        },
        "weights": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Weights"
        },
        "hessroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hessroot"
        },
        "iroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iroot"
        },
        "jroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Jroot"
        },
        "imult": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Imult"
        },
        "followiroot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followiroot"
        },
        "followirootno": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followirootno"
        },
        "followirootmix": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followirootmix"
        },
        "followiroottdens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followiroottdens"
        },
        "orbstep": {
          "anyOf": [
            {
              "enum": [
                "diis",
                "kdiis",
                "soscf",
                "superci",
                "superci_pt",
                "superci_ptno",
                "nr",
                "trah"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbstep"
        },
        "cistep": {
          "anyOf": [
            {
              "enum": [
                "csfci",
                "accci",
                "cipsi",
                "ice",
                "dmrgci",
                "qmcci",
                "molmpsci",
                "mccas",
                "detci",
                "treecsf"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cistep"
        },
        "trafostep": {
          "anyOf": [
            {
              "enum": [
                "exact",
                "rimo",
                "ri"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Trafostep"
        },
        "switchconv": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Switchconv"
        },
        "switchiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Switchiter"
        },
        "switchstep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Switchstep"
        },
        "parametrization": {
          "anyOf": [
            {
              "enum": [
                "cayley",
                "expk"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Parametrization"
        },
        "etol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etol"
        },
        "gtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gtol"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "printgstate": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printgstate"
        },
        "printndo": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printndo"
        },
        "printwf": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printwf"
        },
        "actorbs": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Actorbs"
        },
        "actconstraints": {
          "anyOf": [
            {
              "enum": [
                "unchanged",
                "canonorbs",
                "locorbs",
                "natorbs"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Actconstraints"
        },
        "locmet": {
          "anyOf": [
            {
              "enum": [
                "pipekmezey",
                "pm",
                "fosterboys",
                "fb",
                "iaoibo",
                "iaoboys",
                "ahfb"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmet"
        },
        "nevpt2": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nevpt2"
        },
        "ptmethod": {
          "anyOf": [
            {
              "enum": [
                "sc",
                "fic",
                "pc",
                "dlpno",
                "dlpno_nevpt2",
                "fic_nevpt2",
                "sc_nevpt2",
                "fic_caspt2",
                "fic_caspt2k",
                "fic_caspt2s"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ptmethod"
        },
        "freezeactive": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezeactive"
        },
        "dthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dthresh"
        },
        "buildhessian": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Buildhessian"
        },
        "resethessian": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Resethessian"
        },
        "maxdampiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdampiter"
        },
        "gradscaling": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gradscaling"
        },
        "convrate": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convrate"
        },
        "freezeie": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezeie"
        },
        "freezegrad": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezegrad"
        },
        "superdiis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Superdiis"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxmicroiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxmicroiter"
        },
        "maxdiis": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdiis"
        },
        "diisthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diisthresh"
        },
        "resetfreq": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Resetfreq"
        },
        "switchdens": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Switchdens"
        },
        "doipea": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doipea"
        },
        "donto": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donto"
        },
        "ntothresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ntothresh"
        },
        "nntostates": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nntostates"
        },
        "ntostates": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ntostates"
        },
        "dondo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dondo"
        },
        "nndostates": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nndostates"
        },
        "ndostates": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ndostates"
        },
        "dotransdens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotransdens"
        },
        "inistateenerrange": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Inistateenerrange"
        },
        "docd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docd"
        },
        "dodipolelength": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodipolelength"
        },
        "dodipolevelocity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodipolevelocity"
        },
        "dohighermoments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dohighermoments"
        },
        "dofullsemiclassical": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dofullsemiclassical"
        },
        "decomposefosclength": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Decomposefosclength"
        },
        "decomposefoscvelocity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Decomposefoscvelocity"
        },
        "dotransient": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotransient"
        },
        "cas_ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockCasscf",
      "type": "object"
    },
    "BlockCis": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %cis block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "iroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iroot"
        },
        "irootmult": {
          "anyOf": [
            {
              "enum": [
                "singlet",
                "triplet"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irootmult"
        },
        "maxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdim"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "nguessmat": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nguessmat"
        },
        "maxcore": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcore"
        },
        "etol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etol"
        },
        "rtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rtol"
        },
        "tda": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tda"
        },
        "lrcpcm": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lrcpcm"
        },
        "cpcmeq": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cpcmeq"
        },
        "donto": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donto"
        },
        "saveunrnatorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Saveunrnatorb"
        },
        "spinflip": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spinflip"
        },
        "soc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soc"
        },
        "socgrad": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socgrad"
        },
        "triplets": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triplets"
        },
        "dotrans": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotrans"
        },
        "dcorr": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dcorr"
        },
        "doscs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doscs"
        },
        "intaccxc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Intaccxc"
        },
        "gridxc": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridxc"
        },
        "gridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridx"
        },
        "ntostates": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "scspar": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockCis",
      "type": "object"
    },
    "BlockCpcm": {
      "$defs": {
        "AtomRadii": {
          "description": "Class to model `atomradii` attribute in `BlockCpcm`.\n\nAttributes\n-----------\nn: int\n    Number of atom for which radius is defined\nradius: float\n    Radius(in Angstrom)",
          "properties": {
            "n": {
              "exclusiveMinimum": 0,
              "maximum": 118,
              "title": "N",
              "type": "integer"
            },
            "radius": {
              "exclusiveMinimum": 0.0,
              "title": "Radius",
              "type": "number"
            }
          },
          "required": [
            "n",
            "radius"
          ],
          "title": "AtomRadii",
          "type": "object"
        },
        "Radius": {
          "description": "Class to model `radius` and `radii` attributes in `BlockCpcm`.\n\nAttributes\n----------\nn: int\n    Atomic number for which radius is to be defined.\nvalue: float\n    Atomic radius(in Angstrom)",
          "properties": {
            "n": {
              "exclusiveMinimum": 0,
              "maximum": 118,
              "title": "N",
              "type": "integer"
            },
            "value": {
              "exclusiveMinimum": 0.0,
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "n",
            "value"
          ],
          "title": "Radius",
          "type": "object"
        },
        "Solvent": {
          "description": "Enum that stores all valid solvents for use in ORCA",
          "enum": [
            "HEPTANOL",
            "FLUOROBENZENE",
            "ACETONE",
            "PERFLUOROBENZENE",
            "CH3CN",
            "TETRACHLOROETHENE",
            "PENTANOL",
            "PROPANOL",
            "METHYLFORMAMIDE",
            "TBUTYLBENZENE",
            "METHOXYETHANOL",
            "NONANOL",
            "2-PROPANOL",
            "1-HEXENE",
            "P-XYLENE",
            "TRIBUTYLPHOSPHATE",
            "BUTYLACETATE",
            "HEXANOL",
            "M-XYLENE",
            "1-BROMOPROPANE",
            "MENO2",
            "BROMOBENZENE",
            "TETRAHYDROFURAN",
            "N-OCTANE",
            "TETRAHYDROTHIOPHENEDIOXIDE",
            "WATER",
            "1-BROMO-2-METHYLPROPANE",
            "HEXADECANE",
            "PROPANONITRILE",
            "HEPTANE",
            "1-NITROPROPANE",
            "TRANS-DECALIN",
            "ODICHLOROBENZENE",
            "5-NONANONE",
            "2-PENTANONE",
            "BENZYL ALCOHOL",
            "SECBUTANOL",
            "TRIETHYLAMINE",
            "DIPHENYLETHER",
            "BUTANOIC ACID",
            "DECALIN",
            "DIETHYLETHER",
            "FORMIC ACID",
            "DIBUTYLETHER",
            "HEXANOIC ACID",
            "2METHYLPYRIDINE",
            "2-METHYLPYRIDINE",
            "N-PENTANE",
            "N-HEXANE",
            "PROPYL ETHANOATE",
            "IODOBENZENE",
            "ISOPROPANOL",
            "1-CHLOROPROPANE",
            "N-DODECANE",
            "ETHYL ETHANOATE",
            "PHENOL",
            "DODECANE",
            "CH2CL2",
            "ETHYL PHENYL ETHER",
            "ISOBUTANOL",
            "1-CHLOROPENTANE",
            "1-DECANOL",
            "A-CHLOROTOLUENE",
            "H2O",
            "CYCLOPENTANONE",
            "SECBUTYLBENZENE",
            "CHLOROBENZENE",
            "2-HEPTANONE",
            "1-PROPANOL",
            "ETHYLBENZENE",
            "E-2-PENTENE",
            "O-NITROTOLUENE",
            "2-METHYL-2-PROPANOL",
            "PENTANE",
            "2-METHOXYETHANOL",
            "PENTANOIC ACID",
            "4-METHYL-2-PENTANONE",
            "BUTANOL",
            "2-BUTANOL",
            "2-HEXANONE",
            "ACETICACID",
            "DICHLOROMETHANE",
            "METHYL BENZOATE",
            "N-DECANE",
            "HEXANE",
            "CARBON TETRACHLORIDE",
            "MCRESOL",
            "XYLENE",
            "BUTYL ETHANOATE",
            "BUTANONE",
            "IODOMETHANE",
            "METHYL METHANOATE",
            "OCRESOL",
            "PENTANAL",
            "2-METHYLPENTANE",
            "ETHANETHIOL",
            "PENTYL ETHANOATE",
            "1-IODOBUTANE",
            "THF",
            "4-METHYLPYRIDINE",
            "BENZENE",
            "CARBON DISULFIDE",
            "N-HEXADECANE",
            "PROPANOIC ACID",
            "N-UNDECANE",
            "METHYL PROPANOATE",
            "ETHOXYBENZENE",
            "METHYL ETHANOATE",
            "DIETHYL SULFIDE",
            "ACETIC ACID",
            "METHYLCYCLOHEXANE",
            "PENTYLAMINE",
            "2-CHLOROBUTANE",
            "4-HEPTANONE",
            "CYCLOPENTANE",
            "THIOPHENOL",
            "1-IODOPENTANE",
            "PHNO2",
            "1-IODOPROPANE",
            "2-BROMOPROPANE",
            "1-NONANOL",
            "DIISOPROPYLETHER",
            "HEXADECYLIODIDE",
            "NITROETHANE",
            "SULFOLANE",
            "PROPYLAMINE",
            "DMSO",
            "ISOPROPYLBENZENE",
            "TOLUENE",
            "1-FLUOROOCTANE",
            "1-BUTANOL",
            "M-CRESOL",
            "2-OCTANONE",
            "3-PENTANONE",
            "BENZONITRILE",
            "CYCLOPENTANOL",
            "O-DICHLOROBENZENE",
            "NITROMETHANE",
            "ETHYLACETATE",
            "DIETHYL ETHER",
            "DECANE",
            "P-ISOPROPYLTOLUENE",
            "UNDECANE",
            "THIOPHENE",
            "OCTANE",
            "1-HEXANOL",
            "DMF",
            "O-CRESOL",
            "1-PENTANOL",
            "MECN",
            "ANILINE",
            "ACETONITRILE",
            "1-CHLOROHEXANE",
            "DIBROMOMETHANE",
            "DIOXANE",
            "METHANOL",
            "BUTYL ACETATE",
            "TRICHLOROETHENE",
            "ISOOCTANE",
            "BUTYLBENZENE",
            "PENTADECANE",
            "1-HEXYNE",
            "CIS-DECALIN",
            "HEXAFLUOROBENZENE",
            "DCM",
            "IODOETHANE",
            "DIMETHYLACETAMIDE",
            "NITROBENZENE",
            "DIPROPYLAMINE",
            "BUTANONITRILE",
            "N-HEPTANE",
            "N-METHYLANILINE",
            "PYRIDINE",
            "DIMETHYLSULFOXIDE",
            "CHLOROHEXANE",
            "C2CL4",
            "1-IODOHEXADECANE",
            "ETHANOL",
            "4METHYL2PENTANONE",
            "NONANE",
            "1-HEPTANOL",
            "CYCLOHEXANONE",
            "CS2",
            "DECANOL",
            "BUTYLAMINE",
            "BENZALDEHYDE",
            "DIISOPROPYL ETHER",
            "1-BROMOOCTANE",
            "AMMONIA",
            "DIMETHYLFORMAMIDE",
            "PHENYLETHER",
            "CHCL3",
            "DIETHYLAMINE",
            "2-METHYL-1-PROPANOL",
            "BROMOFORM",
            "ETHYL METHANOATE",
            "ONITROTOLUENE",
            "SEC-BUTYLBENZENE",
            "1-OCTANOL",
            "CYCLOHEXANE",
            "CHLOROFORM",
            "ANISOLE",
            "ISOPROPYLTOLUENE",
            "PROPANAL",
            "BROMOOCTANE",
            "BROMOETHANE",
            "DIMETHYL DISULFIDE",
            "MESITYLENE",
            "N-BUTYLBENZENE",
            "METHYL BUTANOATE",
            "N-METHYLFORMAMIDE",
            "N-PENTADECANE",
            "BUTANAL",
            "TETRALIN",
            "N-NONANE",
            "DIIODOMETHANE",
            "CCL4",
            "O-XYLENE",
            "1-PENTENE",
            "2-NITROPROPANE",
            "O-CHLOROTOLUENE",
            "3-METHYLPYRIDINE",
            "CARBONDISULFIDE",
            "2-PROPEN-1-OL",
            "FORMAMIDE",
            "ACETOPHENONE",
            "TERT-BUTYLBENZENE",
            "OCTANOL",
            "BENZYLALCOHOL",
            "1-BROMOPENTANE",
            "FURANE",
            "FURAN",
            "ETHYL ACETATE",
            "WOCTANOL",
            "WETOCTANOL",
            "CONDUCTOR"
          ],
          "title": "Solvent",
          "type": "string"
        }
      },
      "description": "Class to model %cpcm block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "epsilon": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Epsilon"
        },
        "xfeps": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xfeps"
        },
        "num_leb": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Num Leb"
        },
        "scale_gauss": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scale Gauss"
        },
        "refrac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refrac"
        },
        "rsolv": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rsolv"
        },
        "radii": {
          "anyOf": [
            {
              "$ref": "#/$defs/Radius"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "radius": {
          "anyOf": [
            {
              "$ref": "#/$defs/Radius"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "rmin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rmin"
        },
        "pmin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pmin"
        },
        "rsolv_sas": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rsolv Sas"
        },
        "ndiv": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ndiv"
        },
        "cds_cpcm": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cds Cpcm"
        },
        "cpcmccm": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cpcmccm"
        },
        "cut_swf": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cut Swf"
        },
        "cut_area": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cut Area"
        },
        "thresh_h": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thresh H"
        },
        "thresh_noth": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thresh Noth"
        },
        "draco": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Draco"
        },
        "dracogridfollow": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dracogridfollow"
        },
        "cavityfile": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cavityfile"
        },
        "fepstype": {
          "anyOf": [
            {
              "enum": [
                "cpcm",
                "cosmo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fepstype"
        },
        "surfacetype": {
          "anyOf": [
            {
              "enum": [
                "gepol_ses",
                "gepol_sas",
                "vdw_gaussian",
                "gepol_ses_gaussian"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Surfacetype"
        },
        "draco_charges": {
          "anyOf": [
            {
              "enum": [
                "eeq",
                "ceh"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Draco Charges"
        },
        "newradii": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Newradii"
        },
        "smd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smd"
        },
        "smdold": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smdold"
        },
        "smd18": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smd18"
        },
        "aqueous": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aqueous"
        },
        "soln": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soln"
        },
        "soln25": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soln25"
        },
        "sola": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sola"
        },
        "solb": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solb"
        },
        "solg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solg"
        },
        "solc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solc"
        },
        "solh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solh"
        },
        "cosmorscalc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cosmorscalc"
        },
        "useriifpossible": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useriifpossible"
        },
        "useanalyticonrebuild": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useanalyticonrebuild"
        },
        "vpottype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vpottype"
        },
        "vpotopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vpotopt"
        },
        "vopt": {
          "anyOf": [
            {
              "enum": [
                "v_analytic",
                "v_numeric",
                "v_multipole",
                "v_ri"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vopt"
        },
        "pcfocktype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pcfocktype"
        },
        "pffockopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pffockopt"
        },
        "fockopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fockopt"
        },
        "fopt": {
          "anyOf": [
            {
              "enum": [
                "f_analytic",
                "f_numeric",
                "f_multipole",
                "f_ri"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fopt"
        },
        "atomradii": {
          "anyOf": [
            {
              "$ref": "#/$defs/AtomRadii"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "solvent": {
          "anyOf": [
            {
              "$ref": "#/$defs/Solvent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "smdsolvent": {
          "anyOf": [
            {
              "$ref": "#/$defs/Solvent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockCpcm",
      "type": "object"
    },
    "BlockDocker": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %docker block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "docklevel": {
          "anyOf": [
            {
              "enum": [
                "screening",
                "normal",
                "quick",
                "complete"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docklevel"
        },
        "evpes": {
          "anyOf": [
            {
              "enum": [
                "gfnff",
                "gfn0xtb",
                "gfn1xtb",
                "gfn2xtb"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Evpes"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "miniter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Miniter"
        },
        "printlevel": {
          "anyOf": [
            {
              "enum": [
                "low",
                "normal",
                "high"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "popdensity": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Popdensity"
        },
        "nopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nopt"
        },
        "cumulative": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cumulative"
        },
        "popsize": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Popsize"
        },
        "fixhost": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fixhost"
        },
        "guestcharge": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Guestcharge"
        },
        "guestmult": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Guestmult"
        },
        "nrepeatguest": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nrepeatguest"
        },
        "evoptlevel": {
          "anyOf": [
            {
              "enum": [
                "sloppyopt",
                "looseopt",
                "normalopt"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Evoptlevel"
        },
        "randomseed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomseed"
        },
        "checkguesttopo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checkguesttopo"
        },
        "guest": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockDocker",
      "type": "object"
    },
    "BlockEda": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %eda block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "frag1_c": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag1 C"
        },
        "frag2_c": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag2 C"
        },
        "frag1_m": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag1 M"
        },
        "frag2_m": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag2 M"
        },
        "frag1_sf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag1 Sf"
        },
        "frag2_sf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag2 Sf"
        },
        "printinfo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printinfo"
        },
        "frag2_fs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Frag2 Fs"
        },
        "frag1": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "frag2": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "frag1_methodfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "frag2_methodfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockEda",
      "type": "object"
    },
    "BlockElprop": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %elprop block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "dipole": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipole"
        },
        "quadrupole": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadrupole"
        },
        "polarvelocity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polarvelocity"
        },
        "polardipquad": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polardipquad"
        },
        "polarquadquad": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polarquadquad"
        },
        "kinetic": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kinetic"
        },
        "efield": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Efield"
        },
        "polar": {
          "anyOf": [
            {
              "enum": [
                "analytic",
                "semianalytic",
                "numeric"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polar"
        },
        "freq_real": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freq Real"
        },
        "freq_imag": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freq Imag"
        },
        "dipoleatom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipoleatom"
        },
        "quadrupoleatom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadrupoleatom"
        },
        "polaratom": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polaratom"
        },
        "solver": {
          "anyOf": [
            {
              "enum": [
                "cg",
                "diis",
                "pople"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solver"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxdiis": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdiis"
        },
        "tol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol"
        },
        "levelshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Levelshift"
        },
        "origin": {
          "anyOf": [
            {
              "enum": [
                "centerofmass",
                "centerofnuccharge",
                "centerofnuclearcharge",
                "centerofelcharge",
                "centerofspindens",
                "centerofspindensity"
              ],
              "type": "string"
            },
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Origin"
        }
      },
      "title": "BlockElprop",
      "type": "object"
    },
    "BlockEprnmr": {
      "$defs": {
        "Element": {
          "description": "Class that stores a list of all elements.\nWhen an element is required as an input, it is to be selected from this class to avoid user error",
          "enum": [
            "H",
            "H",
            "He",
            "He",
            "Li",
            "Li",
            "Be",
            "Be",
            "B",
            "B",
            "C",
            "C",
            "N",
            "N",
            "O",
            "O",
            "F",
            "F",
            "Ne",
            "Ne",
            "Na",
            "Na",
            "Mg",
            "Mg",
            "Al",
            "Al",
            "Si",
            "Si",
            "P",
            "P",
            "S",
            "S",
            "Cl",
            "Cl",
            "Ar",
            "Ar",
            "K",
            "K",
            "Ca",
            "Ca",
            "Sc",
            "Sc",
            "Ti",
            "Ti",
            "V",
            "V",
            "Cr",
            "Cr",
            "Mn",
            "Mn",
            "Fe",
            "Fe",
            "Co",
            "Co",
            "Ni",
            "Ni",
            "Cu",
            "Cu",
            "Zn",
            "Zn",
            "Ga",
            "Ga",
            "Ge",
            "Ge",
            "As",
            "As",
            "Se",
            "Se",
            "Br",
            "Br",
            "Kr",
            "Kr",
            "Rb",
            "Rb",
            "Sr",
            "Sr",
            "Y",
            "Y",
            "Zr",
            "Zr",
            "Nb",
            "Nb",
            "Mo",
            "Mo",
            "Tc",
            "Tc",
            "Ru",
            "Ru",
            "Rh",
            "Rh",
            "Pd",
            "Pd",
            "Ag",
            "Ag",
            "Cd",
            "Cd",
            "In",
            "In",
            "Sn",
            "Sn",
            "Sb",
            "Sb",
            "Te",
            "Te",
            "I",
            "I",
            "Xe",
            "Xe",
            "Cs",
            "Cs",
            "Ba",
            "Ba",
            "La",
            "La",
            "Ce",
            "Ce",
            "Pr",
            "Pr",
            "Nd",
            "Nd",
            "Pm",
            "Pm",
            "Sm",
            "Sm",
            "Eu",
            "Eu",
            "Gd",
            "Gd",
            "Tb",
            "Tb",
            "Dy",
            "Dy",
            "Ho",
            "Ho",
            "Er",
            "Er",
            "Tm",
            "Tm",
            "Yb",
            "Yb",
            "Lu",
            "Lu",
            "Hf",
            "Hf",
            "Ta",
            "Ta",
            "W",
            "W",
            "Re",
            "Re",
            "Os",
            "Os",
            "Ir",
            "Ir",
            "Pt",
            "Pt",
            "Au",
            "Au",
            "Hg",
            "Hg",
            "Tl",
            "Tl",
            "Pb",
            "Pb",
            "Bi",
            "Bi",
            "Po",
            "Po",
            "At",
            "At",
            "Rn",
            "Rn",
            "Fr",
            "Fr",
            "Ra",
            "Ra",
            "Ac",
            "Ac",
            "Th",
            "Th",
            "Pa",
            "Pa",
            "U",
            "U",
            "Np",
            "Np",
            "Pu",
            "Pu",
            "Am",
            "Am",
            "Cm",
            "Cm",
            "Bk",
            "Bk",
            "Cf",
            "Cf",
            "Es",
            "Es",
            "Fm",
            "Fm",
            "Md",
            "Md",
            "No",
            "No",
            "Lr",
            "Lr",
            "Rf",
            "Rf",
            "Db",
            "Db",
            "Sg",
            "Sg",
            "Bh",
            "Bh",
            "Hs",
            "Hs",
            "Mt",
            "Mt",
            "Ds",
            "Ds",
            "Rg",
            "Rg",
            "Cn",
            "Cn",
            "Nh",
            "Nh",
            "Fl",
            "Fl",
            "Mc",
            "Mc",
            "Lv",
            "Lv",
            "Ts",
            "Ts",
            "Og",
            "Og"
          ],
          "title": "Element",
          "type": "string"
        },
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        },
        "NmrEquiv": {
          "description": "Class to model `nmrequiv` attribute in `BlockEprnmr`\n\nAttributes\n----------\ngroups: list[`NmrGroup`]\n    List of groups of type NmrGroup that defines all groups of equivalent nuclei.",
          "properties": {
            "groups": {
              "items": {
                "$ref": "#/$defs/NmrGroup"
              },
              "title": "Groups",
              "type": "array"
            }
          },
          "required": [
            "groups"
          ],
          "title": "NmrEquiv",
          "type": "object"
        },
        "NmrGroup": {
          "description": "Class to model a singular group of equivalent nuclei for the `nmrspecequiv` attribute in `BlockEprnmr`.\n\nAttributes\n----------\ngroupnumber: int\n    Defines group number\natoms: `IntGroup`\n    Defines atoms that are grouped",
          "properties": {
            "groupnumber": {
              "exclusiveMinimum": 0,
              "title": "Groupnumber",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "groupnumber",
            "atoms"
          ],
          "title": "NmrGroup",
          "type": "object"
        },
        "Nuclei": {
          "description": "Class to model `nuclei` attribute in `BlockEprnmr`\n\nAttributes\n----------\nmode: \"all\" | NumList\n    Defines for which atoms properties are calculated\natom: Element\n    Defines for atoms of which type properties are calculated\nflags: `NucleiFlag`\n    Defines flags",
          "properties": {
            "mode": {
              "anyOf": [
                {
                  "const": "all",
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/NumList"
                }
              ],
              "default": "all",
              "title": "Mode"
            },
            "atom": {
              "$ref": "#/$defs/Element"
            },
            "flags": {
              "$ref": "#/$defs/NucleiFlag"
            }
          },
          "required": [
            "atom",
            "flags"
          ],
          "title": "Nuclei",
          "type": "object"
        },
        "NucleiFlag": {
          "description": "This class contains all flags for the `nuclei` parameter in `BlockEprnmr`.",
          "properties": {
            "ppp": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ppp"
            },
            "qqq": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qqq"
            },
            "iii": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Iii"
            },
            "ist": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ist"
            },
            "ssgn": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ssgn"
            },
            "aiso": {
              "default": false,
              "title": "Aiso",
              "type": "boolean"
            },
            "adip": {
              "default": false,
              "title": "Adip",
              "type": "boolean"
            },
            "aorb": {
              "default": false,
              "title": "Aorb",
              "type": "boolean"
            },
            "fgrad": {
              "default": false,
              "title": "Fgrad",
              "type": "boolean"
            },
            "rho": {
              "default": false,
              "title": "Rho",
              "type": "boolean"
            },
            "shift": {
              "default": false,
              "title": "Shift",
              "type": "boolean"
            },
            "ssdso": {
              "default": false,
              "title": "Ssdso",
              "type": "boolean"
            },
            "sspso": {
              "default": false,
              "title": "Sspso",
              "type": "boolean"
            },
            "ssfc": {
              "default": false,
              "title": "Ssfc",
              "type": "boolean"
            },
            "sssd": {
              "default": false,
              "title": "Sssd",
              "type": "boolean"
            },
            "ssall": {
              "default": false,
              "title": "Ssall",
              "type": "boolean"
            }
          },
          "title": "NucleiFlag",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %eprnmr block in ORCA",
      "properties": {
        "aftercoord": {
          "default": true,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "gtensor": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gtensor"
        },
        "gtensor_dso_zeff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gtensor Dso Zeff"
        },
        "gtensor_1el2el": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gtensor 1El2El"
        },
        "hfcgaugecorrection_zeff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Zeff"
        },
        "hfcgaugecorrection_angulargrid": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Angulargrid"
        },
        "hfcgaugecorrection_prunegrid": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Prunegrid"
        },
        "hfcgaugecorrection_intacc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Intacc"
        },
        "hfcgaugecorrection_bfcutoff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Bfcutoff"
        },
        "hfcgaugecorrection_wcutoff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Wcutoff"
        },
        "hfcgaugecorrection_numeric": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hfcgaugecorrection Numeric"
        },
        "nmrshielding": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrshielding"
        },
        "dtensor": {
          "anyOf": [
            {
              "enum": [
                "ss",
                "so",
                "soc",
                "ssandso"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dtensor"
        },
        "dsoc": {
          "anyOf": [
            {
              "enum": [
                "qro",
                "pk",
                "cp",
                "pcp",
                "cvw"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dsoc"
        },
        "dss": {
          "anyOf": [
            {
              "enum": [
                "direct",
                "uno"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dss"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "solver": {
          "anyOf": [
            {
              "enum": [
                "cg",
                "diis",
                "pople"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solver"
        },
        "tol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxdiis": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdiis"
        },
        "levelshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Levelshift"
        },
        "giao_1el": {
          "anyOf": [
            {
              "enum": [
                "giao_1el_numeric",
                "giao_1el_analytic"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Giao 1El"
        },
        "giao_2el": {
          "anyOf": [
            {
              "enum": [
                "giao_2el_same_as_scf",
                "giao_2el_analytic",
                "giao_2el_rijk",
                "giao_2el_rijcosx",
                "giao_2el_rijonx",
                "giao_2el_cosjx",
                "giao_2el_cosjonx",
                "giao_2el_exactjcosx",
                "giao_2el_exactjrik"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Giao 2El"
        },
        "spinspinrthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spinspinrthresh"
        },
        "printreducedcoupling": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printreducedcoupling"
        },
        "printeuler": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printeuler"
        },
        "nmrspectrum": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrspectrum"
        },
        "nmrref": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrref"
        },
        "nmrspecfreq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrspecfreq"
        },
        "nmrcoal": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrcoal"
        },
        "tau": {
          "anyOf": [
            {
              "enum": [
                "ms",
                "gi",
                "dobson"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tau"
        },
        "dospinadmixture": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dospinadmixture"
        },
        "nuclei": {
          "anyOf": [
            {
              "$ref": "#/$defs/Nuclei"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "zeff": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "origin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "enum": [
                "centerofmass",
                "centerofnuccharge",
                "centerofnuclearcharge",
                "centerofelcharge",
                "centerofspindens",
                "centerofspindensity",
                "giao"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Origin"
        },
        "locorbgbw": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "nmrshieldingfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "nmrcouplingfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "nmrspecequiv": {
          "anyOf": [
            {
              "$ref": "#/$defs/NmrEquiv"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockEprnmr",
      "type": "object"
    },
    "BlockFrag": {
      "$defs": {
        "FragDefinition": {
          "description": "Class to model definition `attribute` in `BlockFrag`",
          "properties": {
            "frags": {
              "items": {
                "$ref": "#/$defs/Fragment"
              },
              "minItems": 1,
              "title": "Frags",
              "type": "array"
            }
          },
          "title": "FragDefinition",
          "type": "object"
        },
        "FragProc": {
          "description": "Class to model `fragproc` attribute in `BlockFrag`",
          "properties": {
            "flags": {
              "items": {
                "enum": [
                  "extlib",
                  "connectivity",
                  "atomic",
                  "functionalgroups",
                  "coarsegrained",
                  "notassigned",
                  "backbone",
                  "seqbackbone",
                  "aabackbone",
                  "aminoacids",
                  "aasidechains",
                  "aascfinegrained",
                  "nabackbone",
                  "nabbfinegrained",
                  "seqnabackbone",
                  "nucleoticacid",
                  "nasidechains",
                  "solvents",
                  "water",
                  "extend",
                  "fusebyatoms",
                  "delextlib",
                  "delconnectivity",
                  "delatomic",
                  "delfunctionalgroups",
                  "delcoarsegrained",
                  "delbackbone",
                  "delseqbackbone",
                  "delaabackbone",
                  "delaminoacids",
                  "delaasidechains",
                  "delaascfinegrained",
                  "delnabackbone",
                  "delnabbfinegrained",
                  "delseqnabackbone",
                  "delnucleoticacid",
                  "delnasidechains",
                  "delsolvents",
                  "delwater"
                ],
                "type": "string"
              },
              "title": "Flags",
              "type": "array"
            }
          },
          "required": [
            "flags"
          ],
          "title": "FragProc",
          "type": "object"
        },
        "Fragment": {
          "description": "Class to model the fragment for the `Frags` class\n\nAttributes\n----------\nfragmentid: int\n    ID of fragment\natoms: IntGroup\n    Group of atoms for fragment",
          "properties": {
            "fragmentid": {
              "exclusiveMinimum": 0,
              "title": "Fragmentid",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "fragmentid",
            "atoms"
          ],
          "title": "Fragment",
          "type": "object"
        },
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "InputString": {
          "description": "Class to model strings inside block inputs. Main purpose is to override the str function.\n\nAttributes\n----------\nstring: str\n    String to be stored.",
          "properties": {
            "string": {
              "title": "String",
              "type": "string"
            }
          },
          "required": [
            "string"
          ],
          "title": "InputString",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        }
      },
      "description": "Class to model %frag block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "storefrags": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Storefrags"
        },
        "dointerfragbonds": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dointerfragbonds"
        },
        "fragproc": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragProc"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "usetopology": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usetopology"
        },
        "printinputflags": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printinputflags"
        },
        "topolfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "definition": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragDefinition"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "xyzfraglib": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputString"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockFrag",
      "type": "object"
    },
    "BlockFreq": {
      "$defs": {
        "HessList": {
          "description": "Class to model `hybrid_hess` and `partial_hess` attributes in `BlockFreq`",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "HessList",
          "type": "object"
        }
      },
      "description": "Class to model %freq block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "numfreq": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numfreq"
        },
        "anfreq": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Anfreq"
        },
        "dovcd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dovcd"
        },
        "centraldiff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Centraldiff"
        },
        "restart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Restart"
        },
        "increment": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Increment"
        },
        "quasirrho": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quasirrho"
        },
        "cutofffreq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cutofffreq"
        },
        "qrrhoreffreq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qrrhoreffreq"
        },
        "scalfreq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scalfreq"
        },
        "transinvar": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Transinvar"
        },
        "projecttr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Projecttr"
        },
        "finitediff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finitediff"
        },
        "accuracy": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Accuracy"
        },
        "hessgridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hessgridx"
        },
        "dryrun": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dryrun"
        },
        "nearir": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nearir"
        },
        "xtbvpt2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xtbvpt2"
        },
        "delq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Delq"
        },
        "temp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Temp"
        },
        "pressure": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pressure"
        },
        "hybrid_hess": {
          "anyOf": [
            {
              "$ref": "#/$defs/HessList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "partial_hess": {
          "anyOf": [
            {
              "$ref": "#/$defs/HessList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "inhessname": {
          "anyOf": [
            {
              "format": "file-path",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Inhessname"
        }
      },
      "title": "BlockFreq",
      "type": "object"
    },
    "BlockGeom": {
      "$defs": {
        "ConnectFragments": {
          "description": "Class used to model the `connectfragments` attribute in `BlockGeom`\n\nAttributes\n----------\nconstraints: list[FragConstraint]\n    list of constraints of type `FragConstraint`",
          "properties": {
            "constraints": {
              "items": {
                "$ref": "#/$defs/FragConstraint"
              },
              "title": "Constraints",
              "type": "array"
            }
          },
          "required": [
            "constraints"
          ],
          "title": "ConnectFragments",
          "type": "object"
        },
        "Constraint": {
          "description": "Class to model a singular constraint for the `constraints` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"C\",\"D\"}\n    Define mode of constraint\natom1: int | \"*\"\n    Specify the first atom ( can also be *)\natom2: int | \"*\"\n    Specify the second atom ( can also be *)\natom3: int | \"*\"\n    Specify the third atom ( can also be *)\natom4: int | \"*\"\n    Specify the fourth atom ( can also be *)\nvalue: float\n    Specify value of the constraint",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "C",
                "D"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                }
              ],
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "value": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Value"
            }
          },
          "required": [
            "mode",
            "atom1"
          ],
          "title": "Constraint",
          "type": "object"
        },
        "Constraints": {
          "description": "Class to model the `constraints` attribute in `BlockGeom`\n\nAttributes\n-----------\nconstraints: list[`Constraint`]\n    list of constraints of type `Constraint`",
          "properties": {
            "constraints": {
              "items": {
                "$ref": "#/$defs/Constraint"
              },
              "title": "Constraints",
              "type": "array"
            }
          },
          "required": [
            "constraints"
          ],
          "title": "Constraints",
          "type": "object"
        },
        "Element": {
          "description": "Class that stores a list of all elements.\nWhen an element is required as an input, it is to be selected from this class to avoid user error",
          "enum": [
            "H",
            "H",
            "He",
            "He",
            "Li",
            "Li",
            "Be",
            "Be",
            "B",
            "B",
            "C",
            "C",
            "N",
            "N",
            "O",
            "O",
            "F",
            "F",
            "Ne",
            "Ne",
            "Na",
            "Na",
            "Mg",
            "Mg",
            "Al",
            "Al",
            "Si",
            "Si",
            "P",
            "P",
            "S",
            "S",
            "Cl",
            "Cl",
            "Ar",
            "Ar",
            "K",
            "K",
            "Ca",
            "Ca",
            "Sc",
            "Sc",
            "Ti",
            "Ti",
            "V",
            "V",
            "Cr",
            "Cr",
            "Mn",
            "Mn",
            "Fe",
            "Fe",
            "Co",
            "Co",
            "Ni",
            "Ni",
            "Cu",
            "Cu",
            "Zn",
            "Zn",
            "Ga",
            "Ga",
            "Ge",
            "Ge",
            "As",
            "As",
            "Se",
            "Se",
            "Br",
            "Br",
            "Kr",
            "Kr",
            "Rb",
            "Rb",
            "Sr",
            "Sr",
            "Y",
            "Y",
            "Zr",
            "Zr",
            "Nb",
            "Nb",
            "Mo",
            "Mo",
            "Tc",
            "Tc",
            "Ru",
            "Ru",
            "Rh",
            "Rh",
            "Pd",
            "Pd",
            "Ag",
            "Ag",
            "Cd",
            "Cd",
            "In",
            "In",
            "Sn",
            "Sn",
            "Sb",
            "Sb",
            "Te",
            "Te",
            "I",
            "I",
            "Xe",
            "Xe",
            "Cs",
            "Cs",
            "Ba",
            "Ba",
            "La",
            "La",
            "Ce",
            "Ce",
            "Pr",
            "Pr",
            "Nd",
            "Nd",
            "Pm",
            "Pm",
            "Sm",
            "Sm",
            "Eu",
            "Eu",
            "Gd",
            "Gd",
            "Tb",
            "Tb",
            "Dy",
            "Dy",
            "Ho",
            "Ho",
            "Er",
            "Er",
            "Tm",
            "Tm",
            "Yb",
            "Yb",
            "Lu",
            "Lu",
            "Hf",
            "Hf",
            "Ta",
            "Ta",
            "W",
            "W",
            "Re",
            "Re",
            "Os",
            "Os",
            "Ir",
            "Ir",
            "Pt",
            "Pt",
            "Au",
            "Au",
            "Hg",
            "Hg",
            "Tl",
            "Tl",
            "Pb",
            "Pb",
            "Bi",
            "Bi",
            "Po",
            "Po",
            "At",
            "At",
            "Rn",
            "Rn",
            "Fr",
            "Fr",
            "Ra",
            "Ra",
            "Ac",
            "Ac",
            "Th",
            "Th",
            "Pa",
            "Pa",
            "U",
            "U",
            "Np",
            "Np",
            "Pu",
            "Pu",
            "Am",
            "Am",
            "Cm",
            "Cm",
            "Bk",
            "Bk",
            "Cf",
            "Cf",
            "Es",
            "Es",
            "Fm",
            "Fm",
            "Md",
            "Md",
            "No",
            "No",
            "Lr",
            "Lr",
            "Rf",
            "Rf",
            "Db",
            "Db",
            "Sg",
            "Sg",
            "Bh",
            "Bh",
            "Hs",
            "Hs",
            "Mt",
            "Mt",
            "Ds",
            "Ds",
            "Rg",
            "Rg",
            "Cn",
            "Cn",
            "Nh",
            "Nh",
            "Fl",
            "Fl",
            "Mc",
            "Mc",
            "Lv",
            "Lv",
            "Ts",
            "Ts",
            "Og",
            "Og"
          ],
          "title": "Element",
          "type": "string"
        },
        "FragConstraint": {
          "description": "Class to model individual constraints for the `ConnectFragment` class\n\nAttributes\n----------\nfragment1: int\n    Define first fragment\nfragment2: int\n    Define second fragment\naction: {\"C\", \"O\"}\n    Define action\natom1: int\n    Specify first atom\natom2: int\n    Specify second atrom",
          "properties": {
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "fragment1": {
              "exclusiveMinimum": 0,
              "title": "Fragment1",
              "type": "integer"
            },
            "fragment2": {
              "exclusiveMinimum": 0,
              "title": "Fragment2",
              "type": "integer"
            },
            "action": {
              "enum": [
                "C",
                "O"
              ],
              "title": "Action",
              "type": "string"
            }
          },
          "required": [
            "mode",
            "fragment1",
            "fragment2",
            "action"
          ],
          "title": "FragConstraint",
          "type": "object"
        },
        "FragList": {
          "description": "Class used to model the `rigidfrags`, `relaxfrags`, `relaxhfrags`, `ghostfrags`, `constrainfragments` attributes in `BlockGeom`",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "FragList",
          "type": "object"
        },
        "Fragment": {
          "description": "Class to model the fragment for the `Frags` class\n\nAttributes\n----------\nfragmentid: int\n    ID of fragment\natoms: IntGroup\n    Group of atoms for fragment",
          "properties": {
            "fragmentid": {
              "exclusiveMinimum": 0,
              "title": "Fragmentid",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "fragmentid",
            "atoms"
          ],
          "title": "Fragment",
          "type": "object"
        },
        "Frags": {
          "description": "Class to model the `frags` attribute for `BlockGeom`\n\nAttributes\n----------\nfrags: list[`Fragment`]\n    list of fragment definitions of type `Fragment`",
          "properties": {
            "frags": {
              "items": {
                "$ref": "#/$defs/Fragment"
              },
              "minItems": 1,
              "title": "Frags",
              "type": "array"
            }
          },
          "title": "Frags",
          "type": "object"
        },
        "Hybrid": {
          "description": "Class to model `hybrid` attribute in `BlockGeom`\n\nAttributes\n----------\nlist: `NumList`",
          "properties": {
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "list": {
              "$ref": "#/$defs/NumList"
            }
          },
          "required": [
            "mode",
            "list"
          ],
          "title": "Hybrid",
          "type": "object"
        },
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        },
        "Modify": {
          "description": "Class to model individual modifications for `ModifyInternal` class.\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\"}\n    Defines mode for modification\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify third atom\natom4: int\n    Specify fourth atom",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "minimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "minimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "action": {
              "enum": [
                "A",
                "R"
              ],
              "title": "Action",
              "type": "string"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2",
            "action"
          ],
          "title": "Modify",
          "type": "object"
        },
        "ModifyInternal": {
          "description": "Class used to model the `modify_internal` attribute in `BlockGeom`\n\nAttributes\n----------\nmodifications: list[`Modify`]\n    List of modifications of type `Modify`",
          "properties": {
            "modifications": {
              "items": {
                "$ref": "#/$defs/Modify"
              },
              "title": "Modifications",
              "type": "array"
            }
          },
          "required": [
            "modifications"
          ],
          "title": "ModifyInternal",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        },
        "Potential": {
          "description": "Class to model `potential` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: \"C\"\n\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\nvalue: float\n    Define value",
          "properties": {
            "mode": {
              "const": "C",
              "default": "C",
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "minimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "minimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "value": {
              "title": "Value",
              "type": "number"
            }
          },
          "required": [
            "atom1",
            "atom2",
            "value"
          ],
          "title": "Potential",
          "type": "object"
        },
        "Scan": {
          "description": "Class to model the `scan` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\"}\n    Defines mode for modification\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify optional third atom\natom4: int\n    Specify optional fourth atom\nstartvalue: float\n    Define start value\nendvalue: float\n    Define end value\nsteps: int\n    Define number of steps\nvaluelist: list[float]\n    Define the values",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "minimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "minimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "startvalue": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Startvalue"
            },
            "endvalue": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Endvalue"
            },
            "steps": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Steps"
            },
            "valuelist": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Valuelist"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2"
          ],
          "title": "Scan",
          "type": "object"
        },
        "TSMode": {
          "description": "Class to model the `tsmode` attribute in `BlockGeom`.\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\",\"M\"}\n    Defines mode for modification\nx: int\n    choose mode to follow uphill in TS optimization\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify third atom\natom4: int\n    Specify fourth atom",
          "properties": {
            "mode": {
              "default": "M",
              "enum": [
                "A",
                "B",
                "D",
                "M"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "x": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "X"
            }
          },
          "title": "TSMode",
          "type": "object"
        }
      },
      "description": "Class to model %geom block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "projecttr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Projecttr"
        },
        "maxstep": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxstep"
        },
        "trust": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Trust"
        },
        "bmatderiv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bmatderiv"
        },
        "updatefromcart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Updatefromcart"
        },
        "cartfallback": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cartfallback"
        },
        "maxnsteptrial": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxnsteptrial"
        },
        "largeinternals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Largeinternals"
        },
        "interpolate": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Interpolate"
        },
        "shake": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shake"
        },
        "shakermsd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shakermsd"
        },
        "coordsys": {
          "anyOf": [
            {
              "enum": [
                "cartesian",
                "redundant"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coordsys"
        },
        "update": {
          "anyOf": [
            {
              "enum": [
                "noupdate",
                "bfgs",
                "dfp",
                "bofill",
                "powell",
                "sr1",
                "fs",
                "flowpsb",
                "lbfgs",
                "l-bfgs"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Update"
        },
        "nstepsinresethess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nstepsinresethess"
        },
        "nresethess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nresethess"
        },
        "resethessmethod": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Resethessmethod"
        },
        "maxrmsdresethess": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxrmsdresethess"
        },
        "printinternals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printinternals"
        },
        "step": {
          "anyOf": [
            {
              "enum": [
                "qn",
                "rfo",
                "gmf",
                "prfo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Step"
        },
        "inhess": {
          "anyOf": [
            {
              "enum": [
                "unit",
                "lindh",
                "model",
                "almloef",
                "schlegel",
                "swart",
                "read",
                "xtb0",
                "xtb1",
                "xtb2",
                "gfnff",
                "gfn-ff"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Inhess"
        },
        "tole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tole"
        },
        "tolrmsg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolrmsg"
        },
        "tolmaxg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolmaxg"
        },
        "tolrmsd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolrmsd"
        },
        "tolmaxd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolmaxd"
        },
        "tolesc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolesc"
        },
        "enforcestrictconvergence": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enforcestrictconvergence"
        },
        "usesoscf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usesoscf"
        },
        "reduceprint": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reduceprint"
        },
        "optguess": {
          "anyOf": [
            {
              "enum": [
                "patom",
                "pmodel",
                "hueckel",
                "oneelec",
                "moread"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Optguess"
        },
        "convergence": {
          "anyOf": [
            {
              "enum": [
                "loose",
                "normal",
                "tight"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convergence"
        },
        "fullscan": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fullscan"
        },
        "refinetsguess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refinetsguess"
        },
        "simul_scan": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Simul Scan"
        },
        "optimizehydrogens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Optimizehydrogens"
        },
        "freezehydrogens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezehydrogens"
        },
        "invertconstraints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Invertconstraints"
        },
        "ts_search": {
          "anyOf": [
            {
              "const": "ef",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ts Search"
        },
        "numhess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numhess"
        },
        "numhess_centraldiff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numhess Centraldiff"
        },
        "calc_hess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Calc Hess"
        },
        "recalc_hess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Recalc Hess"
        },
        "read_temp_hess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Read Temp Hess"
        },
        "reconvcharge": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reconvcharge"
        },
        "ts_active_atoms_factor": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ts Active Atoms Factor"
        },
        "hess_modification": {
          "anyOf": [
            {
              "enum": [
                "shift_diag",
                "ev_reverse"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess Modification"
        },
        "hess_minev": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess Minev"
        },
        "scalepcdamp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scalepcdamp"
        },
        "scalepccenter": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scalepccenter"
        },
        "doscaleembeddingcharges": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doscaleembeddingcharges"
        },
        "scaleembeddingpc": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scaleembeddingpc"
        },
        "scaleembeddingpc_a": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scaleembeddingpc A"
        },
        "scaleembeddingpc_b": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scaleembeddingpc B"
        },
        "addextrabonds": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Addextrabonds"
        },
        "addextrabonds_maxlength": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Addextrabonds Maxlength"
        },
        "addextrabonds_maxdist": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Addextrabonds Maxdist"
        },
        "reduceredints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reduceredints"
        },
        "printinternalhess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printinternalhess"
        },
        "printtsactiveatoms": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printtsactiveatoms"
        },
        "thr_printtsactiveatoms": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thr Printtsactiveatoms"
        },
        "hess2projectint": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess2Projectint"
        },
        "hess2projectintbonds": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess2Projectintbonds"
        },
        "hess2projectintangles": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess2Projectintangles"
        },
        "hess2projectintdihedrals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess2Projectintdihedrals"
        },
        "hess2projectintimpropers": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hess2Projectintimpropers"
        },
        "usespherepot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usespherepot"
        },
        "useboxpot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useboxpot"
        },
        "useellipsepot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useellipsepot"
        },
        "boxpot": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Boxpot"
        },
        "spherepot": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spherepot"
        },
        "ellipsepot": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ellipsepot"
        },
        "wallexponent": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Wallexponent"
        },
        "followmode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followmode"
        },
        "fmkeepref": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fmkeepref"
        },
        "fmminoverlap": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fmminoverlap"
        },
        "rigidbody": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rigidbody"
        },
        "check_topo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Check Topo"
        },
        "inhessname": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "inhessname2": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "optelement": {
          "anyOf": [
            {
              "$ref": "#/$defs/Element"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "hybridhess": {
          "anyOf": [
            {
              "$ref": "#/$defs/Hybrid"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "hybridhess_core": {
          "anyOf": [
            {
              "$ref": "#/$defs/Hybrid"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ts_active_atoms": {
          "anyOf": [
            {
              "$ref": "#/$defs/Hybrid"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ts_active_atoms2": {
          "anyOf": [
            {
              "$ref": "#/$defs/Hybrid"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "constraints": {
          "anyOf": [
            {
              "$ref": "#/$defs/Constraints"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "potentials": {
          "anyOf": [
            {
              "$ref": "#/$defs/Potential"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "scan": {
          "anyOf": [
            {
              "$ref": "#/$defs/Scan"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ts_mode": {
          "anyOf": [
            {
              "$ref": "#/$defs/TSMode"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "modify_internal": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModifyInternal"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "connectfragments": {
          "anyOf": [
            {
              "$ref": "#/$defs/ConnectFragments"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "constrainfragments": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "rigidfrags": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "relaxfrags": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "relaxhfrags": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ghostfrags": {
          "anyOf": [
            {
              "$ref": "#/$defs/FragList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "frags": {
          "anyOf": [
            {
              "$ref": "#/$defs/Frags"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockGeom",
      "type": "object"
    },
    "BlockGoat": {
      "$defs": {
        "AtomList": {
          "description": "Class to model `uphillatoms`, `topobreak`, `reactiveatoms` attributes in `BlockGeom`.",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "AtomList",
          "type": "object"
        },
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %goat block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "usegoat": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usegoat"
        },
        "fac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fac"
        },
        "gradcompmu": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gradcompmu"
        },
        "gradcompsigma": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gradcompsigma"
        },
        "initemp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Initemp"
        },
        "mintemp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mintemp"
        },
        "tempmult": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tempmult"
        },
        "convcrit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convcrit"
        },
        "templist": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Templist"
        },
        "maxgradruns": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxgradruns"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxstruc": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxstruc"
        },
        "randomtype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomtype"
        },
        "randomangle": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomangle"
        },
        "endiff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Endiff"
        },
        "rmsd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rmsd"
        },
        "rotconstdiff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rotconstdiff"
        },
        "maxrotconstdiff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxrotconstdiff"
        },
        "enperatom": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enperatom"
        },
        "maxenperatom": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxenperatom"
        },
        "freeze": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freeze"
        },
        "freezebonds": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezebonds"
        },
        "freezeangles": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezeangles"
        },
        "freezecistrans": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezecistrans"
        },
        "freezeamides": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freezeamides"
        },
        "autofrag": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autofrag"
        },
        "updateinternals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Updateinternals"
        },
        "maxoptiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxoptiter"
        },
        "minglobaliter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Minglobaliter"
        },
        "maxglobaliter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxglobaliter"
        },
        "checktopo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checktopo"
        },
        "maxtopodiff": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxtopodiff"
        },
        "keeptoporeact": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keeptoporeact"
        },
        "randommaxgradcomp": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randommaxgradcomp"
        },
        "align": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Align"
        },
        "comparefull": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Comparefull"
        },
        "explore": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Explore"
        },
        "react": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "React"
        },
        "optts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Optts"
        },
        "diversity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diversity"
        },
        "autocoarsegrain": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autocoarsegrain"
        },
        "randomseed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomseed"
        },
        "maxcoresopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcoresopt"
        },
        "splitworkers": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Splitworkers"
        },
        "autosplit": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autosplit"
        },
        "maxuphilliter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxuphilliter"
        },
        "uphilltrust": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Uphilltrust"
        },
        "uphillmaxrmsd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Uphillmaxrmsd"
        },
        "keepdata": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepdata"
        },
        "nworkers": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nworkers"
        },
        "maxitermult": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxitermult"
        },
        "rmsdmetric": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rmsdmetric"
        },
        "maxentropy": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxentropy"
        },
        "conftemp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Conftemp"
        },
        "mindels": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mindels"
        },
        "rotdegen": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rotdegen"
        },
        "confdegen": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Confdegen"
        },
        "rmsdboost": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rmsdboost"
        },
        "gradboostminstruc": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gradboostminstruc"
        },
        "rejectprevious": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rejectprevious"
        },
        "reduceinternals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reduceinternals"
        },
        "sortbytopo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sortbytopo"
        },
        "pushfraguphill": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pushfraguphill"
        },
        "gfnuphill": {
          "anyOf": [
            {
              "enum": [
                "XTB0",
                "XTB1",
                "XTB2",
                "GFNFF"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gfnuphill"
        },
        "printinternals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printinternals"
        },
        "freeheteroatoms": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freeheteroatoms"
        },
        "freenonhatoms": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freenonhatoms"
        },
        "freefragments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freefragments"
        },
        "maxen": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxen"
        },
        "bondfactor": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bondfactor"
        },
        "skipinitopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Skipinitopt"
        },
        "writereactfile": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Writereactfile"
        },
        "maxcoordnumber": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcoordnumber"
        },
        "fixcoordnumber": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fixcoordnumber"
        },
        "workerrandomstart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Workerrandomstart"
        },
        "autowall": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autowall"
        },
        "restartfromfirst": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Restartfromfirst"
        },
        "uphillatoms": {
          "anyOf": [
            {
              "$ref": "#/$defs/AtomList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "topobreak": {
          "anyOf": [
            {
              "$ref": "#/$defs/AtomList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "reactiveatoms": {
          "anyOf": [
            {
              "$ref": "#/$defs/AtomList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ensemblefile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockGoat",
      "type": "object"
    },
    "BlockIce": {
      "description": "Class to model %ice block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nel"
        },
        "norb": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Norb"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "mult": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "tgen": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tgen"
        },
        "tvar": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tvar"
        },
        "etol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etol"
        },
        "icetype": {
          "anyOf": [
            {
              "enum": [
                "CFGs",
                "CSFs",
                "DETs"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Icetype"
        },
        "integrals": {
          "anyOf": [
            {
              "enum": [
                "exact",
                "ri"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Integrals"
        }
      },
      "required": [
        "integrals"
      ],
      "title": "BlockIce",
      "type": "object"
    },
    "BlockIrc": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "Internal": {
          "description": "Class to model individual internal coordinates for `Internals` class\n\nAttributes\n-----------\nmode: {\"A\",\"B\",\"D\",\"I\"}\n    Define mode\natom1: int\n    Define first atom\natom2: int\n    Define second atom\natom3: int\n    Define third atom\natom4: int\n    Define fourth atom",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D",
                "I"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "exclusiveMinimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "exclusiveMinimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2"
          ],
          "title": "Internal",
          "type": "object"
        },
        "Internals": {
          "description": "Class to model `internals`\n\nAttributes\n----------\ninternals: list[`Internal`]\n    list of internal coordinate definitions of type `Internal`",
          "properties": {
            "internals": {
              "items": {
                "$ref": "#/$defs/Internal"
              },
              "title": "Internals",
              "type": "array"
            }
          },
          "required": [
            "internals"
          ],
          "title": "Internals",
          "type": "object"
        }
      },
      "description": "Class to model %irc block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "direction": {
          "anyOf": [
            {
              "enum": [
                "both",
                "forward",
                "backward",
                "down"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Direction"
        },
        "inithess": {
          "anyOf": [
            {
              "enum": [
                "read",
                "calc_anfreq",
                "calc_numfreq"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Inithess"
        },
        "hessmode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hessmode"
        },
        "irc_centraldiff": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irc Centraldiff"
        },
        "init_displ": {
          "anyOf": [
            {
              "enum": [
                "de",
                "length"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Init Displ"
        },
        "scale_init_displ": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scale Init Displ"
        },
        "de_init_displ": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "De Init Displ"
        },
        "scale_displ_sd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scale Displ Sd"
        },
        "scale_displ_sd_corr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scale Displ Sd Corr"
        },
        "adapt_scale_displ": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adapt Scale Displ"
        },
        "do_sd_corr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Do Sd Corr"
        },
        "sd_parabolicfit": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sd Parabolicfit"
        },
        "sd_corr_parabolicfit": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sd Corr Parabolicfit"
        },
        "interpolate_only": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Interpolate Only"
        },
        "tolmaxg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolmaxg"
        },
        "tolrmsg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolrmsg"
        },
        "tolmaxd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolmaxd"
        },
        "tolrmsd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolrmsd"
        },
        "tole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tole"
        },
        "follow_coordtype": {
          "anyOf": [
            {
              "const": "cartesian",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Follow Coordtype"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "hess_filename": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "monitor_internals": {
          "anyOf": [
            {
              "$ref": "#/$defs/Internals"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockIrc",
      "type": "object"
    },
    "BlockLoc": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %loc block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "locmet": {
          "anyOf": [
            {
              "enum": [
                "pipekmezey",
                "pm",
                "fosterboys",
                "fb",
                "iaoibo",
                "iaoboys",
                "newboys",
                "ahfb",
                "pmvvo",
                "livvo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmet"
        },
        "locmetvirt": {
          "anyOf": [
            {
              "enum": [
                "pipekmezey",
                "pm",
                "fosterboys",
                "fb",
                "iaoibo",
                "iaoboys",
                "newboys",
                "ahfb",
                "pmvvo",
                "livvo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmetvirt"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "randomize": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomize"
        },
        "occ": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Occ"
        },
        "virt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Virt"
        },
        "t_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "T Core"
        },
        "t_strong": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "T Strong"
        },
        "t_bond": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "T Bond"
        },
        "tol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol"
        },
        "orbspread": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbspread"
        },
        "popmethod": {
          "anyOf": [
            {
              "enum": [
                "mulliken",
                "loewdin"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Popmethod"
        },
        "iaobasis": {
          "anyOf": [
            {
              "enum": [
                "scf_sv",
                "sto_3g",
                "mini",
                "ano_sz",
                "ano_rcc_mb",
                "minao_auto_pp"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iaobasis"
        },
        "loctol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctol"
        },
        "loctolled": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctolled"
        },
        "loctolrel": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctolrel"
        },
        "dvdnroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dvdnroots"
        },
        "dvdnrootsfinal": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dvdnrootsfinal"
        },
        "dvdmaxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dvdmaxdim"
        },
        "dvdmaxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dvdmaxiter"
        },
        "file": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockLoc",
      "type": "object"
    },
    "BlockMdci": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %mdci block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "citype": {
          "anyOf": [
            {
              "enum": [
                "cisd",
                "ccsd"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Citype"
        },
        "dosingles": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dosingles"
        },
        "dotriples": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotriples"
        },
        "usedavcis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usedavcis"
        },
        "doeom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doeom"
        },
        "doip": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doip"
        },
        "doea": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doea"
        },
        "doalpha": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doalpha"
        },
        "dobeta": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dobeta"
        },
        "dress3es": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dress3Es"
        },
        "dress3ed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dress3Ed"
        },
        "doaox3e": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doaox3E"
        },
        "docosxeom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docosxeom"
        },
        "dosteom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dosteom"
        },
        "dosimpledens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dosimpledens"
        },
        "addl2term": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Addl2Term"
        },
        "updatel1": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Updatel1"
        },
        "addddterm": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Addddterm"
        },
        "dotransient": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotransient"
        },
        "dotriplet": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotriplet"
        },
        "dotdm": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotdm"
        },
        "doleft": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doleft"
        },
        "dorootwise": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dorootwise"
        },
        "nrootsperbatch": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nrootsperbatch"
        },
        "dosolv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dosolv"
        },
        "cvsep": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cvsep"
        },
        "docvs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docvs"
        },
        "xesfwhm": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xesfwhm"
        },
        "xesnpoints": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xesnpoints"
        },
        "xesnormalize": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xesnormalize"
        },
        "multicoreorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Multicoreorb"
        },
        "rijcosxcis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rijcosxcis"
        },
        "docisnatpt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docisnatpt"
        },
        "ccsd2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ccsd2"
        },
        "steomact": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Steomact"
        },
        "coretrans": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coretrans"
        },
        "acthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Acthresh"
        },
        "steomsoc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Steomsoc"
        },
        "donto": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donto"
        },
        "dorijcosx": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dorijcosx"
        },
        "recon2ed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Recon2Ed"
        },
        "dlpnosteom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlpnosteom"
        },
        "cc2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cc2"
        },
        "dodyson": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodyson"
        },
        "dlpnoeom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlpnoeom"
        },
        "adc2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adc2"
        },
        "docd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docd"
        },
        "dtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dtol"
        },
        "oorb": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Oorb"
        },
        "vorb": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vorb"
        },
        "dorecan": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dorecan"
        },
        "invtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Invtol"
        },
        "ipsthrs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ipsthrs"
        },
        "easthrs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Easthrs"
        },
        "othresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Othresh"
        },
        "vthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vthresh"
        },
        "docisnat": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docisnat"
        },
        "dostoresteom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dostoresteom"
        },
        "dlpnoactspace": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlpnoactspace"
        },
        "directdresssteom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Directdresssteom"
        },
        "dosteomnattransorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dosteomnattransorb"
        },
        "doeommp2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doeommp2"
        },
        "dolpnoeom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dolpnoeom"
        },
        "dolpnosteom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dolpnosteom"
        },
        "docore": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docore"
        },
        "ndav": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ndav"
        },
        "nactip": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactip"
        },
        "nactea": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactea"
        },
        "nactip_a": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactip A"
        },
        "nactea_a": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactea A"
        },
        "nactip_b": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactip B"
        },
        "nactea_b": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nactea B"
        },
        "corehole": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corehole"
        },
        "checkeachroot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checkeachroot"
        },
        "roothoming": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Roothoming"
        },
        "followcis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Followcis"
        },
        "dolanczos": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dolanczos"
        },
        "doolsen": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doolsen"
        },
        "usecisupdate": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usecisupdate"
        },
        "steomguess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Steomguess"
        },
        "useeomopts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useeomopts"
        },
        "useeomoptd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useeomoptd"
        },
        "ninits": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ninits"
        },
        "localize": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Localize"
        },
        "locmet": {
          "anyOf": [
            {
              "enum": [
                "pipekmezey",
                "pm",
                "fosterboys",
                "fb",
                "iaoibo",
                "iaoboys",
                "newboys",
                "ahfb"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmet"
        },
        "locrandom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locrandom"
        },
        "locnattempts": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locnattempts"
        },
        "loctol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctol"
        },
        "loctolled": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctolled"
        },
        "loctolrel": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctolrel"
        },
        "locmaxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmaxiter"
        },
        "locmaxiterled": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmaxiterled"
        },
        "dodidplot": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodidplot"
        },
        "covalpol": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Covalpol"
        },
        "adld": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adld"
        },
        "adld_mulliken": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adld Mulliken"
        },
        "adld_loewdin": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adld Loewdin"
        },
        "adld_hirshfeld": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adld Hirshfeld"
        },
        "adld_printspin": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adld Printspin"
        },
        "lmoread": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmoread"
        },
        "lmorefprint": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmorefprint"
        },
        "domdoi": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Domdoi"
        },
        "domdoi_cc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Domdoi Cc"
        },
        "led": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Led"
        },
        "pnoextrapolation": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnoextrapolation"
        },
        "doledhf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doledhf"
        },
        "brueckner": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Brueckner"
        },
        "dof12": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dof12"
        },
        "dof12ri": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dof12Ri"
        },
        "f12": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "F12"
        },
        "dof12vt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dof12Vt"
        },
        "coreopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coreopt"
        },
        "zsimple": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zsimple"
        },
        "useqros": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useqros"
        },
        "userhfints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Userhfints"
        },
        "useseparatealphabeta": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useseparatealphabeta"
        },
        "natorbiters": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natorbiters"
        },
        "donatorbs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donatorbs"
        },
        "pno": {
          "anyOf": [
            {
              "enum": [
                "none",
                "diagonal",
                "diag",
                "full",
                "f12",
                "peo",
                "f12peo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pno"
        },
        "pnonorm": {
          "anyOf": [
            {
              "enum": [
                "iepanorm",
                "mp2norm"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnonorm"
        },
        "nrmp2pairs_trip": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nrmp2Pairs Trip"
        },
        "paooverlapthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Paooverlapthresh"
        },
        "usefulllmp2guess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usefulllmp2Guess"
        },
        "lmp2maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmp2Maxiter"
        },
        "lmp2tole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmp2Tole"
        },
        "lmp2tolr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmp2Tolr"
        },
        "lmp2fcut": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmp2Fcut"
        },
        "lmp2scaletcutpno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lmp2Scaletcutpno"
        },
        "singles_multilevel_mode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Singles Multilevel Mode"
        },
        "maxdeloc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdeloc"
        },
        "overlapt": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Overlapt"
        },
        "pnoselection": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnoselection"
        },
        "pnosel": {
          "anyOf": [
            {
              "enum": [
                "occupationnumber",
                "occnum",
                "occnum_en_enorder",
                "energy",
                "occnum_en"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnosel"
        },
        "pnooper": {
          "anyOf": [
            {
              "enum": [
                "default",
                "fock",
                "psfock"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnooper"
        },
        "pnof12corr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnof12Corr"
        },
        "pnof12coupling": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnof12Coupling"
        },
        "pnodens": {
          "anyOf": [
            {
              "enum": [
                "spinfree",
                "alphabeta"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnodens"
        },
        "pnosigmaopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnosigmaopt"
        },
        "pnosigma": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pnosigma"
        },
        "density": {
          "anyOf": [
            {
              "enum": [
                "none",
                "linearized",
                "unrelaxed",
                "orbopt"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Density"
        },
        "enforce_ccsd_density": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enforce Ccsd Density"
        },
        "triples_lin_dens": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triples Lin Dens"
        },
        "kcopt": {
          "anyOf": [
            {
              "enum": [
                "kc_ao",
                "kc_mo",
                "kc_mo_ip",
                "kc_mo_ap",
                "kc_ri",
                "kc_ri2",
                "kc_aox",
                "kc_aox_gen",
                "kc_locaox",
                "kc_aoblas",
                "kc_cosx",
                "kc_ripno"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kcopt"
        },
        "gridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridx"
        },
        "usexgrid": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usexgrid"
        },
        "xcorrection": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xcorrection"
        },
        "intaccx": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Intaccx"
        },
        "tcutint": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutint"
        },
        "tcutpairs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpairs"
        },
        "tcutpno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpno"
        },
        "tcuten": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcuten"
        },
        "tcutmkn": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutmkn"
        },
        "tcuttno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcuttno"
        },
        "ntcuttno": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ntcuttno"
        },
        "tcuttnostep": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcuttnostep"
        },
        "tcutpairsinter": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpairsinter"
        },
        "tcutpnointer": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpnointer"
        },
        "tcutmkninter": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutmkninter"
        },
        "notriplesfragments": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Notriplesfragments"
        },
        "fragtscaletcutpno_ss": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragtscaletcutpno Ss"
        },
        "fragtscaletcutpno_sd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragtscaletcutpno Sd"
        },
        "fragtscaletcutpno_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragtscaletcutpno Core"
        },
        "fragtscaletcutpairs_somo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragtscaletcutpairs Somo"
        },
        "fragtscaletcutpairs_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragtscaletcutpairs Core"
        },
        "tcutdoaux": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdoaux"
        },
        "tcutdo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdo"
        },
        "tcutpnosingles": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpnosingles"
        },
        "tcutdelocinter": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdelocinter"
        },
        "tcutprescr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutprescr"
        },
        "tcutosv": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutosv"
        },
        "tcutdoij": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdoij"
        },
        "tcutc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutc"
        },
        "tcutcmo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutcmo"
        },
        "tcutcpao": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutcpao"
        },
        "tcutdopre": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdopre"
        },
        "tscalemp2pairs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscalemp2Pairs"
        },
        "tcutpno_scale": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpno Scale"
        },
        "tscalemknstrong": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscalemknstrong"
        },
        "tscaledostrong": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscaledostrong"
        },
        "tscalemknweak": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscalemknweak"
        },
        "tscaledoweak": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscaledoweak"
        },
        "pairpairtermstype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pairpairtermstype"
        },
        "tscaletcutpairs_somo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscaletcutpairs Somo"
        },
        "tscaletcutpairs_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscaletcutpairs Core"
        },
        "tscaletcutpnosingles": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscaletcutpnosingles"
        },
        "tcompletenesspnoocc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcompletenesspnoocc"
        },
        "tcompletenesspnooccsingles": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcompletenesspnooccsingles"
        },
        "doumpinnevpno": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doumpinnevpno"
        },
        "tcutgso": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutgso"
        },
        "tnat": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tnat"
        },
        "tfrac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tfrac"
        },
        "usescs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usescs"
        },
        "pt": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pt"
        },
        "ps": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ps"
        },
        "dopertnatorbs": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dopertnatorbs"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "nrootscisnat": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nrootscisnat"
        },
        "excitations": {
          "anyOf": [
            {
              "enum": [
                "it",
                "ia",
                "ta",
                "ijtu",
                "ijta",
                "ijab",
                "ituv",
                "itua",
                "itau",
                "itab",
                "tuvw",
                "tuva",
                "tuab"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Excitations"
        },
        "trafotype": {
          "anyOf": [
            {
              "enum": [
                "trafo_ri",
                "trafo_jk",
                "trafo_jandk",
                "trafo_full",
                "trafo_ricosx"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Trafotype"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "tprint": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tprint"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxcore": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcore"
        },
        "stol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stol"
        },
        "otol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Otol"
        },
        "precondopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Precondopt"
        },
        "maxdiis": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdiis"
        },
        "diisstartiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diisstartiter"
        },
        "levelshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Levelshift"
        },
        "pccsdab": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pccsdab"
        },
        "pccsdcd": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pccsdcd"
        },
        "pccsdef": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pccsdef"
        },
        "tnoscales": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tnoscales"
        },
        "tnoscalew": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tnoscalew"
        },
        "tcutweak": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutweak"
        },
        "tcutweakguess": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutweakguess"
        },
        "tcutiter": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutiter"
        },
        "tritole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tritole"
        },
        "datatype": {
          "anyOf": [
            {
              "enum": [
                "double",
                "float"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Datatype"
        },
        "storagetype": {
          "anyOf": [
            {
              "const": "shared",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Storagetype"
        },
        "compression": {
          "anyOf": [
            {
              "enum": [
                "uncompressed",
                "compressed"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Compression"
        },
        "incore": {
          "anyOf": [
            {
              "enum": [
                "nothing",
                "all"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Incore"
        },
        "iroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iroot"
        },
        "tddftguess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tddftguess"
        },
        "dodipolelength": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodipolelength"
        },
        "dodipolevelocity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dodipolevelocity"
        },
        "dohighermoments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dohighermoments"
        },
        "dofullsemiclassical": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dofullsemiclassical"
        },
        "decomposefosclength": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Decomposefosclength"
        },
        "decomposefoscvelocity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Decomposefoscvelocity"
        },
        "domcd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Domcd"
        },
        "mcdgridtype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mcdgridtype"
        },
        "lebedevintegrationpoints": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lebedevintegrationpoints"
        },
        "npointspsi": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npointspsi"
        },
        "npointsphi": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npointsphi"
        },
        "npointstheta": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npointstheta"
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ipeashift": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "cvsorb": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "skiporb": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "xeserange": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "lmoinp": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "normalpnofraginter": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "normalpnofragmentinteraction": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "tightpnofraginter": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "loosepnofraginter": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "hffragmentinteraction": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "mp2fraginter": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "covalent": {
          "anyOf": [
            {
              "$ref": "#/$defs/IntGroup"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockMdci",
      "type": "object"
    },
    "BlockMethod": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %method block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "d3s6": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "D3S6"
        },
        "d3a1": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "D3A1"
        },
        "d3s8": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "D3S8"
        },
        "d3a2": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "D3A2"
        },
        "ProgExt": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "Ext_Params": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ext Params"
        }
      },
      "title": "BlockMethod",
      "type": "object"
    },
    "BlockMp2": {
      "$defs": {
        "InputString": {
          "description": "Class to model strings inside block inputs. Main purpose is to override the str function.\n\nAttributes\n----------\nstring: str\n    String to be stored.",
          "properties": {
            "string": {
              "title": "String",
              "type": "string"
            }
          },
          "required": [
            "string"
          ],
          "title": "InputString",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %mp2 block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "maxcore": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcore"
        },
        "emin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Emin"
        },
        "emax": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Emax"
        },
        "ri": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ri"
        },
        "f12": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "F12"
        },
        "forcedirect": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Forcedirect"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "natorbs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natorbs"
        },
        "natorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natorb"
        },
        "donatorbs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donatorbs"
        },
        "donatorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donatorb"
        },
        "tnat": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tnat"
        },
        "doscs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doscs"
        },
        "pt": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pt"
        },
        "ps": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ps"
        },
        "doregmp2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doregmp2"
        },
        "regmp2type": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Regmp2Type"
        },
        "regmp2kappa": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Regmp2Kappa"
        },
        "regmp2sigma": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Regmp2Sigma"
        },
        "density": {
          "anyOf": [
            {
              "enum": [
                "relaxed",
                "unrelaxed",
                "none"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Density"
        },
        "usepertcanorbs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usepertcanorbs"
        },
        "pertcan_ethresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pertcan Ethresh"
        },
        "pertcan_uthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pertcan Uthresh"
        },
        "storetnmr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Storetnmr"
        },
        "dijconvnmr": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dijconvnmr"
        },
        "nmrstoret": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrstoret"
        },
        "nmrdijconv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmrdijconv"
        },
        "eprstoret": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eprstoret"
        },
        "eprdijconv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eprdijconv"
        },
        "respstoret": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Respstoret"
        },
        "respdijconv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Respdijconv"
        },
        "kcopt": {
          "anyOf": [
            {
              "enum": [
                "_aoblas",
                "_cosx"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kcopt"
        },
        "orbopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbopt"
        },
        "moopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Moopt"
        },
        "calcs2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Calcs2"
        },
        "maxorbiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxorbiter"
        },
        "mp2shift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mp2Shift"
        },
        "mp2solver": {
          "anyOf": [
            {
              "enum": [
                "effectivefock",
                "cpscf"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mp2Solver"
        },
        "gridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridx"
        },
        "usexgrid": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usexgrid"
        },
        "xcorrection": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xcorrection"
        },
        "intaccx": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Intaccx"
        },
        "kc_gridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kc Gridx"
        },
        "kc_usexgrid": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kc Usexgrid"
        },
        "kc_xcorrection": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kc Xcorrection"
        },
        "kc_intaccx": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kc Intaccx"
        },
        "dlpno": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlpno"
        },
        "maxlociter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxlociter"
        },
        "maxpnoiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxpnoiter"
        },
        "tole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tole"
        },
        "tolr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolr"
        },
        "loctol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loctol"
        },
        "locdvdroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locdvdroots"
        },
        "locdvdrootsfinal": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locdvdrootsfinal"
        },
        "tcutpno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpno"
        },
        "tscalepno_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscalepno Core"
        },
        "tscalepno_lshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tscalepno Lshift"
        },
        "tcutpno_range": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpno Range"
        },
        "tcutdo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdo"
        },
        "tcutmkn": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutmkn"
        },
        "fcut": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fcut"
        },
        "paooverlapthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Paooverlapthresh"
        },
        "paosthresh_scale": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Paosthresh Scale"
        },
        "paosthresh_high": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Paosthresh High"
        },
        "tcutpre": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutpre"
        },
        "tcutdoij": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdoij"
        },
        "tcutdopre": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutdopre"
        },
        "scaletcutc_mo": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scaletcutc Mo"
        },
        "tcutc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcutc"
        },
        "maxdiis_pno": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdiis Pno"
        },
        "diisstart_pno": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diisstart Pno"
        },
        "damp1_pno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Damp1 Pno"
        },
        "damp2_pno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Damp2 Pno"
        },
        "mp2shift_pno": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mp2Shift Pno"
        },
        "lagrconds": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lagrconds"
        },
        "zloc_tol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Tol"
        },
        "zloc_maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Maxiter"
        },
        "zloc_maxdiis": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Maxdiis"
        },
        "zloc_shift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Shift"
        },
        "zloc_ethresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Ethresh"
        },
        "zloc_ethresh_core": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Ethresh Core"
        },
        "zloc_usedavidson": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Usedavidson"
        },
        "zloc_dvdroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Dvdroots"
        },
        "zloc_dvdtole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Dvdtole"
        },
        "zloc_dvdtolr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Dvdtolr"
        },
        "zloc_dvdniter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Dvdniter"
        },
        "zloc_dvdmaxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Dvdmaxdim"
        },
        "storedlpnodata": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Storedlpnodata"
        },
        "locpopmethod": {
          "anyOf": [
            {
              "enum": [
                "mulliken",
                "loewdin"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locpopmethod"
        },
        "locmet": {
          "anyOf": [
            {
              "enum": [
                "pipekmezey",
                "pm",
                "fosterboys",
                "fb",
                "iaoibo",
                "iaoboys",
                "newboys",
                "ahfb"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locmet"
        },
        "locvirtopt": {
          "anyOf": [
            {
              "enum": [
                "pao",
                "lmo"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Locvirtopt"
        },
        "dlpnograd_opt": {
          "anyOf": [
            {
              "enum": [
                "auto",
                "ram",
                "disk",
                "buffered"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlpnograd Opt"
        },
        "zloc_solver": {
          "anyOf": [
            {
              "enum": [
                "dir",
                "jac",
                "cg"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zloc Solver"
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "refbasename": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputString"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "locguess": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputString"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockMp2",
      "type": "object"
    },
    "BlockNeb": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "Internal": {
          "description": "Class to model individual internal coordinates for `Internals` class\n\nAttributes\n-----------\nmode: {\"A\",\"B\",\"D\",\"I\"}\n    Define mode\natom1: int\n    Define first atom\natom2: int\n    Define second atom\natom3: int\n    Define third atom\natom4: int\n    Define fourth atom",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D",
                "I"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "exclusiveMinimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "exclusiveMinimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2"
          ],
          "title": "Internal",
          "type": "object"
        },
        "Internals": {
          "description": "Class to model `internals`\n\nAttributes\n----------\ninternals: list[`Internal`]\n    list of internal coordinate definitions of type `Internal`",
          "properties": {
            "internals": {
              "items": {
                "$ref": "#/$defs/Internal"
              },
              "title": "Internals",
              "type": "array"
            }
          },
          "required": [
            "internals"
          ],
          "title": "Internals",
          "type": "object"
        }
      },
      "description": "Class to model %neb block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nimages": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nimages"
        },
        "interpolation": {
          "anyOf": [
            {
              "enum": [
                "linear",
                "idpp",
                "xtb",
                "xtbts",
                "xtb0",
                "xtb0ts",
                "xtb1",
                "xtb1ts",
                "xtb2",
                "xtb2ts"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Interpolation"
        },
        "quatern": {
          "anyOf": [
            {
              "enum": [
                "startonly",
                "always",
                "no"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quatern"
        },
        "tangent": {
          "anyOf": [
            {
              "enum": [
                "original",
                "improved"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tangent"
        },
        "free_end": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Free End"
        },
        "free_end_type": {
          "anyOf": [
            {
              "enum": [
                "contour",
                "perp",
                "full"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Free End Type"
        },
        "pal_opt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pal Opt"
        },
        "free_end_ec": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Free End Ec"
        },
        "free_end_ec_end": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Free End Ec End"
        },
        "free_end_kappa": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Free End Kappa"
        },
        "springconst": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Springconst"
        },
        "springconst2": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Springconst2"
        },
        "springtype": {
          "anyOf": [
            {
              "enum": [
                "dof",
                "original",
                "image",
                "distance",
                "ideal",
                "path"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Springtype"
        },
        "energy_weighted": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Energy Weighted"
        },
        "perpspring": {
          "anyOf": [
            {
              "enum": [
                "cos",
                "tan",
                "costan",
                "dneb"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Perpspring"
        },
        "fix_center": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fix Center"
        },
        "remove_extern_force": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Remove Extern Force"
        },
        "convtype": {
          "anyOf": [
            {
              "enum": [
                "all",
                "cionly"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convtype"
        },
        "ci": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ci"
        },
        "climbingimage": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Climbingimage"
        },
        "tol_scale": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Scale"
        },
        "tol_turn_on_ci": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Turn On Ci"
        },
        "tol_maxf_ci": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Maxf Ci"
        },
        "tol_rmsf_ci": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Rmsf Ci"
        },
        "tol_maxfp_i": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Maxfp I"
        },
        "tol_rmsfp_i": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Rmsfp I"
        },
        "reparam_type": {
          "anyOf": [
            {
              "enum": [
                "linear",
                "cubic"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reparam Type"
        },
        "reparam": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reparam"
        },
        "tol_reparam": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Reparam"
        },
        "restart_opt_on_reparam": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Restart Opt On Reparam"
        },
        "opt_method": {
          "anyOf": [
            {
              "enum": [
                "vpo",
                "fire",
                "lbfgs",
                "bfgs"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Opt Method"
        },
        "local": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Local"
        },
        "nmax": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nmax"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "maxmove": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxmove"
        },
        "stepsize": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stepsize"
        },
        "lbfgs_memory": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lbfgs Memory"
        },
        "lbfgs_dr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lbfgs Dr"
        },
        "lbfgs_restart_on_maxmove": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lbfgs Restart On Maxmove"
        },
        "lbfgs_reparam_on_restart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lbfgs Reparam On Restart"
        },
        "lbfgs_precondition": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lbfgs Precondition"
        },
        "fire_initial_damp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Initial Damp"
        },
        "fire_damp_decr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Damp Decr"
        },
        "fire_step_incr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Step Incr"
        },
        "fire_step_decr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Step Decr"
        },
        "fire_max_step": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Max Step"
        },
        "fire_retention": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fire Retention"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "npts_interpol": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npts Interpol"
        },
        "prepare_frags": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Prepare Frags"
        },
        "max_frag_dist": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max Frag Dist"
        },
        "bond_cutoff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bond Cutoff"
        },
        "idpp_nmax": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Nmax"
        },
        "idpp_tol_maxf": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Tol Maxf"
        },
        "idpp_ksp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Ksp"
        },
        "idpp_alpha": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Alpha"
        },
        "idpp_maxmove": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Maxmove"
        },
        "idpp_quatern": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Quatern"
        },
        "idpp_debug": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Debug"
        },
        "idpp_idealweight": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Idealweight"
        },
        "idpp_dist_interpolation": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Dist Interpolation"
        },
        "idpp_bilinear_partition": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idpp Bilinear Partition"
        },
        "sidpp": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp"
        },
        "sidpp_reparam": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Reparam"
        },
        "sidpp_tol_maxf": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Tol Maxf"
        },
        "sidpp_energy_weighted_tangent": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Energy Weighted Tangent"
        },
        "sidpp_even_nim": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Even Nim"
        },
        "sidpp_double_nim": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Double Nim"
        },
        "sidpp_ideal_springconst": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sidpp Ideal Springconst"
        },
        "tol_turn_on_zoom": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tol Turn On Zoom"
        },
        "zoom_offset": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zoom Offset"
        },
        "zoom_auto": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zoom Auto"
        },
        "zoom_alpha": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zoom Alpha"
        },
        "zoom_interpolation": {
          "anyOf": [
            {
              "enum": [
                "linear",
                "cubic",
                "bilinear"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zoom Interpolation"
        },
        "zoom_printfulltrj": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zoom Printfulltrj"
        },
        "neb_ts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Neb Ts"
        },
        "neb_mmfts": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Neb Mmfts"
        },
        "gp_neb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gp Neb"
        },
        "gp_neb_maxuncertainty": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gp Neb Maxuncertainty"
        },
        "gp_neb_maxcycles": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gp Neb Maxcycles"
        },
        "nsteps_foundintermediate": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nsteps Foundintermediate"
        },
        "abortif_foundintermediate": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Abortif Foundintermediate"
        },
        "bfgs_internalhess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bfgs Internalhess"
        },
        "checkscfconv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checkscfconv"
        },
        "llt_cos": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Llt Cos"
        },
        "ts_inputhess": {
          "anyOf": [
            {
              "enum": [
                "appr",
                "calc-hess"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ts Inputhess"
        },
        "preopt_endpoints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Preopt Endpoints"
        },
        "preopt_ends": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Preopt Ends"
        },
        "preopt_minima": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Preopt Minima"
        },
        "preopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Preopt"
        },
        "neb_ts_image": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Neb Ts Image"
        },
        "neb_restart_xyzfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "neb_restart_gbwname": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "neb_end_xyzfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "neb_end_pdbfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "product_pdbfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "neb_ts_pdbfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ts_pdbfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ts": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "monitor_internals": {
          "anyOf": [
            {
              "$ref": "#/$defs/Internals"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockNeb",
      "type": "object"
    },
    "BlockRel": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %rel block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "method": {
          "anyOf": [
            {
              "enum": [
                "dkh",
                "zora",
                "iora",
                "ioramm",
                "x2c"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "fpfwtrafo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fpfwtrafo"
        },
        "finitenuc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finitenuc"
        },
        "modeldens": {
          "anyOf": [
            {
              "enum": [
                "rhohf",
                "rhodkh",
                "rhozora"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Modeldens"
        },
        "mode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mode"
        },
        "order": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Order"
        },
        "modelpot": {
          "anyOf": [
            {
              "enum": [
                "ven",
                "vc",
                "vxa",
                "vlda",
                "vpc"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Modelpot"
        },
        "picturechange": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Picturechange"
        },
        "socopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socopt"
        },
        "onecenter": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Onecenter"
        },
        "xalpha": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xalpha"
        },
        "dkh1cautoaux": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dkh1Cautoaux"
        },
        "lightatomthresh": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lightatomthresh"
        },
        "dlu": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dlu"
        },
        "storagelevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Storagelevel"
        },
        "socenergy": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socenergy"
        },
        "scalezora": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scalezora"
        },
        "printlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "c": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "C"
        },
        "eps": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eps"
        },
        "soctype": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soctype"
        },
        "socmaxcenter": {
          "anyOf": [
            {
              "enum": [
                "somf(1x)",
                "ri-somf(1x)",
                "veff-soc",
                "veff(-2x)-soc",
                "amfi",
                "amfi-a"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socmaxcenter"
        },
        "socprintlevel": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socprintlevel"
        },
        "socoff": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socoff"
        },
        "socflags": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "zeff": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockRel",
      "type": "object"
    },
    "BlockRocis": {
      "description": "Class to model %rocis block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "maxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdim"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "etol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etol"
        },
        "rtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rtol"
        },
        "nguessmat": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nguessmat"
        },
        "docd": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docd"
        }
      },
      "title": "BlockRocis",
      "type": "object"
    },
    "BlockScf": {
      "$defs": {
        "DIIS": {
          "description": "Class to model `diis` attribute in `BlockScf`\n\nAttributes\n----------\nstart: float\nmaxit: float\nmaxeq: int\nbfac: float\nmaxc: float",
          "properties": {
            "start": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Start"
            },
            "maxit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxit"
            },
            "maxeq": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxeq"
            },
            "bfac": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bfac"
            },
            "maxc": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxc"
            }
          },
          "title": "DIIS",
          "type": "object"
        },
        "Damp": {
          "description": "Class to model `damp` attribute in `BlockScf`\n\nAttributes\n----------\nfac: float\nerroff: float\nmin: float\nmax: float",
          "properties": {
            "fac": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Fac"
            },
            "erroff": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Erroff"
            },
            "min": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Min"
            },
            "max": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Max"
            }
          },
          "title": "Damp",
          "type": "object"
        },
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        },
        "Rotate": {
          "description": "Class to model `rotate` attribute for `BlockScf`\n\nAttributes\n------------\nrotate: list[int | float]",
          "properties": {
            "rotate": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "title": "Rotate",
              "type": "array"
            }
          },
          "required": [
            "rotate"
          ],
          "title": "Rotate",
          "type": "object"
        },
        "SOSCF": {
          "description": "Class to define `soscf` attribute in `BlockScf`\n\nAttributes\n----------\nstart: float\nmaxit: float",
          "properties": {
            "start": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Start"
            },
            "maxit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxit"
            }
          },
          "title": "SOSCF",
          "type": "object"
        },
        "Shift": {
          "description": "Class to model `shift` attribute in `BlockScf`\n\nAttributes\n-----------\nshift: float\nerroff: float",
          "properties": {
            "shift": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shift"
            },
            "erroff": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Erroff"
            }
          },
          "title": "Shift",
          "type": "object"
        },
        "Stab": {
          "description": "Class to model `stab` attribute in `BlockScf`\n\nAttributes\n----------\nrestartuhfifunstable: bool\nnroots: int\nmaxdim: int\nmaxiter: int\nnguess: int\ndtol: float\nrtol: float\nstablambda: float\norbwin: NumList\newin: NumList",
          "properties": {
            "restartuhfifunstable": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Restartuhfifunstable"
            },
            "nroots": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nroots"
            },
            "maxdim": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxdim"
            },
            "maxiter": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Maxiter"
            },
            "nguess": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nguess"
            },
            "dtol": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dtol"
            },
            "rtol": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rtol"
            },
            "stablambda": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Stablambda"
            },
            "orbwin": {
              "anyOf": [
                {
                  "$ref": "#/$defs/NumList"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "ewin": {
              "anyOf": [
                {
                  "$ref": "#/$defs/NumList"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            }
          },
          "title": "Stab",
          "type": "object"
        },
        "Trah": {
          "description": "Class to model `trah` attribute in `BlockScf`\n\nAttributes\n----------\nprecond: {\"diag\", \"full\", \"none\"}\npreconmaxred: int",
          "properties": {
            "precond": {
              "anyOf": [
                {
                  "enum": [
                    "diag",
                    "full",
                    "none"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Precond"
            },
            "preconmaxred": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Preconmaxred"
            }
          },
          "title": "Trah",
          "type": "object"
        }
      },
      "description": "Class to model %scf block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "scfmode": {
          "anyOf": [
            {
              "enum": [
                "direct",
                "semidirect",
                "conventional"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scfmode"
        },
        "directresetfreq": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Directresetfreq"
        },
        "keepints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepints"
        },
        "readints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Readints"
        },
        "keepdensity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepdensity"
        },
        "keepfock": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepfock"
        },
        "fracocc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fracocc"
        },
        "smeartemp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smeartemp"
        },
        "smeartempmax": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smeartempmax"
        },
        "smeartempmin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Smeartempmin"
        },
        "doannealing": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doannealing"
        },
        "annealthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Annealthresh"
        },
        "reduceethresh": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Reduceethresh"
        },
        "dryrun": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dryrun"
        },
        "calcguessen": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Calcguessen"
        },
        "keepall4intsinmem": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepall4Intsinmem"
        },
        "autostart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autostart"
        },
        "convcheck": {
          "anyOf": [
            {
              "enum": [
                "allchecks",
                "sloppycheck",
                "energycheck",
                "gradientcheck"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convcheck"
        },
        "tole": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tole"
        },
        "tolrmsp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolrmsp"
        },
        "tolmaxp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolmaxp"
        },
        "tolx": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolx"
        },
        "tolg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolg"
        },
        "tolerr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tolerr"
        },
        "convergence": {
          "anyOf": [
            {
              "enum": [
                "sloppy",
                "loose",
                "medium",
                "strong",
                "tight",
                "verytight",
                "extreme"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Convergence"
        },
        "sthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sthresh"
        },
        "diffsthresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diffsthresh"
        },
        "eda": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eda"
        },
        "cnvdamp": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvdamp"
        },
        "cnvtrah": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvtrah"
        },
        "scflambda": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scflambda"
        },
        "lambdamin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lambdamin"
        },
        "lambdamax": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lambdamax"
        },
        "dampfac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dampfac"
        },
        "dampmin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dampmin"
        },
        "dampmax": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dampmax"
        },
        "damperr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Damperr"
        },
        "cnvshift": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvshift"
        },
        "lshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lshift"
        },
        "levelshift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Levelshift"
        },
        "shifterr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shifterr"
        },
        "mingap": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mingap"
        },
        "minallowedgap": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Minallowedgap"
        },
        "cnvdiis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvdiis"
        },
        "diisstart": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diisstart"
        },
        "diismaxc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diismaxc"
        },
        "diisbfac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diisbfac"
        },
        "diismaxit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diismaxit"
        },
        "diismaxeq": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diismaxeq"
        },
        "cnvkdiis": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvkdiis"
        },
        "kdiistransformation": {
          "anyOf": [
            {
              "enum": [
                "kollmar",
                "cayley",
                "fullexp"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Kdiistransformation"
        },
        "cnvsoscf": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cnvsoscf"
        },
        "soscfstart": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfstart"
        },
        "soscfmaxit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfmaxit"
        },
        "soscfmaxstep": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfmaxstep"
        },
        "soscfconvfactor": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfconvfactor"
        },
        "robustsoscf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Robustsoscf"
        },
        "soscfconstrainedhessup": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfconstrainedhessup"
        },
        "deltascffromgs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Deltascffromgs"
        },
        "soscfhessup": {
          "anyOf": [
            {
              "enum": [
                "lbfgs",
                "lsr1",
                "lpowell",
                "lbofill"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfhessup"
        },
        "soscfblockdiag": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfblockdiag"
        },
        "soscfconstraints": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfconstraints"
        },
        "soscfwriteconstrainedgbw": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfwriteconstrainedgbw"
        },
        "soscfonlyconstrainedopt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soscfonlyconstrainedopt"
        },
        "autotrah": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autotrah"
        },
        "autotrahtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autotrahtol"
        },
        "autotrahiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autotrahiter"
        },
        "autotrahninter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autotrahninter"
        },
        "autotrahforcestartiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Autotrahforcestartiter"
        },
        "trahstart": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Trahstart"
        },
        "stabperform": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabperform"
        },
        "stabrestartuhfifunstable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabrestartuhfifunstable"
        },
        "stabnroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabnroots"
        },
        "stabmaxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabmaxdim"
        },
        "stabmaxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabmaxiter"
        },
        "stabmaxretries": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabmaxretries"
        },
        "stabskip2ndstab": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabskip2Ndstab"
        },
        "stabnguess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabnguess"
        },
        "stabdtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabdtol"
        },
        "stabrtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabrtol"
        },
        "stabotol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stabotol"
        },
        "stablambda": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stablambda"
        },
        "thresh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thresh"
        },
        "tcut": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcut"
        },
        "tsize": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tsize"
        },
        "tcost": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tcost"
        },
        "fmopt": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fmopt"
        },
        "apmethod": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Apmethod"
        },
        "guessmix": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Guessmix"
        },
        "finalms": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalms"
        },
        "deltascf": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Deltascf"
        },
        "domom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Domom"
        },
        "keepinitialref": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keepinitialref"
        },
        "pmom": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pmom"
        },
        "averageocc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Averageocc"
        },
        "keeporbitals": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keeporbitals"
        },
        "doreortho": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doreortho"
        },
        "usegramschmidt": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Usegramschmidt"
        },
        "moinp": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "restartfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "cmatinp": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ledorb": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "staborbwin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "brokensym": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "decompositionpath": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "flipspin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "alphaconf": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "betaconf": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "setalpha": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "setbeta": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "removealpha": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "removebeta": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ionizealpha": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ionizebeta": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "efield": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "qfield": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "fgrad": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "adip": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "fermi": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "aiso": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "efieldorigin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "enum": [
                "centerofmass",
                "centerofnuccharge",
                "centerofnuclearcharge"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Efieldorigin"
        },
        "diis": {
          "anyOf": [
            {
              "$ref": "#/$defs/DIIS"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "shift": {
          "anyOf": [
            {
              "$ref": "#/$defs/Shift"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "stab": {
          "anyOf": [
            {
              "$ref": "#/$defs/Stab"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "soscf": {
          "anyOf": [
            {
              "$ref": "#/$defs/SOSCF"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "damp": {
          "anyOf": [
            {
              "$ref": "#/$defs/Damp"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "trah": {
          "anyOf": [
            {
              "$ref": "#/$defs/Trah"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "rotate": {
          "anyOf": [
            {
              "$ref": "#/$defs/Rotate"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ignoreconv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ignoreconv"
        }
      },
      "title": "BlockScf",
      "type": "object"
    },
    "BlockSolvator": {
      "$defs": {
        "InputFilePath": {
          "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
          "properties": {
            "file": {
              "format": "path",
              "title": "File",
              "type": "string"
            }
          },
          "required": [
            "file"
          ],
          "title": "InputFilePath",
          "type": "object"
        }
      },
      "description": "Class to model %solvator block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nsolv": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nsolv"
        },
        "randomsolv": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomsolv"
        },
        "droplet": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Droplet"
        },
        "radius": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Radius"
        },
        "fixsolute": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fixsolute"
        },
        "clustermode": {
          "anyOf": [
            {
              "enum": [
                "stochastic",
                "docking"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Clustermode"
        },
        "wallfac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Wallfac"
        },
        "printlevel": {
          "anyOf": [
            {
              "enum": [
                "low",
                "normal",
                "high"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Printlevel"
        },
        "vacuumsearch": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vacuumsearch"
        },
        "useeeqcharges": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Useeeqcharges"
        },
        "solvatorfile": {
          "anyOf": [
            {
              "$ref": "#/$defs/InputFilePath"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockSolvator",
      "type": "object"
    },
    "BlockTddft": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model %tddft block in ORCA.\nSince it is the same as the %cis block, it is defined here as a derived class of BlockCis.",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "iroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iroot"
        },
        "irootmult": {
          "anyOf": [
            {
              "enum": [
                "singlet",
                "triplet"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irootmult"
        },
        "maxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdim"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "nguessmat": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nguessmat"
        },
        "maxcore": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcore"
        },
        "etol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etol"
        },
        "rtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rtol"
        },
        "tda": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tda"
        },
        "lrcpcm": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Lrcpcm"
        },
        "cpcmeq": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cpcmeq"
        },
        "donto": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Donto"
        },
        "saveunrnatorb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Saveunrnatorb"
        },
        "spinflip": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spinflip"
        },
        "soc": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Soc"
        },
        "socgrad": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Socgrad"
        },
        "triplets": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triplets"
        },
        "dotrans": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dotrans"
        },
        "dcorr": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dcorr"
        },
        "doscs": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doscs"
        },
        "intaccxc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Intaccxc"
        },
        "gridxc": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridxc"
        },
        "gridx": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gridx"
        },
        "ntostates": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "scspar": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "BlockTddft",
      "type": "object"
    },
    "BlockXtb": {
      "description": "Class to model %xtb block in ORCA",
      "properties": {
        "aftercoord": {
          "default": false,
          "title": "Aftercoord",
          "type": "boolean"
        },
        "xtbversion": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Xtbversion"
        },
        "etemp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Etemp"
        },
        "doalpb": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doalpb"
        },
        "doddcosmo": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doddcosmo"
        },
        "docpcmx": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Docpcmx"
        },
        "epsilon": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Epsilon"
        },
        "ceh": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ceh"
        },
        "accuracy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Accuracy"
        },
        "acc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Acc"
        },
        "maxcore": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxcore"
        },
        "nprocs": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nprocs"
        },
        "randomseed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Randomseed"
        },
        "bhess": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bhess"
        }
      },
      "title": "BlockXtb",
      "type": "object"
    },
    "ConnectFragments": {
      "$defs": {
        "FragConstraint": {
          "description": "Class to model individual constraints for the `ConnectFragment` class\n\nAttributes\n----------\nfragment1: int\n    Define first fragment\nfragment2: int\n    Define second fragment\naction: {\"C\", \"O\"}\n    Define action\natom1: int\n    Specify first atom\natom2: int\n    Specify second atrom",
          "properties": {
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "fragment1": {
              "exclusiveMinimum": 0,
              "title": "Fragment1",
              "type": "integer"
            },
            "fragment2": {
              "exclusiveMinimum": 0,
              "title": "Fragment2",
              "type": "integer"
            },
            "action": {
              "enum": [
                "C",
                "O"
              ],
              "title": "Action",
              "type": "string"
            }
          },
          "required": [
            "mode",
            "fragment1",
            "fragment2",
            "action"
          ],
          "title": "FragConstraint",
          "type": "object"
        }
      },
      "description": "Class used to model the `connectfragments` attribute in `BlockGeom`\n\nAttributes\n----------\nconstraints: list[FragConstraint]\n    list of constraints of type `FragConstraint`",
      "properties": {
        "constraints": {
          "items": {
            "$ref": "#/$defs/FragConstraint"
          },
          "title": "Constraints",
          "type": "array"
        }
      },
      "required": [
        "constraints"
      ],
      "title": "ConnectFragments",
      "type": "object"
    },
    "Constraint": {
      "description": "Class to model a singular constraint for the `constraints` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"C\",\"D\"}\n    Define mode of constraint\natom1: int | \"*\"\n    Specify the first atom ( can also be *)\natom2: int | \"*\"\n    Specify the second atom ( can also be *)\natom3: int | \"*\"\n    Specify the third atom ( can also be *)\natom4: int | \"*\"\n    Specify the fourth atom ( can also be *)\nvalue: float\n    Specify value of the constraint",
      "properties": {
        "mode": {
          "enum": [
            "A",
            "B",
            "C",
            "D"
          ],
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            }
          ],
          "title": "Atom1"
        },
        "atom2": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom2"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "value": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        }
      },
      "required": [
        "mode",
        "atom1"
      ],
      "title": "Constraint",
      "type": "object"
    },
    "Constraints": {
      "$defs": {
        "Constraint": {
          "description": "Class to model a singular constraint for the `constraints` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"C\",\"D\"}\n    Define mode of constraint\natom1: int | \"*\"\n    Specify the first atom ( can also be *)\natom2: int | \"*\"\n    Specify the second atom ( can also be *)\natom3: int | \"*\"\n    Specify the third atom ( can also be *)\natom4: int | \"*\"\n    Specify the fourth atom ( can also be *)\nvalue: float\n    Specify value of the constraint",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "C",
                "D"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                }
              ],
              "title": "Atom1"
            },
            "atom2": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom2"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "const": "*",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "value": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Value"
            }
          },
          "required": [
            "mode",
            "atom1"
          ],
          "title": "Constraint",
          "type": "object"
        }
      },
      "description": "Class to model the `constraints` attribute in `BlockGeom`\n\nAttributes\n-----------\nconstraints: list[`Constraint`]\n    list of constraints of type `Constraint`",
      "properties": {
        "constraints": {
          "items": {
            "$ref": "#/$defs/Constraint"
          },
          "title": "Constraints",
          "type": "array"
        }
      },
      "required": [
        "constraints"
      ],
      "title": "Constraints",
      "type": "object"
    },
    "DIIS": {
      "description": "Class to model `diis` attribute in `BlockScf`\n\nAttributes\n----------\nstart: float\nmaxit: float\nmaxeq: int\nbfac: float\nmaxc: float",
      "properties": {
        "start": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Start"
        },
        "maxit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxit"
        },
        "maxeq": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxeq"
        },
        "bfac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bfac"
        },
        "maxc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxc"
        }
      },
      "title": "DIIS",
      "type": "object"
    },
    "Damp": {
      "description": "Class to model `damp` attribute in `BlockScf`\n\nAttributes\n----------\nfac: float\nerroff: float\nmin: float\nmax: float",
      "properties": {
        "fac": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fac"
        },
        "erroff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Erroff"
        },
        "min": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Min"
        },
        "max": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Max"
        }
      },
      "title": "Damp",
      "type": "object"
    },
    "FragConstraint": {
      "description": "Class to model individual constraints for the `ConnectFragment` class\n\nAttributes\n----------\nfragment1: int\n    Define first fragment\nfragment2: int\n    Define second fragment\naction: {\"C\", \"O\"}\n    Define action\natom1: int\n    Specify first atom\natom2: int\n    Specify second atrom",
      "properties": {
        "mode": {
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom1"
        },
        "atom2": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom2"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "fragment1": {
          "exclusiveMinimum": 0,
          "title": "Fragment1",
          "type": "integer"
        },
        "fragment2": {
          "exclusiveMinimum": 0,
          "title": "Fragment2",
          "type": "integer"
        },
        "action": {
          "enum": [
            "C",
            "O"
          ],
          "title": "Action",
          "type": "string"
        }
      },
      "required": [
        "mode",
        "fragment1",
        "fragment2",
        "action"
      ],
      "title": "FragConstraint",
      "type": "object"
    },
    "FragDefinition": {
      "$defs": {
        "Fragment": {
          "description": "Class to model the fragment for the `Frags` class\n\nAttributes\n----------\nfragmentid: int\n    ID of fragment\natoms: IntGroup\n    Group of atoms for fragment",
          "properties": {
            "fragmentid": {
              "exclusiveMinimum": 0,
              "title": "Fragmentid",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "fragmentid",
            "atoms"
          ],
          "title": "Fragment",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        }
      },
      "description": "Class to model definition `attribute` in `BlockFrag`",
      "properties": {
        "frags": {
          "items": {
            "$ref": "#/$defs/Fragment"
          },
          "minItems": 1,
          "title": "Frags",
          "type": "array"
        }
      },
      "title": "FragDefinition",
      "type": "object"
    },
    "FragList": {
      "description": "Class used to model the `rigidfrags`, `relaxfrags`, `relaxhfrags`, `ghostfrags`, `constrainfragments` attributes in `BlockGeom`",
      "properties": {
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ]
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "title": "FragList",
      "type": "object"
    },
    "Fragment": {
      "$defs": {
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        }
      },
      "description": "Class to model the fragment for the `Frags` class\n\nAttributes\n----------\nfragmentid: int\n    ID of fragment\natoms: IntGroup\n    Group of atoms for fragment",
      "properties": {
        "fragmentid": {
          "exclusiveMinimum": 0,
          "title": "Fragmentid",
          "type": "integer"
        },
        "atoms": {
          "$ref": "#/$defs/IntGroup"
        }
      },
      "required": [
        "fragmentid",
        "atoms"
      ],
      "title": "Fragment",
      "type": "object"
    },
    "Frags": {
      "$defs": {
        "Fragment": {
          "description": "Class to model the fragment for the `Frags` class\n\nAttributes\n----------\nfragmentid: int\n    ID of fragment\natoms: IntGroup\n    Group of atoms for fragment",
          "properties": {
            "fragmentid": {
              "exclusiveMinimum": 0,
              "title": "Fragmentid",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "fragmentid",
            "atoms"
          ],
          "title": "Fragment",
          "type": "object"
        },
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        }
      },
      "description": "Class to model the `frags` attribute for `BlockGeom`\n\nAttributes\n----------\nfrags: list[`Fragment`]\n    list of fragment definitions of type `Fragment`",
      "properties": {
        "frags": {
          "items": {
            "$ref": "#/$defs/Fragment"
          },
          "minItems": 1,
          "title": "Frags",
          "type": "array"
        }
      },
      "title": "Frags",
      "type": "object"
    },
    "HessList": {
      "description": "Class to model `hybrid_hess` and `partial_hess` attributes in `BlockFreq`",
      "properties": {
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ]
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "title": "HessList",
      "type": "object"
    },
    "Hybrid": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model `hybrid` attribute in `BlockGeom`\n\nAttributes\n----------\nlist: `NumList`",
      "properties": {
        "mode": {
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom1"
        },
        "atom2": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom2"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "list": {
          "$ref": "#/$defs/NumList"
        }
      },
      "required": [
        "mode",
        "list"
      ],
      "title": "Hybrid",
      "type": "object"
    },
    "InputFilePath": {
      "description": "Class to model file paths inside block inputs. Main purpose is to override str function.\n\nAttributes\n----------\nfile: Path\n    Path to the file of type `Path`.",
      "properties": {
        "file": {
          "format": "path",
          "title": "File",
          "type": "string"
        }
      },
      "required": [
        "file"
      ],
      "title": "InputFilePath",
      "type": "object"
    },
    "InputString": {
      "description": "Class to model strings inside block inputs. Main purpose is to override the str function.\n\nAttributes\n----------\nstring: str\n    String to be stored.",
      "properties": {
        "string": {
          "title": "String",
          "type": "string"
        }
      },
      "required": [
        "string"
      ],
      "title": "InputString",
      "type": "object"
    },
    "IntGroup": {
      "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
      "properties": {
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "integer"
                  }
                ],
                "type": "array"
              }
            ]
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "title": "IntGroup",
      "type": "object"
    },
    "Internal": {
      "description": "Class to model individual internal coordinates for `Internals` class\n\nAttributes\n-----------\nmode: {\"A\",\"B\",\"D\",\"I\"}\n    Define mode\natom1: int\n    Define first atom\natom2: int\n    Define second atom\natom3: int\n    Define third atom\natom4: int\n    Define fourth atom",
      "properties": {
        "mode": {
          "enum": [
            "A",
            "B",
            "D",
            "I"
          ],
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "exclusiveMinimum": 0,
          "title": "Atom1",
          "type": "integer"
        },
        "atom2": {
          "exclusiveMinimum": 0,
          "title": "Atom2",
          "type": "integer"
        },
        "atom3": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        }
      },
      "required": [
        "mode",
        "atom1",
        "atom2"
      ],
      "title": "Internal",
      "type": "object"
    },
    "Internals": {
      "$defs": {
        "Internal": {
          "description": "Class to model individual internal coordinates for `Internals` class\n\nAttributes\n-----------\nmode: {\"A\",\"B\",\"D\",\"I\"}\n    Define mode\natom1: int\n    Define first atom\natom2: int\n    Define second atom\natom3: int\n    Define third atom\natom4: int\n    Define fourth atom",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D",
                "I"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "exclusiveMinimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "exclusiveMinimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2"
          ],
          "title": "Internal",
          "type": "object"
        }
      },
      "description": "Class to model `internals`\n\nAttributes\n----------\ninternals: list[`Internal`]\n    list of internal coordinate definitions of type `Internal`",
      "properties": {
        "internals": {
          "items": {
            "$ref": "#/$defs/Internal"
          },
          "title": "Internals",
          "type": "array"
        }
      },
      "required": [
        "internals"
      ],
      "title": "Internals",
      "type": "object"
    },
    "Modify": {
      "description": "Class to model individual modifications for `ModifyInternal` class.\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\"}\n    Defines mode for modification\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify third atom\natom4: int\n    Specify fourth atom",
      "properties": {
        "mode": {
          "enum": [
            "A",
            "B",
            "D"
          ],
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "minimum": 0,
          "title": "Atom1",
          "type": "integer"
        },
        "atom2": {
          "minimum": 0,
          "title": "Atom2",
          "type": "integer"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "action": {
          "enum": [
            "A",
            "R"
          ],
          "title": "Action",
          "type": "string"
        }
      },
      "required": [
        "mode",
        "atom1",
        "atom2",
        "action"
      ],
      "title": "Modify",
      "type": "object"
    },
    "ModifyInternal": {
      "$defs": {
        "Modify": {
          "description": "Class to model individual modifications for `ModifyInternal` class.\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\"}\n    Defines mode for modification\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify third atom\natom4: int\n    Specify fourth atom",
          "properties": {
            "mode": {
              "enum": [
                "A",
                "B",
                "D"
              ],
              "title": "Mode",
              "type": "string"
            },
            "atom1": {
              "minimum": 0,
              "title": "Atom1",
              "type": "integer"
            },
            "atom2": {
              "minimum": 0,
              "title": "Atom2",
              "type": "integer"
            },
            "atom3": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom3"
            },
            "atom4": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atom4"
            },
            "action": {
              "enum": [
                "A",
                "R"
              ],
              "title": "Action",
              "type": "string"
            }
          },
          "required": [
            "mode",
            "atom1",
            "atom2",
            "action"
          ],
          "title": "Modify",
          "type": "object"
        }
      },
      "description": "Class used to model the `modify_internal` attribute in `BlockGeom`\n\nAttributes\n----------\nmodifications: list[`Modify`]\n    List of modifications of type `Modify`",
      "properties": {
        "modifications": {
          "items": {
            "$ref": "#/$defs/Modify"
          },
          "title": "Modifications",
          "type": "array"
        }
      },
      "required": [
        "modifications"
      ],
      "title": "ModifyInternal",
      "type": "object"
    },
    "NmrEquiv": {
      "$defs": {
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        },
        "NmrGroup": {
          "description": "Class to model a singular group of equivalent nuclei for the `nmrspecequiv` attribute in `BlockEprnmr`.\n\nAttributes\n----------\ngroupnumber: int\n    Defines group number\natoms: `IntGroup`\n    Defines atoms that are grouped",
          "properties": {
            "groupnumber": {
              "exclusiveMinimum": 0,
              "title": "Groupnumber",
              "type": "integer"
            },
            "atoms": {
              "$ref": "#/$defs/IntGroup"
            }
          },
          "required": [
            "groupnumber",
            "atoms"
          ],
          "title": "NmrGroup",
          "type": "object"
        }
      },
      "description": "Class to model `nmrequiv` attribute in `BlockEprnmr`\n\nAttributes\n----------\ngroups: list[`NmrGroup`]\n    List of groups of type NmrGroup that defines all groups of equivalent nuclei.",
      "properties": {
        "groups": {
          "items": {
            "$ref": "#/$defs/NmrGroup"
          },
          "title": "Groups",
          "type": "array"
        }
      },
      "required": [
        "groups"
      ],
      "title": "NmrEquiv",
      "type": "object"
    },
    "NmrGroup": {
      "$defs": {
        "IntGroup": {
          "description": "Class to format a collection of integers for the ORCA inp file\n\nAttributes\n----------\nvalues : list[int | tuple[int, int]]\n    Stores list of integers or pairs of integers",
          "properties": {
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  }
                ]
              },
              "title": "Values",
              "type": "array"
            }
          },
          "required": [
            "values"
          ],
          "title": "IntGroup",
          "type": "object"
        }
      },
      "description": "Class to model a singular group of equivalent nuclei for the `nmrspecequiv` attribute in `BlockEprnmr`.\n\nAttributes\n----------\ngroupnumber: int\n    Defines group number\natoms: `IntGroup`\n    Defines atoms that are grouped",
      "properties": {
        "groupnumber": {
          "exclusiveMinimum": 0,
          "title": "Groupnumber",
          "type": "integer"
        },
        "atoms": {
          "$ref": "#/$defs/IntGroup"
        }
      },
      "required": [
        "groupnumber",
        "atoms"
      ],
      "title": "NmrGroup",
      "type": "object"
    },
    "Nuclei": {
      "$defs": {
        "Element": {
          "description": "Class that stores a list of all elements.\nWhen an element is required as an input, it is to be selected from this class to avoid user error",
          "enum": [
            "H",
            "H",
            "He",
            "He",
            "Li",
            "Li",
            "Be",
            "Be",
            "B",
            "B",
            "C",
            "C",
            "N",
            "N",
            "O",
            "O",
            "F",
            "F",
            "Ne",
            "Ne",
            "Na",
            "Na",
            "Mg",
            "Mg",
            "Al",
            "Al",
            "Si",
            "Si",
            "P",
            "P",
            "S",
            "S",
            "Cl",
            "Cl",
            "Ar",
            "Ar",
            "K",
            "K",
            "Ca",
            "Ca",
            "Sc",
            "Sc",
            "Ti",
            "Ti",
            "V",
            "V",
            "Cr",
            "Cr",
            "Mn",
            "Mn",
            "Fe",
            "Fe",
            "Co",
            "Co",
            "Ni",
            "Ni",
            "Cu",
            "Cu",
            "Zn",
            "Zn",
            "Ga",
            "Ga",
            "Ge",
            "Ge",
            "As",
            "As",
            "Se",
            "Se",
            "Br",
            "Br",
            "Kr",
            "Kr",
            "Rb",
            "Rb",
            "Sr",
            "Sr",
            "Y",
            "Y",
            "Zr",
            "Zr",
            "Nb",
            "Nb",
            "Mo",
            "Mo",
            "Tc",
            "Tc",
            "Ru",
            "Ru",
            "Rh",
            "Rh",
            "Pd",
            "Pd",
            "Ag",
            "Ag",
            "Cd",
            "Cd",
            "In",
            "In",
            "Sn",
            "Sn",
            "Sb",
            "Sb",
            "Te",
            "Te",
            "I",
            "I",
            "Xe",
            "Xe",
            "Cs",
            "Cs",
            "Ba",
            "Ba",
            "La",
            "La",
            "Ce",
            "Ce",
            "Pr",
            "Pr",
            "Nd",
            "Nd",
            "Pm",
            "Pm",
            "Sm",
            "Sm",
            "Eu",
            "Eu",
            "Gd",
            "Gd",
            "Tb",
            "Tb",
            "Dy",
            "Dy",
            "Ho",
            "Ho",
            "Er",
            "Er",
            "Tm",
            "Tm",
            "Yb",
            "Yb",
            "Lu",
            "Lu",
            "Hf",
            "Hf",
            "Ta",
            "Ta",
            "W",
            "W",
            "Re",
            "Re",
            "Os",
            "Os",
            "Ir",
            "Ir",
            "Pt",
            "Pt",
            "Au",
            "Au",
            "Hg",
            "Hg",
            "Tl",
            "Tl",
            "Pb",
            "Pb",
            "Bi",
            "Bi",
            "Po",
            "Po",
            "At",
            "At",
            "Rn",
            "Rn",
            "Fr",
            "Fr",
            "Ra",
            "Ra",
            "Ac",
            "Ac",
            "Th",
            "Th",
            "Pa",
            "Pa",
            "U",
            "U",
            "Np",
            "Np",
            "Pu",
            "Pu",
            "Am",
            "Am",
            "Cm",
            "Cm",
            "Bk",
            "Bk",
            "Cf",
            "Cf",
            "Es",
            "Es",
            "Fm",
            "Fm",
            "Md",
            "Md",
            "No",
            "No",
            "Lr",
            "Lr",
            "Rf",
            "Rf",
            "Db",
            "Db",
            "Sg",
            "Sg",
            "Bh",
            "Bh",
            "Hs",
            "Hs",
            "Mt",
            "Mt",
            "Ds",
            "Ds",
            "Rg",
            "Rg",
            "Cn",
            "Cn",
            "Nh",
            "Nh",
            "Fl",
            "Fl",
            "Mc",
            "Mc",
            "Lv",
            "Lv",
            "Ts",
            "Ts",
            "Og",
            "Og"
          ],
          "title": "Element",
          "type": "string"
        },
        "NucleiFlag": {
          "description": "This class contains all flags for the `nuclei` parameter in `BlockEprnmr`.",
          "properties": {
            "ppp": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ppp"
            },
            "qqq": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qqq"
            },
            "iii": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Iii"
            },
            "ist": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ist"
            },
            "ssgn": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ssgn"
            },
            "aiso": {
              "default": false,
              "title": "Aiso",
              "type": "boolean"
            },
            "adip": {
              "default": false,
              "title": "Adip",
              "type": "boolean"
            },
            "aorb": {
              "default": false,
              "title": "Aorb",
              "type": "boolean"
            },
            "fgrad": {
              "default": false,
              "title": "Fgrad",
              "type": "boolean"
            },
            "rho": {
              "default": false,
              "title": "Rho",
              "type": "boolean"
            },
            "shift": {
              "default": false,
              "title": "Shift",
              "type": "boolean"
            },
            "ssdso": {
              "default": false,
              "title": "Ssdso",
              "type": "boolean"
            },
            "sspso": {
              "default": false,
              "title": "Sspso",
              "type": "boolean"
            },
            "ssfc": {
              "default": false,
              "title": "Ssfc",
              "type": "boolean"
            },
            "sssd": {
              "default": false,
              "title": "Sssd",
              "type": "boolean"
            },
            "ssall": {
              "default": false,
              "title": "Ssall",
              "type": "boolean"
            }
          },
          "title": "NucleiFlag",
          "type": "object"
        },
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model `nuclei` attribute in `BlockEprnmr`\n\nAttributes\n----------\nmode: \"all\" | NumList\n    Defines for which atoms properties are calculated\natom: Element\n    Defines for atoms of which type properties are calculated\nflags: `NucleiFlag`\n    Defines flags",
      "properties": {
        "mode": {
          "anyOf": [
            {
              "const": "all",
              "type": "string"
            },
            {
              "$ref": "#/$defs/NumList"
            }
          ],
          "default": "all",
          "title": "Mode"
        },
        "atom": {
          "$ref": "#/$defs/Element"
        },
        "flags": {
          "$ref": "#/$defs/NucleiFlag"
        }
      },
      "required": [
        "atom",
        "flags"
      ],
      "title": "Nuclei",
      "type": "object"
    },
    "NucleiFlag": {
      "description": "This class contains all flags for the `nuclei` parameter in `BlockEprnmr`.",
      "properties": {
        "ppp": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ppp"
        },
        "qqq": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qqq"
        },
        "iii": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iii"
        },
        "ist": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ist"
        },
        "ssgn": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ssgn"
        },
        "aiso": {
          "default": false,
          "title": "Aiso",
          "type": "boolean"
        },
        "adip": {
          "default": false,
          "title": "Adip",
          "type": "boolean"
        },
        "aorb": {
          "default": false,
          "title": "Aorb",
          "type": "boolean"
        },
        "fgrad": {
          "default": false,
          "title": "Fgrad",
          "type": "boolean"
        },
        "rho": {
          "default": false,
          "title": "Rho",
          "type": "boolean"
        },
        "shift": {
          "default": false,
          "title": "Shift",
          "type": "boolean"
        },
        "ssdso": {
          "default": false,
          "title": "Ssdso",
          "type": "boolean"
        },
        "sspso": {
          "default": false,
          "title": "Sspso",
          "type": "boolean"
        },
        "ssfc": {
          "default": false,
          "title": "Ssfc",
          "type": "boolean"
        },
        "sssd": {
          "default": false,
          "title": "Sssd",
          "type": "boolean"
        },
        "ssall": {
          "default": false,
          "title": "Ssall",
          "type": "boolean"
        }
      },
      "title": "NucleiFlag",
      "type": "object"
    },
    "NumList": {
      "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
      "properties": {
        "numlist": {
          "anyOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            }
          ],
          "title": "Numlist"
        }
      },
      "required": [
        "numlist"
      ],
      "title": "NumList",
      "type": "object"
    },
    "Potential": {
      "description": "Class to model `potential` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: \"C\"\n\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\nvalue: float\n    Define value",
      "properties": {
        "mode": {
          "const": "C",
          "default": "C",
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "minimum": 0,
          "title": "Atom1",
          "type": "integer"
        },
        "atom2": {
          "minimum": 0,
          "title": "Atom2",
          "type": "integer"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "value": {
          "title": "Value",
          "type": "number"
        }
      },
      "required": [
        "atom1",
        "atom2",
        "value"
      ],
      "title": "Potential",
      "type": "object"
    },
    "Radius": {
      "description": "Class to model `radius` and `radii` attributes in `BlockCpcm`.\n\nAttributes\n----------\nn: int\n    Atomic number for which radius is to be defined.\nvalue: float\n    Atomic radius(in Angstrom)",
      "properties": {
        "n": {
          "exclusiveMinimum": 0,
          "maximum": 118,
          "title": "N",
          "type": "integer"
        },
        "value": {
          "exclusiveMinimum": 0.0,
          "title": "Value",
          "type": "number"
        }
      },
      "required": [
        "n",
        "value"
      ],
      "title": "Radius",
      "type": "object"
    },
    "Rotate": {
      "description": "Class to model `rotate` attribute for `BlockScf`\n\nAttributes\n------------\nrotate: list[int | float]",
      "properties": {
        "rotate": {
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          },
          "title": "Rotate",
          "type": "array"
        }
      },
      "required": [
        "rotate"
      ],
      "title": "Rotate",
      "type": "object"
    },
    "SOSCF": {
      "description": "Class to define `soscf` attribute in `BlockScf`\n\nAttributes\n----------\nstart: float\nmaxit: float",
      "properties": {
        "start": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Start"
        },
        "maxit": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxit"
        }
      },
      "title": "SOSCF",
      "type": "object"
    },
    "Scan": {
      "description": "Class to model the `scan` attribute in `BlockGeom`\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\"}\n    Defines mode for modification\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify optional third atom\natom4: int\n    Specify optional fourth atom\nstartvalue: float\n    Define start value\nendvalue: float\n    Define end value\nsteps: int\n    Define number of steps\nvaluelist: list[float]\n    Define the values",
      "properties": {
        "mode": {
          "enum": [
            "A",
            "B",
            "D"
          ],
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "minimum": 0,
          "title": "Atom1",
          "type": "integer"
        },
        "atom2": {
          "minimum": 0,
          "title": "Atom2",
          "type": "integer"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "startvalue": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Startvalue"
        },
        "endvalue": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Endvalue"
        },
        "steps": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Steps"
        },
        "valuelist": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Valuelist"
        }
      },
      "required": [
        "mode",
        "atom1",
        "atom2"
      ],
      "title": "Scan",
      "type": "object"
    },
    "Shift": {
      "description": "Class to model `shift` attribute in `BlockScf`\n\nAttributes\n-----------\nshift: float\nerroff: float",
      "properties": {
        "shift": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shift"
        },
        "erroff": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Erroff"
        }
      },
      "title": "Shift",
      "type": "object"
    },
    "Stab": {
      "$defs": {
        "NumList": {
          "description": "Class to format integer or float lists for orca inp files\n\nAttributes\n----------\nnumlist : list[int] | list[float]\n    Stores list of integers or floats",
          "properties": {
            "numlist": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                }
              ],
              "title": "Numlist"
            }
          },
          "required": [
            "numlist"
          ],
          "title": "NumList",
          "type": "object"
        }
      },
      "description": "Class to model `stab` attribute in `BlockScf`\n\nAttributes\n----------\nrestartuhfifunstable: bool\nnroots: int\nmaxdim: int\nmaxiter: int\nnguess: int\ndtol: float\nrtol: float\nstablambda: float\norbwin: NumList\newin: NumList",
      "properties": {
        "restartuhfifunstable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Restartuhfifunstable"
        },
        "nroots": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nroots"
        },
        "maxdim": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxdim"
        },
        "maxiter": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Maxiter"
        },
        "nguess": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nguess"
        },
        "dtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dtol"
        },
        "rtol": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rtol"
        },
        "stablambda": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stablambda"
        },
        "orbwin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "ewin": {
          "anyOf": [
            {
              "$ref": "#/$defs/NumList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "Stab",
      "type": "object"
    },
    "TSMode": {
      "description": "Class to model the `tsmode` attribute in `BlockGeom`.\n\nAttributes\n----------\nmode: {\"A\",\"B\",\"D\",\"M\"}\n    Defines mode for modification\nx: int\n    choose mode to follow uphill in TS optimization\natom1: int\n    Specify first atom\natom2: int\n    Specify second atom\natom3: int\n    Specify third atom\natom4: int\n    Specify fourth atom",
      "properties": {
        "mode": {
          "default": "M",
          "enum": [
            "A",
            "B",
            "D",
            "M"
          ],
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom1"
        },
        "atom2": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom2"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        },
        "x": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "X"
        }
      },
      "title": "TSMode",
      "type": "object"
    },
    "Trah": {
      "description": "Class to model `trah` attribute in `BlockScf`\n\nAttributes\n----------\nprecond: {\"diag\", \"full\", \"none\"}\npreconmaxred: int",
      "properties": {
        "precond": {
          "anyOf": [
            {
              "enum": [
                "diag",
                "full",
                "none"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Precond"
        },
        "preconmaxred": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Preconmaxred"
        }
      },
      "title": "Trah",
      "type": "object"
    },
    "Element": {
      "title": "Element",
      "description": "Class that stores a list of all elements.\nWhen an element is required as an input, it is to be selected from this class to avoid user error",
      "type": "string",
      "enum": [
        "H",
        "He",
        "Li",
        "Be",
        "B",
        "C",
        "N",
        "O",
        "F",
        "Ne",
        "Na",
        "Mg",
        "Al",
        "Si",
        "P",
        "S",
        "Cl",
        "Ar",
        "K",
        "Ca",
        "Sc",
        "Ti",
        "V",
        "Cr",
        "Mn",
        "Fe",
        "Co",
        "Ni",
        "Cu",
        "Zn",
        "Ga",
        "Ge",
        "As",
        "Se",
        "Br",
        "Kr",
        "Rb",
        "Sr",
        "Y",
        "Zr",
        "Nb",
        "Mo",
        "Tc",
        "Ru",
        "Rh",
        "Pd",
        "Ag",
        "Cd",
        "In",
        "Sn",
        "Sb",
        "Te",
        "I",
        "Xe",
        "Cs",
        "Ba",
        "La",
        "Ce",
        "Pr",
        "Nd",
        "Pm",
        "Sm",
        "Eu",
        "Gd",
        "Tb",
        "Dy",
        "Ho",
        "Er",
        "Tm",
        "Yb",
        "Lu",
        "Hf",
        "Ta",
        "W",
        "Re",
        "Os",
        "Ir",
        "Pt",
        "Au",
        "Hg",
        "Tl",
        "Pb",
        "Bi",
        "Po",
        "At",
        "Rn",
        "Fr",
        "Ra",
        "Ac",
        "Th",
        "Pa",
        "U",
        "Np",
        "Pu",
        "Am",
        "Cm",
        "Bk",
        "Cf",
        "Es",
        "Fm",
        "Md",
        "No",
        "Lr",
        "Rf",
        "Db",
        "Sg",
        "Bh",
        "Hs",
        "Mt",
        "Ds",
        "Rg",
        "Cn",
        "Nh",
        "Fl",
        "Mc",
        "Lv",
        "Ts",
        "Og"
      ]
    },
    "Solvent": {
      "title": "Solvent",
      "description": "Enum that stores all valid solvents for use in ORCA",
      "type": "string",
      "enum": [
        "HEPTANOL",
        "FLUOROBENZENE",
        "ACETONE",
        "PERFLUOROBENZENE",
        "CH3CN",
        "TETRACHLOROETHENE",
        "PENTANOL",
        "PROPANOL",
        "METHYLFORMAMIDE",
        "TBUTYLBENZENE",
        "METHOXYETHANOL",
        "NONANOL",
        "2-PROPANOL",
        "1-HEXENE",
        "P-XYLENE",
        "TRIBUTYLPHOSPHATE",
        "BUTYLACETATE",
        "HEXANOL",
        "M-XYLENE",
        "1-BROMOPROPANE",
        "MENO2",
        "BROMOBENZENE",
        "TETRAHYDROFURAN",
        "N-OCTANE",
        "TETRAHYDROTHIOPHENEDIOXIDE",
        "WATER",
        "1-BROMO-2-METHYLPROPANE",
        "HEXADECANE",
        "PROPANONITRILE",
        "HEPTANE",
        "1-NITROPROPANE",
        "TRANS-DECALIN",
        "ODICHLOROBENZENE",
        "5-NONANONE",
        "2-PENTANONE",
        "BENZYL ALCOHOL",
        "SECBUTANOL",
        "TRIETHYLAMINE",
        "DIPHENYLETHER",
        "BUTANOIC ACID",
        "DECALIN",
        "DIETHYLETHER",
        "FORMIC ACID",
        "DIBUTYLETHER",
        "HEXANOIC ACID",
        "2METHYLPYRIDINE",
        "2-METHYLPYRIDINE",
        "N-PENTANE",
        "N-HEXANE",
        "PROPYL ETHANOATE",
        "IODOBENZENE",
        "ISOPROPANOL",
        "1-CHLOROPROPANE",
        "N-DODECANE",
        "ETHYL ETHANOATE",
        "PHENOL",
        "DODECANE",
        "CH2CL2",
        "ETHYL PHENYL ETHER",
        "ISOBUTANOL",
        "1-CHLOROPENTANE",
        "1-DECANOL",
        "A-CHLOROTOLUENE",
        "H2O",
        "CYCLOPENTANONE",
        "SECBUTYLBENZENE",
        "CHLOROBENZENE",
        "2-HEPTANONE",
        "1-PROPANOL",
        "ETHYLBENZENE",
        "E-2-PENTENE",
        "O-NITROTOLUENE",
        "2-METHYL-2-PROPANOL",
        "PENTANE",
        "2-METHOXYETHANOL",
        "PENTANOIC ACID",
        "4-METHYL-2-PENTANONE",
        "BUTANOL",
        "2-BUTANOL",
        "2-HEXANONE",
        "ACETICACID",
        "DICHLOROMETHANE",
        "METHYL BENZOATE",
        "N-DECANE",
        "HEXANE",
        "CARBON TETRACHLORIDE",
        "MCRESOL",
        "XYLENE",
        "BUTYL ETHANOATE",
        "BUTANONE",
        "IODOMETHANE",
        "METHYL METHANOATE",
        "OCRESOL",
        "PENTANAL",
        "2-METHYLPENTANE",
        "ETHANETHIOL",
        "PENTYL ETHANOATE",
        "1-IODOBUTANE",
        "THF",
        "4-METHYLPYRIDINE",
        "BENZENE",
        "CARBON DISULFIDE",
        "N-HEXADECANE",
        "PROPANOIC ACID",
        "N-UNDECANE",
        "METHYL PROPANOATE",
        "ETHOXYBENZENE",
        "METHYL ETHANOATE",
        "DIETHYL SULFIDE",
        "ACETIC ACID",
        "METHYLCYCLOHEXANE",
        "PENTYLAMINE",
        "2-CHLOROBUTANE",
        "4-HEPTANONE",
        "CYCLOPENTANE",
        "THIOPHENOL",
        "1-IODOPENTANE",
        "PHNO2",
        "1-IODOPROPANE",
        "2-BROMOPROPANE",
        "1-NONANOL",
        "DIISOPROPYLETHER",
        "HEXADECYLIODIDE",
        "NITROETHANE",
        "SULFOLANE",
        "PROPYLAMINE",
        "DMSO",
        "ISOPROPYLBENZENE",
        "TOLUENE",
        "1-FLUOROOCTANE",
        "1-BUTANOL",
        "M-CRESOL",
        "2-OCTANONE",
        "3-PENTANONE",
        "BENZONITRILE",
        "CYCLOPENTANOL",
        "O-DICHLOROBENZENE",
        "NITROMETHANE",
        "ETHYLACETATE",
        "DIETHYL ETHER",
        "DECANE",
        "P-ISOPROPYLTOLUENE",
        "UNDECANE",
        "THIOPHENE",
        "OCTANE",
        "1-HEXANOL",
        "DMF",
        "O-CRESOL",
        "1-PENTANOL",
        "MECN",
        "ANILINE",
        "ACETONITRILE",
        "1-CHLOROHEXANE",
        "DIBROMOMETHANE",
        "DIOXANE",
        "METHANOL",
        "BUTYL ACETATE",
        "TRICHLOROETHENE",
        "ISOOCTANE",
        "BUTYLBENZENE",
        "PENTADECANE",
        "1-HEXYNE",
        "CIS-DECALIN",
        "HEXAFLUOROBENZENE",
        "DCM",
        "IODOETHANE",
        "DIMETHYLACETAMIDE",
        "NITROBENZENE",
        "DIPROPYLAMINE",
        "BUTANONITRILE",
        "N-HEPTANE",
        "N-METHYLANILINE",
        "PYRIDINE",
        "DIMETHYLSULFOXIDE",
        "CHLOROHEXANE",
        "C2CL4",
        "1-IODOHEXADECANE",
        "ETHANOL",
        "4METHYL2PENTANONE",
        "NONANE",
        "1-HEPTANOL",
        "CYCLOHEXANONE",
        "CS2",
        "DECANOL",
        "BUTYLAMINE",
        "BENZALDEHYDE",
        "DIISOPROPYL ETHER",
        "1-BROMOOCTANE",
        "AMMONIA",
        "DIMETHYLFORMAMIDE",
        "PHENYLETHER",
        "CHCL3",
        "DIETHYLAMINE",
        "2-METHYL-1-PROPANOL",
        "BROMOFORM",
        "ETHYL METHANOATE",
        "ONITROTOLUENE",
        "SEC-BUTYLBENZENE",
        "1-OCTANOL",
        "CYCLOHEXANE",
        "CHLOROFORM",
        "ANISOLE",
        "ISOPROPYLTOLUENE",
        "PROPANAL",
        "BROMOOCTANE",
        "BROMOETHANE",
        "DIMETHYL DISULFIDE",
        "MESITYLENE",
        "N-BUTYLBENZENE",
        "METHYL BUTANOATE",
        "N-METHYLFORMAMIDE",
        "N-PENTADECANE",
        "BUTANAL",
        "TETRALIN",
        "N-NONANE",
        "DIIODOMETHANE",
        "CCL4",
        "O-XYLENE",
        "1-PENTENE",
        "2-NITROPROPANE",
        "O-CHLOROTOLUENE",
        "3-METHYLPYRIDINE",
        "CARBONDISULFIDE",
        "2-PROPEN-1-OL",
        "FORMAMIDE",
        "ACETOPHENONE",
        "TERT-BUTYLBENZENE",
        "OCTANOL",
        "BENZYLALCOHOL",
        "1-BROMOPENTANE",
        "FURANE",
        "FURAN",
        "ETHYL ACETATE",
        "WOCTANOL",
        "WETOCTANOL",
        "CONDUCTOR"
      ]
    },
    "FragProc": {
      "description": "Class to model `fragproc` attribute in `BlockFrag`",
      "properties": {
        "flags": {
          "items": {
            "enum": [
              "extlib",
              "connectivity",
              "atomic",
              "functionalgroups",
              "coarsegrained",
              "notassigned",
              "backbone",
              "seqbackbone",
              "aabackbone",
              "aminoacids",
              "aasidechains",
              "aascfinegrained",
              "nabackbone",
              "nabbfinegrained",
              "seqnabackbone",
              "nucleoticacid",
              "nasidechains",
              "solvents",
              "water",
              "extend",
              "fusebyatoms",
              "delextlib",
              "delconnectivity",
              "delatomic",
              "delfunctionalgroups",
              "delcoarsegrained",
              "delbackbone",
              "delseqbackbone",
              "delaabackbone",
              "delaminoacids",
              "delaasidechains",
              "delaascfinegrained",
              "delnabackbone",
              "delnabbfinegrained",
              "delseqnabackbone",
              "delnucleoticacid",
              "delnasidechains",
              "delsolvents",
              "delwater"
            ],
            "type": "string"
          },
          "title": "Flags",
          "type": "array"
        }
      },
      "required": [
        "flags"
      ],
      "title": "FragProc",
      "type": "object"
    },
    "GeomWrapper": {
      "description": "Base class for all custom classes used for `BlockGeom`",
      "properties": {
        "mode": {
          "title": "Mode",
          "type": "string"
        },
        "atom1": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom1"
        },
        "atom2": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom2"
        },
        "atom3": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom3"
        },
        "atom4": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "const": "*",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atom4"
        }
      },
      "required": [
        "mode"
      ],
      "title": "GeomWrapper",
      "type": "object"
    },
    "GeomWrapperBox": {
      "description": "Class to model a collection of `GeomWrapper` objects",
      "properties": {},
      "title": "GeomWrapperBox",
      "type": "object"
    },
    "SubBlock": {
      "description": "Class to define a sub block within an input block",
      "properties": {},
      "title": "SubBlock",
      "type": "object"
    },
    "StringEnum": {
      "title": "StringEnum",
      "description": "Variant of StrEnum that allows case-insensitive conversion of a plain string into the corresponding Enum member.",
      "type": "string",
      "enum": []
    },
    "Energy": {
      "description": "Base class for energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: StrictStr | None = None\n    String that identifies the method that was used for the energy calculation.\n    Is used for discriminating different energy types\nmult: list[list[StrictPositiveInt]] | None = None\n    List of electronic multiplicities\ntotalenergy: list[list[StrictFiniteFloat]]\n    The total calculated Energy",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        }
      },
      "title": "Energy",
      "type": "object"
    },
    "EnergyList": {
      "$defs": {
        "AutoCiEnergy": {
          "description": "This class contains information about the Auto CI Energy\n\nAttributes\n-----------\nmethod: Literal[\"AUTOCI\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types.\nnumofel: StrictNonNegativeInt\n    Number of electrons\nnumofcorrel: StrictNonNegativeInt\n    Number of corr-electrons\nnumofalphacorrel: StrictNonNegativeInt\n    Number of corr-electrons with an alpha spin\nnumofbetacorell: StrictNonNegativeInt\n    Number of corr-electrons with a beta spin\nrefenergy: StrictFiniteFloat\n    Energy reference\ncorrenergy: StrictFiniteFloat\n    Total energy contribution of the electron-correlation",
          "properties": {
            "method": {
              "const": "AUTOCI",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "AutoCiEnergy",
          "type": "object"
        },
        "CasEnergy": {
          "description": "This class contains information about the CASSCF energy",
          "properties": {
            "method": {
              "const": "CASSCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "CasEnergy",
          "type": "object"
        },
        "Caspt2Energy": {
          "description": "This class contains information about NEVPT2/CASPT2 energies",
          "properties": {
            "method": {
              "const": "CASSCF IC-PT2: NEVPT2/CASPT2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "Caspt2Energy",
          "type": "object"
        },
        "CisEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"TDA/CIS\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types\nblock: list[list[StrictNonNegativeInt]]\nnblocks: StrictNonNegativeInt\nnroots: list[list[StrictNonNegativeInt]]\nntotalroots: StrictNonNegativeInt\nrelcorr: str\nroot: list[list[StrictNonNegativeInt]]\ndcorr: float\n    (D) correction algorithm\ne0: float\n    Energy of the ground state\nmode: str\nmultp1: bool\n    if the higher multiplicity was also done",
          "properties": {
            "method": {
              "const": "TDA/CIS",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "block": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Block",
              "type": "array"
            },
            "nblocks": {
              "minimum": 0,
              "title": "Nblocks",
              "type": "integer"
            },
            "nroots": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Nroots",
              "type": "array"
            },
            "ntotalroots": {
              "minimum": 0,
              "title": "Ntotalroots",
              "type": "integer"
            },
            "relcorr": {
              "title": "Relcorr",
              "type": "string"
            },
            "root": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Root",
              "type": "array"
            },
            "dcorr": {
              "title": "Dcorr",
              "type": "number"
            },
            "e0": {
              "title": "E0",
              "type": "number"
            },
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "multp1": {
              "title": "Multp1",
              "type": "boolean"
            }
          },
          "required": [
            "method",
            "block",
            "nblocks",
            "nroots",
            "ntotalroots",
            "relcorr",
            "root",
            "dcorr",
            "e0",
            "mode",
            "multp1"
          ],
          "title": "CisEnergy",
          "type": "object"
        },
        "Energy": {
          "description": "Base class for energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: StrictStr | None = None\n    String that identifies the method that was used for the energy calculation.\n    Is used for discriminating different energy types\nmult: list[list[StrictPositiveInt]] | None = None\n    List of electronic multiplicities\ntotalenergy: list[list[StrictFiniteFloat]]\n    The total calculated Energy",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "title": "Energy",
          "type": "object"
        },
        "MdcisdEnergies": {
          "properties": {
            "method": {
              "const": "MDCI(SD)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "MdcisdEnergies",
          "type": "object"
        },
        "Mdcisd_t_Energies": {
          "properties": {
            "method": {
              "const": "MDCI(SD(T))",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mdcisd_t_Energies",
          "type": "object"
        },
        "Mp2Energy": {
          "description": "This class contains information about the MP2 energy",
          "properties": {
            "method": {
              "const": "MP2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2Energy",
          "type": "object"
        },
        "Mp2OOEnergy": {
          "description": "This class contains information about the orbital-optimized MP2 energy",
          "properties": {
            "method": {
              "const": "MP2(OO)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2OOEnergy",
          "type": "object"
        },
        "ScfEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"SCF\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types",
          "properties": {
            "method": {
              "const": "SCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "ScfEnergy",
          "type": "object"
        }
      },
      "description": "RootModel for identifying different ORCA energy types based on their `method` string",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/ScfEnergy"
          },
          {
            "$ref": "#/$defs/MdcisdEnergies"
          },
          {
            "$ref": "#/$defs/Mdcisd_t_Energies"
          },
          {
            "$ref": "#/$defs/CasEnergy"
          },
          {
            "$ref": "#/$defs/Caspt2Energy"
          },
          {
            "$ref": "#/$defs/AutoCiEnergy"
          },
          {
            "$ref": "#/$defs/Mp2Energy"
          },
          {
            "$ref": "#/$defs/Mp2OOEnergy"
          },
          {
            "$ref": "#/$defs/CisEnergy"
          },
          {
            "$ref": "#/$defs/Energy"
          }
        ]
      },
      "title": "EnergyList",
      "type": "array"
    },
    "GbwResults": {
      "$defs": {
        "Atoms": {
          "description": "Contains information about the Atoms in the calculation\n\nAttributes\n----------\nbasis: list[Base]\n    Contains the information about the basis\nbasisauxc: list[Base] | None default None\n    Contains the information about the basis aux c\nbasisauxj: list[Base] | None default None\n    Contains the information about the basis auxj\nbasisauxjk: list[Base] | None default None\n    Contains the information about the basis auxjk\ncoords: list[StrictFiniteFloat]\n    Coordinates of the atom\nelementlabel: StrictStr\n    Label of the element according to the PSE\nelementnumber: StrictNonNegativeInt\n    Number of the element according to the PSE\nidx StrictNonNegativeInt\n    Index of the atom\nloewdincharge: StrictFiniteFloat\n    loewdincharge at the atom\nmullicancharge: StrictFiniteFloat\n    mullikencharge at the atom\nnuclearcharge: StrictFiniteFloat\n    nuclearcharge at the atom",
          "properties": {
            "basis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basis"
            },
            "basisauxc": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxc"
            },
            "basisauxj": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxj"
            },
            "basisauxjk": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxjk"
            },
            "coords": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coords"
            },
            "elementlabel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elementlabel"
            },
            "elementnumber": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elementnumber"
            },
            "idx": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Idx"
            },
            "loewdincharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Loewdincharge"
            },
            "mullikencharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mullikencharge"
            },
            "nuclearcharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuclearcharge"
            }
          },
          "title": "Atoms",
          "type": "object"
        },
        "Base": {
          "description": "Contains the information about the base of the atoms\n\nAttributes\n----------\ncoefficients: list[StrictFloat]\n    Coefficients of the basis functions\nexponents: list[StrictFloat]\n    Exponents of the Basis functions\nshell: StrictStr\n    Shell of the Basis set",
          "properties": {
            "coefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coefficients"
            },
            "exponents": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exponents"
            },
            "shell": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shell"
            }
          },
          "title": "Base",
          "type": "object"
        },
        "Cite": {
          "description": "This class contains the keys for the papers that are necessary to cite\n\nAttributes\n----------\nORCA2022: Paper | None, default None\n    Key for the ORCA 2022 paper\nSHARK: Paper | None, default None\n    Key for the SHARK paper",
          "properties": {
            "ORCA2022": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Paper"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "SHARK": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Paper"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            }
          },
          "title": "Cite",
          "type": "object"
        },
        "MO": {
          "description": "This class contains information about\n\nAttributes\n----------\nmocoefficients: list[StrictFloat]\n    Coefficient of the molecular orbitals\noccupancy: StrictNonNegativeFloat\n    Occupancy of the molecular orbital\norbitalenergy: StrictFloat\n    Energy of the molecular orbital\norbitalsymlabel: StrictStr\n    Symmetry label of the molecular orbital\norbitalsymmetry: StrictInt\n    Symmetry of the molecular orbital",
          "properties": {
            "mocoefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mocoefficients"
            },
            "occupancy": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occupancy"
            },
            "orbitalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalenergy"
            },
            "orbitalsymlabel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymlabel"
            },
            "orbitalsymmetry": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymmetry"
            }
          },
          "title": "MO",
          "type": "object"
        },
        "MolecularOrbitals": {
          "description": "This class contains Information about the molecular orbital\n\nAttributes\n----------\nenergyunit: StrictStr\n    Unit of the energy\nmos: MO\n    Information about the molecular Orbitals\norbitallabels: list[StrictStr]\n    Orbital label of each orbital",
          "properties": {
            "energyunit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energyunit"
            },
            "mos": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/MO"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mos"
            },
            "orbitallabels": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitallabels"
            }
          },
          "title": "MolecularOrbitals",
          "type": "object"
        },
        "Molecule": {
          "description": "This class contains the information about the Molecule\n\nAttributes\n----------\natoms: list[Atoms]\n    Contains information about the Atoms\nbasename: StrictStr\n    The basename of the calculation\nmolecularorbital: MolecularOrbital\n    Contains information about the molecular orbitals\nmultiplicity: StrictInt\n    multiplicity of the molecule\ncharge: StrictInt\n    charge of the molecule\nhftyp: StrictStr\n    Used shell-type (e.g., UHF/RHF) in the calculation\norigin: tuple[StrictFloat, StrictFloat, StrictFloat]\n    Origin of the molecule\ns_matrix: list[list[StrictFloat]]\n    Overlap matrix\nh_matrix: list[list[StrictFloat]]\n    Hcore matrix (1-el integrals)\nf_matrix: f_matrix: list[list[list[StrictFloat]]]\n    Fock matrix/matrices\nj_matrix: list[list[list[StrictFloat]]]\n    Coulomb integrals (2-el integrals)\nk_matrix: list[list[list[StrictFloat]]]\n    Exchange integrals (2-el integrals)\npointgroup: StrictStr\n    Pointgroup of the molecule\ntd_dft: TdDft | None default = None\n    Contains information about td-dft calculation",
          "properties": {
            "atoms": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Atoms"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atoms"
            },
            "basename": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basename"
            },
            "molecularorbitals": {
              "anyOf": [
                {
                  "$ref": "#/$defs/MolecularOrbitals"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "coordinateunits": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coordinateunits"
            },
            "multiplicity": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicity"
            },
            "charge": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Charge"
            },
            "hftyp": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Hftyp"
            },
            "origin": {
              "maxItems": 3,
              "minItems": 3,
              "prefixItems": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "title": "Origin",
              "type": "array"
            },
            "s-matrix": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "S-Matrix"
            },
            "h-matrix": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "H-Matrix"
            },
            "f-matrix": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "F-Matrix"
            },
            "j-matrix": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "J-Matrix"
            },
            "k-matrix": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "K-Matrix"
            },
            "pointgroup": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pointgroup"
            },
            "td-dft": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/TdDft"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Td-Dft"
            }
          },
          "required": [
            "origin"
          ],
          "title": "Molecule",
          "type": "object"
        },
        "OrcaHeader": {
          "description": "This class contains the information about the Orca Header\n\nAttributes\n----------\ndate: StrictStr\n    Time and Date of the calculation\ngit: StrictStr\n    Git version\nversion: StrictStr\n    Orca-version",
          "properties": {
            "date": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Date"
            },
            "git": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Git"
            },
            "version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Version"
            }
          },
          "title": "OrcaHeader",
          "type": "object"
        },
        "Paper": {
          "description": "This class contains the information about the minimum literature that needs to bee cited\n\nAttributes\n----------\nauthor: list[StrictStr]\n    Name of the Authors\ntitle: StrictStr\n    Title of the paper\njournal: StrictStr\n    Journal that published the paper\nyear: StrictPositiveInt\n    Year of the publication\nvolume: StrictPositiveInt | None default = None\n    Volume of the Journal\nnumber: StrictPositiveInt | None default = None\n    number of the paper\npages: StrictStr\n    Number of pages\ndoi: StrictStr\n    Doi of the paper\ntype: StrictStr\n    Type of the literature",
          "properties": {
            "author": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Author"
            },
            "title": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Title"
            },
            "journal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Journal"
            },
            "year": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Year"
            },
            "volume": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Volume"
            },
            "number": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Number"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pages"
            },
            "doi": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doi"
            },
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Type"
            }
          },
          "title": "Paper",
          "type": "object"
        },
        "TdDft": {
          "description": "This class contains the information about the TD-DFT\n\nAttributes\n----------\niroot: StrictInt\n    The root to be optimized\norbwin: list[StrictPositiveInt]\n    Orbital Window\nx: StrictNonNegativeFloat\n    AO basis amplitudes for cis/tda-td-dft\nxy: StrictNonNegativeFloat\n    AO basis amplitudes for rpa/td-dft",
          "properties": {
            "iroot": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Iroot"
            },
            "orbwin": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbwin"
            },
            "x": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "X"
            },
            "x+y": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "X+Y"
            }
          },
          "title": "TdDft",
          "type": "object"
        }
      },
      "description": "This class contains all the information from the baseman.json file\n\nAttributes\n----------\norca header: OrcaHeader\n    Contains information from the ORCA-Header\ncitations: List[Cite]\n    Contains the paper that are necessary to cite\nmolecule: Molecule\n    Contains information about the molecule",
      "properties": {
        "orca header": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrcaHeader"
            },
            {
              "type": "null"
            }
          ]
        },
        "citations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Cite"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Citations"
        },
        "molecule": {
          "anyOf": [
            {
              "$ref": "#/$defs/Molecule"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "orca header"
      ],
      "title": "GbwResults",
      "type": "object"
    },
    "Hftypes": {
      "title": "Hftypes",
      "description": "Enumeration to keep track of the different wavefunction types available in ORCA",
      "type": "string",
      "enum": [
        "rhf",
        "uhf",
        "rohf",
        "casscf"
      ]
    },
    "MO": {
      "description": "This class contains information about\n\nAttributes\n----------\nmocoefficients: list[StrictFloat]\n    Coefficient of the molecular orbitals\noccupancy: StrictNonNegativeFloat\n    Occupancy of the molecular orbital\norbitalenergy: StrictFloat\n    Energy of the molecular orbital\norbitalsymlabel: StrictStr\n    Symmetry label of the molecular orbital\norbitalsymmetry: StrictInt\n    Symmetry of the molecular orbital",
      "properties": {
        "mocoefficients": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mocoefficients"
        },
        "occupancy": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Occupancy"
        },
        "orbitalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbitalenergy"
        },
        "orbitalsymlabel": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbitalsymlabel"
        },
        "orbitalsymmetry": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbitalsymmetry"
        }
      },
      "title": "MO",
      "type": "object"
    },
    "PropertyResults": {
      "$defs": {
        "AutoCiEnergy": {
          "description": "This class contains information about the Auto CI Energy\n\nAttributes\n-----------\nmethod: Literal[\"AUTOCI\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types.\nnumofel: StrictNonNegativeInt\n    Number of electrons\nnumofcorrel: StrictNonNegativeInt\n    Number of corr-electrons\nnumofalphacorrel: StrictNonNegativeInt\n    Number of corr-electrons with an alpha spin\nnumofbetacorell: StrictNonNegativeInt\n    Number of corr-electrons with a beta spin\nrefenergy: StrictFiniteFloat\n    Energy reference\ncorrenergy: StrictFiniteFloat\n    Total energy contribution of the electron-correlation",
          "properties": {
            "method": {
              "const": "AUTOCI",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "AutoCiEnergy",
          "type": "object"
        },
        "BrokenSym": {
          "description": "This class contains the information about the broken symmetry calculation\n\nAttributes\n----------\nenhighspin: StrictFiniteFloat\n    Energy of the high spin case\nenbrokensym: StrictFiniteFloat\n    Energy of the broken symmetry case\nshighspin: StrictPositiveFloat\n    Spin of the high spin case\ns2highspin: StrictPositiveFloat\n    s² of the high spin case\ns2brokensym: StrictPositiveFloat\n    s² of the broken symmetry case",
          "properties": {
            "enhighspin": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enhighspin"
            },
            "enbrokensym": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enbrokensym"
            },
            "shighspin": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shighspin"
            },
            "s2highspin": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "S2Highspin"
            },
            "s2brokensym": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "S2Brokensym"
            }
          },
          "title": "BrokenSym",
          "type": "object"
        },
        "CalcInfo": {
          "description": "Contains the information about the Job done by ORCA\n\nAttributes\n----------\ncharge: StrictInt\n    Charge of the molecule\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nnumofatoms: StrictPositiveInt\n    Numbers of atoms in the molecule\nnumofelectrons: StrictNonNegativeInt\n    Number of electrons in the molecule\nnumoffcelectrons: StrictNonNegativeInt\n    Number of fc electrons\nnumofcorrelectrons: StrictNonNegativeInt\n    Number of corr electrons\nnumofbasisfuncts: PositiveInt\n    Number of basis function\nnumofauxcbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary C basis function\nnumofauxjbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary J basis function\nnumofauxjkbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary JK basis function\nnumofcabsbasisfuncts: StrictNonNegativeInt\n    Number of CABs basis function",
          "properties": {
            "charge": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Charge"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "numofatoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofatoms"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofcorrelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrelectrons"
            },
            "numofbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbasisfuncts"
            },
            "numofauxcbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxcbasisfuncts"
            },
            "numofauxjbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxjbasisfuncts"
            },
            "numofauxjkbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxjkbasisfuncts"
            },
            "numofcabsbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcabsbasisfuncts"
            }
          },
          "title": "CalcInfo",
          "type": "object"
        },
        "CalculationStatus": {
          "description": "Contains information about the calculation Status\n\nAttributes\n----------\nprogname: StrictStr\n    Name of the program\nstatus: StrictStr\n    gives the status of the Calculation, if it terminated normally or if it get stuck\nversion: StrictStr\n    gives the status of the Calculation, if it terminated normally or if it get stuck",
          "properties": {
            "progname": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Progname"
            },
            "status": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Status"
            },
            "version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Version"
            }
          },
          "title": "CalculationStatus",
          "type": "object"
        },
        "CalculationTiming": {
          "description": "Has the Information about the calculation Timing\n\nAttributes\n----------\ngstep: StrictNonNegativeFloat\n    Time of geometry steps\ngtoint: StrictNonNegativeFloat\n    Time of integral generation\nprop: StrictNonNegativeFloat\n    Time of property generation\nscf: StrictNonNegativeFloat\n    Time of solving the SCF\nscfgrad: StrictNonNegativeFloat\n    Time of gradient calculation\nsum: StrictNonNegativeFloat\n    Total time of the calculation",
          "properties": {
            "gstep": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Gstep"
            },
            "gtoint": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Gtoint"
            },
            "prop": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Prop"
            },
            "scf": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scf"
            },
            "scfgrad": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scfgrad"
            },
            "sum": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sum"
            }
          },
          "title": "CalculationTiming",
          "type": "object"
        },
        "CasEnergy": {
          "description": "This class contains information about the CASSCF energy",
          "properties": {
            "method": {
              "const": "CASSCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "CasEnergy",
          "type": "object"
        },
        "Caspt2Energy": {
          "description": "This class contains information about NEVPT2/CASPT2 energies",
          "properties": {
            "method": {
              "const": "CASSCF IC-PT2: NEVPT2/CASPT2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "Caspt2Energy",
          "type": "object"
        },
        "ChemicalShift": {
          "description": "This class contains the information about the chemical shift for NMR calculations\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    Index of the nuclei\nelems: list[StrictPositiveInt]\n    Number of the place of the Element in the periodic table\nstot: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Total tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors\nstoteigen: list[list[list[StrictFiniteFloat]]]\n    Eigenvalues",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elems": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elems"
            },
            "stot": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Stot"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            },
            "stoteigen": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Stoteigen"
            }
          },
          "title": "ChemicalShift",
          "type": "object"
        },
        "CiPsi": {
          "description": "This class contains the information about the CI PSI calculation\n\nAttributes\n----------\nmultiplicity: StrictPositiveInt\n    Multiplicity of the system\nfinalenergy: StrictFiniteFloat\n    Final calculated energies\nnumofroots: StrictNonNegativeInt\n    Number of roots\nenergies: list[list[StrictFiniteFloat]]\n    list of calculated energies",
          "properties": {
            "multiplicity": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicity"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "numofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofroots"
            },
            "energies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energies"
            }
          },
          "title": "CiPsi",
          "type": "object"
        },
        "CisEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"TDA/CIS\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types\nblock: list[list[StrictNonNegativeInt]]\nnblocks: StrictNonNegativeInt\nnroots: list[list[StrictNonNegativeInt]]\nntotalroots: StrictNonNegativeInt\nrelcorr: str\nroot: list[list[StrictNonNegativeInt]]\ndcorr: float\n    (D) correction algorithm\ne0: float\n    Energy of the ground state\nmode: str\nmultp1: bool\n    if the higher multiplicity was also done",
          "properties": {
            "method": {
              "const": "TDA/CIS",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "block": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Block",
              "type": "array"
            },
            "nblocks": {
              "minimum": 0,
              "title": "Nblocks",
              "type": "integer"
            },
            "nroots": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Nroots",
              "type": "array"
            },
            "ntotalroots": {
              "minimum": 0,
              "title": "Ntotalroots",
              "type": "integer"
            },
            "relcorr": {
              "title": "Relcorr",
              "type": "string"
            },
            "root": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Root",
              "type": "array"
            },
            "dcorr": {
              "title": "Dcorr",
              "type": "number"
            },
            "e0": {
              "title": "E0",
              "type": "number"
            },
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "multp1": {
              "title": "Multp1",
              "type": "boolean"
            }
          },
          "required": [
            "method",
            "block",
            "nblocks",
            "nroots",
            "ntotalroots",
            "relcorr",
            "root",
            "dcorr",
            "e0",
            "mode",
            "multp1"
          ],
          "title": "CisEnergy",
          "type": "object"
        },
        "Coordinates": {
          "description": "Contains the coordinates of the atoms of the molecule\n\nAttributes\n----------\ntype: StrictStr\n    The type of the coordinates\nunits: StrictStr\n    The unit of the coordinates\ncartesians: list[tuple[StrictStr, StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Contains the name",
          "properties": {
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Type"
            },
            "units": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Units"
            },
            "cartesians": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cartesians"
            }
          },
          "title": "Coordinates",
          "type": "object"
        },
        "DftEnergy": {
          "description": "This class contains the information about the DFT-energy.\n\nAttributes\n----------\nnalphael: StrictNonNegativeInt\n    Number of alpha electrons\nnbetael: StrictNonNegativeInt\n    Number of beta electrons\nntotalel: StrictNonNegativeInt\n    Total number of electrons\neexchange: StrictFiniteFloat\n    Calculated exchange energy\necorr: StrictFiniteFloat\n    Calculated correlation energy\necnl: StrictFiniteFloat\n    Calculated energy of the charge neutral level\nexc: StrictFiniteFloat\n    Calculated exchange-correlation energy\neembed: StrictFiniteFloat\n    Calculated energy from embedded DFT\nfinalen: StrictFiniteFloat\n    Total calculated energy",
          "properties": {
            "nalphael": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nalphael"
            },
            "nbetael": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nbetael"
            },
            "ntotalel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ntotalel"
            },
            "eexchange": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Eexchange"
            },
            "ecorr": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ecorr"
            },
            "ecnl": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ecnl"
            },
            "exc": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exc"
            },
            "eembed": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Eembed"
            },
            "finalen": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalen"
            }
          },
          "title": "DftEnergy",
          "type": "object"
        },
        "Dipole": {
          "description": "Has the Information about the dipole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Typ and relaxation of the density\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicdipole: StrictBool\n    Should the dipole atom calculation be done\ndipoleeleccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the electrons on the dipole moment in all three dimension\ndipolenuccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the nucleus on the dipole moment in all three dimension\ndipolemagnitude: StrictNonNegativeFloat\n    Float absolute dipole moment independent of direction\ndipoletotal: list[list[StrictFiniteFloat]]\n    Total dipole moment in all three dimension",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "doatomicdipole": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicdipole"
            },
            "dipoleeleccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipoleeleccontrib"
            },
            "dipolenuccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipolenuccontrib"
            },
            "dipolemagnitude": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipolemagnitude"
            },
            "dipoletotal": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipoletotal"
            }
          },
          "title": "Dipole",
          "type": "object"
        },
        "EfgTensor": {
          "description": "This class contains the Tensors of the EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelems: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\nqfac: list[StrictFiniteFloat]\n    Prefactor in MHz\nv: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Possible raw tensors of each tensor\nveigenvalues: list[list[StrictFiniteFloat]]\n    eigenvalue of each tensor\nviso: list[tuple[StrictFiniteFloat]]\n    iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    eigenvectors of each tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elems": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elems"
            },
            "isotope": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotope"
            },
            "i": {
              "anyOf": [
                {
                  "items": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "I"
            },
            "qfac": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qfac"
            },
            "v": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "V"
            },
            "veigenvalues": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Veigenvalues"
            },
            "viso": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Viso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "EfgTensor",
          "type": "object"
        },
        "Energy": {
          "description": "Base class for energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: StrictStr | None = None\n    String that identifies the method that was used for the energy calculation.\n    Is used for discriminating different energy types\nmult: list[list[StrictPositiveInt]] | None = None\n    List of electronic multiplicities\ntotalenergy: list[list[StrictFiniteFloat]]\n    The total calculated Energy",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "title": "Energy",
          "type": "object"
        },
        "EnergyExtrapolation": {
          "description": "This class contains information about the used Energy extrapolation\n\nAttributes\n----------\ndoep1: StrictBool\n    Do extrapolation with one method\ndoep2: StrictBool\n    Do extrapolation with two methods and the same basis set\ndoep3: StrictBool\n    Do extrapolation with two methods and three basis sets\ndogradients: StrictBool\n    Extrapolate energy gradient\nnumofenergies: StrictPositiveInt\n    How many energies are used\nscfenergies: list[list[StrictFiniteFloat]]\n    list of the used energies\nscfcbs: StrictFiniteFloat\n    SCF Energy extrapolated for complete basis set\ncorrenergies: list[list[StrictFiniteFloat]]\n    Used correlation energies\ncorrcbs: StrictFiniteFloat\n    Extrapolated correlation energy for correlation energy\nccsdtenergyx: StrictFiniteFloat default = None\n    CCSD(T] energy extrapolation, not used if only doep1 = true\ntotalcbs: StrictFiniteFloat\n    Total extrapolated energy",
          "properties": {
            "doep1": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep1"
            },
            "doep2": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep2"
            },
            "doep3": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep3"
            },
            "dogradients": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dogradients"
            },
            "numofenergies": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofenergies"
            },
            "scfenergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scfenergies"
            },
            "scfcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scfcbs"
            },
            "correnergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergies"
            },
            "corrcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrcbs"
            },
            "ccsdtenergyx": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ccsdtenergyx"
            },
            "totalcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalcbs"
            }
          },
          "title": "EnergyExtrapolation",
          "type": "object"
        },
        "EnergyList": {
          "description": "RootModel for identifying different ORCA energy types based on their `method` string",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ScfEnergy"
              },
              {
                "$ref": "#/$defs/MdcisdEnergies"
              },
              {
                "$ref": "#/$defs/Mdcisd_t_Energies"
              },
              {
                "$ref": "#/$defs/CasEnergy"
              },
              {
                "$ref": "#/$defs/Caspt2Energy"
              },
              {
                "$ref": "#/$defs/AutoCiEnergy"
              },
              {
                "$ref": "#/$defs/Mp2Energy"
              },
              {
                "$ref": "#/$defs/Mp2OOEnergy"
              },
              {
                "$ref": "#/$defs/CisEnergy"
              },
              {
                "$ref": "#/$defs/Energy"
              }
            ]
          },
          "title": "EnergyList",
          "type": "array"
        },
        "Geometries": {
          "description": "Contains the geometry dependent calculated results in the ORCA job\n\nAttributes\n----------\ngeometry: Geometry | None default = None\n    Contains information about the molecule\nenergy: EnergyList | None default = None\n    Contains information about the energies\nsingle_point_data: SinglePointData | None default = None\n    Contains information about the singlepoint\nmulliken_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains information about the Mulliken Population analyse\nloewdin_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains information about the Loewdin Population analyse\nchelpg_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains the information about the charges from electrostatic potentials using a grid-based population analysis (CHELPG)\nhirshfeld_population_analysis: list[HirshfeldPopulationAnalysis] | None default = None\n    Contains information about the Hirshfeld population analyse\nmayer_population_analysis: list[MayerPopulationAnalysis] | None default = None\n    Contains information about the Mayer population analyse\nmbis_population_analysis: list[MbisPopAnalysis] | None default = None\n    Contains information about the MBIS population analysis\ncalculation_info: CalcInfo | None default = None\n    Contains information of the Calculation\ndipole_moment: list[Dipole] | None default = None\n    Contains information about the dipole moment\nnuclear_gradient: list[NucGradient] | None default = None\n    Contains information about the nuclear gradients for geometry Optimization\ndft_energy: list[DftEnergy] | None default = None\n    Contains information about all energies calculated for DFT\nvdw_correction: VdwCorrection | None default = None\n    Contains information about the Van-der-Waals correction\nhessian: Hessian | None default = None\n    Contains information about the Hessian-matrix\nsolvation_details: SolvDetails | None default = None\n    Contains information about the used solvent and the solvent model\npolarizability: list[Polarizability] | None default = None\n    Contains information about the polarizability of the molecule\nabsorption_spectrum: list[Spectrum] | None default = None\n    Contains the information about the calculated UVVis spectra\necd_spectrum: list[Spectrum] | None default = None\n    Contains the information about the calculated ecd spectra\na_tensor: list[Tensor] | None default = None\n    Contains all the A-Tensor of the EPR calculation\nefg_tensor: list[EfgTensor] | None default = None\n    Contains all the EFG-Tensor of the EPR calculation\ng_tensor: list[Gtensor] | None default = None\n    Contains all the G-Tensor of the EPR calculation\nspin_spin_coupling: SpinSpinCoupling | None default = None\n    Contains information about the Spin-SpinCoupling\nchemical_shift: list[ChemicalShift] | None default = None\n    Contains information about the chemical shift on SCF level\nnatural_orbitals: NaturalOrbitals | None default = None\n    Contains information about the natural orbitals\nmdci_led: Led | None default = None\n    Contains information about the local energy decomposition (LED)\nmdci_adld: MdciAdld | None default = None\n    Contains information about the mdci atomic decomposition of London dispersion (ADLD)\nmdci_adex: MdciAdex | None default = None\n    Contains information about the atomic decomposition of exchange (ADEX)\nbroken_symmetry: BrokenSym | None default = None\n    Contains information about the broken symmetry calculation\nquadrupole_moment: list[QuadrupleMoment] | None default = None\n    Contains the information about the SCF calculated quadruple moment\ncipsi_energies: list[CiPsi] | None default = None\n    Contains the information about the CIPSI calculation\nenergy_extrapolation: EnergyExtrapolation | None default = None\n    Contains information about the energy extrapolation\nroci_energy: list[RoCiEnergy] | None default = None\n    Contains information about the ROCI energy\nthermochemistry_energies: list[ThermochemistryEnergy] | None = None\n    Contains information about thermostatistical corrections\n    and final free energies",
          "properties": {
            "geometry": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Geometry"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "energy": {
              "anyOf": [
                {
                  "$ref": "#/$defs/EnergyList"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "single_point_data": {
              "anyOf": [
                {
                  "$ref": "#/$defs/SinglePointData"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "mulliken_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PopulationAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mulliken Population Analysis"
            },
            "loewdin_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PopulationAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Loewdin Population Analysis"
            },
            "chelpg_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/PopulationAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Chelpg Population Analysis"
            },
            "hirshfeld_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/HirshfeldPopulationAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Hirshfeld Population Analysis"
            },
            "mayer_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/MayerPopulationAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mayer Population Analysis"
            },
            "mbis_population_analysis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/MbisPopAnalysis"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mbis Population Analysis"
            },
            "calculation_info": {
              "anyOf": [
                {
                  "$ref": "#/$defs/CalcInfo"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "dipole_moment": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Dipole"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipole Moment"
            },
            "nuclear_gradient": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/NucGradient"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuclear Gradient"
            },
            "dft_energy": {
              "anyOf": [
                {
                  "$ref": "#/$defs/DftEnergy"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "vdw_correction": {
              "anyOf": [
                {
                  "$ref": "#/$defs/VdwCorrection"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "hessian": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Hessian"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "solvation_details": {
              "anyOf": [
                {
                  "$ref": "#/$defs/SolvDetails"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "polarizability": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Polarizability"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Polarizability"
            },
            "absorption_spectrum": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Spectrum"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Absorption Spectrum"
            },
            "ecd_spectrum": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Spectrum"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ecd Spectrum"
            },
            "a_tensor": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Tensor"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "A Tensor"
            },
            "efg_tensor": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/EfgTensor"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Efg Tensor"
            },
            "g_tensor": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Gtensor"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Tensor"
            },
            "spin_spin_coupling": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/SpinSpinCoupling"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spin Spin Coupling"
            },
            "chemical_shift": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ChemicalShift"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Chemical Shift"
            },
            "natural_orbitals": {
              "anyOf": [
                {
                  "$ref": "#/$defs/NaturalOrbitals"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "mdci_led": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Led"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "mdci_adld": {
              "anyOf": [
                {
                  "$ref": "#/$defs/MdciAdld"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "mdci_adex": {
              "anyOf": [
                {
                  "$ref": "#/$defs/MdciAdex"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "broken_symmetry": {
              "anyOf": [
                {
                  "$ref": "#/$defs/BrokenSym"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "quadrupole_moment": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/QuadrupoleMoment"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadrupole Moment"
            },
            "cipsi_energies": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/CiPsi"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cipsi Energies"
            },
            "energy_extrapolation": {
              "anyOf": [
                {
                  "$ref": "#/$defs/EnergyExtrapolation"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "roci_energy": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/RoCiEnergy"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Roci Energy"
            },
            "thermochemistry_energies": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/ThermochemistryEnergy"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Thermochemistry Energies"
            }
          },
          "title": "Geometries",
          "type": "object"
        },
        "Geometry": {
          "description": "Has the Information about the geometry of the Molecule used in the ORCA job\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms\nncorelessecp: StrictNonNegativeInt\n    Number of core-less ECPs\nnghostatoms: StrictNonNegativeInt\n    Number of ghost atoms\ncoordinates: Coordinates\n    Coordinates of all the atoms\nfragments: list[list[StrictPostivieInt]]\n    Contains Fragment IDs of atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "ncorelessecp": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ncorelessecp"
            },
            "nghostatoms": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nghostatoms"
            },
            "coordinates": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Coordinates"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "fragments": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Fragments"
            }
          },
          "title": "Geometry",
          "type": "object"
        },
        "Gtensor": {
          "description": "This class contains information about the G-Tensor in EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n   Used method for this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ng_matrix: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Matrix of the G-Tensor\ng_elec: StrictFiniteFloat\n    The free electron G-value contribution\ng_rmc: StrictFiniteFloat\n    Reduced mass correction\ng_tot: list[list[StrictFiniteFloat]]\n    Total G-tensor\ng_iso: StrictFiniteFloat\n    Isotropic part of the G-tensor\ng_dso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Diamagnetic contribution to the G-tensor\ng_pso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Paramagnetic contribution to the G-tensor\ndelta_g: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Delta G-Tensor w.r.t the free electron\ndelta_g_iso: StrictFiniteFloat\n    Error of the isotropic part of the G-tensor\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the G-tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "g_matrix": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Matrix"
            },
            "g_elec": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Elec"
            },
            "g_rmc": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Rmc"
            },
            "g_tot": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Tot"
            },
            "g_iso": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Iso"
            },
            "g_dso": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Dso"
            },
            "g_pso": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Pso"
            },
            "delta_g": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Delta G"
            },
            "delta_g_iso": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Delta G Iso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "Gtensor",
          "type": "object"
        },
        "Hessian": {
          "description": "Contains the information about the Hessian matrix and vibration Mods.\n\nAttributes\n----------\nhessian: list[list[list[StrictFloat]]]\n    Hessian-Matrix for the molecule\nmodes: list[list[list[StrictFloat]]]\n    Vibration-modes",
          "properties": {
            "hessian": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Hessian"
            },
            "modes": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Modes"
            }
          },
          "title": "Hessian",
          "type": "object"
        },
        "HirshfeldPopulationAnalysis": {
          "description": "Has the Information about the Hirshfeld population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictPositiveInt]]\n    Atom number according to the position in the periodic table\ndensa: StrictNonNegativeFiniteFloat\n    Density of alpha electrons\ndensb: StrictNonNegativeFiniteFloat\n    Density of beta electrons\natomiccharges: list[list[StrictFiniteFloat]]\n    Total charges of the atoms according to the Hirshfeld population analysis\nspin: list[list[StrictFiniteFloat]]\n    list of the spin densities, at the atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "densa": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densa"
            },
            "densb": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densb"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            },
            "spin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spin"
            }
          },
          "title": "HirshfeldPopulationAnalysis",
          "type": "object"
        },
        "Led": {
          "description": "This class contains information about the LED calculation\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt\n    Number of used fragments\nelectrostref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Electrostatics reference\nexchangeref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Exchange reference\ndispcontr: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Strong Pair Dispersion contribution\ndispweak: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Dispersion Weak pairs\nsumnondisstrong: StrictFiniteFloat\n    Sum of non dispersive correlation strong pairs\nsumnondisweak: StrictFiniteFloat\n    Sum of non dispersive correlation weak pairs",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "electrostref": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Electrostref"
            },
            "exchangeref": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exchangeref"
            },
            "dispcontr": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dispcontr"
            },
            "dispweak": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dispweak"
            },
            "sumnondisstrong": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sumnondisstrong"
            },
            "sumnondisweak": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sumnondisweak"
            },
            "corrint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrint"
            },
            "refint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refint"
            },
            "totint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totint"
            }
          },
          "title": "Led",
          "type": "object"
        },
        "MayerPopulationAnalysis": {
          "description": "Has the Information about the Mayer population analyses\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictFiniteFloat]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\nbondthresh: StrictPositiveFiniteFloat\n    Threshold for the bound order to be printed\nnbondordersprint: StrictPositiveInt\n    Number of bounds\nbondorders: list[list[StrictFiniteFloat]]\n    Bound order of each Bound\ncomponents: list[tuple[StrictNonNegativeInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    The indices and atomic numbers of the bonding atoms\nna : list[list[StrictFiniteFloat]]\n    Mulliken gross atomic population\nza: list[list[StrictFiniteFloat]]\n    Total nuclear charge\nqa: list[list[StrictFiniteFloat]]\n    Mulliken gross atomic charge\nva: list[list[StrictFiniteFloat]]\n    Mayer's total valence\nbva: list[list[StrictFiniteFloat]]\n    Mayer's bonded valence\nfa: list[list[StrictFiniteFloat]]\n    Mayer's free valence",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "bondthresh": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bondthresh"
            },
            "nbondordersprint": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nbondordersprint"
            },
            "bondorders": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bondorders"
            },
            "components": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Components"
            },
            "na": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Na"
            },
            "za": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Za"
            },
            "qa": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qa"
            },
            "va": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Va"
            },
            "bva": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bva"
            },
            "fa": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Fa"
            }
          },
          "title": "MayerPopulationAnalysis",
          "type": "object"
        },
        "MbisPopAnalysis": {
          "description": "This class contains the information about the MIBS population analysis\n\nAttributes\n----------\nnatoms: PositiveInt\n    Number of atoms\natno: list[list[PositiveInt]]\n    list with the Atom number according to the PSE\nthresh: PositiveFloat\n    Threshold for printing orbitals\nniter: PositiveInt\n    Number of iterations\nlargeprint: StrictBool\n    Has \"Largeprint\" been used\ndensa: PositiveFloat\n    Alpha densely\ndensb: PositiveFloat\n    Beta densely\natomiccharges: list[list[StrictFloat]]\n    list with atomic charges\nspin: list[list[StrictFloat]]\n    list of the spin density\nnpopval: list[list[NonNegativeFloat]]\n    Population value of each atoms\nsigmaval: list[list[StrictFloat]]\n    list of sigma value of the atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "thresh": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Thresh"
            },
            "niter": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Niter"
            },
            "largeprint": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Largeprint"
            },
            "densa": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densa"
            },
            "densb": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densb"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            },
            "spin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spin"
            },
            "npopval": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "minimum": 0,
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Npopval"
            },
            "sigmaval": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sigmaval"
            }
          },
          "title": "MbisPopAnalysis",
          "type": "object"
        },
        "MdciAdex": {
          "description": "This class contains information about the atomic decomposition of\nexchange (ADEX).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adex scheme\nadexatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Loewdin populations\nadexfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Loewdin populations\nadexatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Mulliken populations\nadexfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Mulliken populations",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "adexatomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexatomic Loewdin"
            },
            "adexfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexfrag Loewdin"
            },
            "adexatomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexatomic Mulliken"
            },
            "adexfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexfrag Mulliken"
            }
          },
          "title": "MdciAdex",
          "type": "object"
        },
        "MdciAdld": {
          "description": "This class contains information about the atomic decomposition of\nLondon dispersion (ADLD).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adld scheme\nadldcorratomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Loewdin populations\nadldcorrfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Loewdin populations\nadlddispatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Loewdin populations\nadlddispfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment dispersion contributions based on Loewdin populations\nadldcorratomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Mulliken populations\nadldcorrfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Mulliken populations\nadlddispatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations\nadlddispfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "adldcorratomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorratomic Loewdin"
            },
            "adldcorrfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorrfrag Loewdin"
            },
            "adlddispatomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispatomic Loewdin"
            },
            "adlddispfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispfrag Loewdin"
            },
            "adldcorratomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorratomic Mulliken"
            },
            "adldcorrfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorrfrag Mulliken"
            },
            "adlddispatomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispatomic Mulliken"
            },
            "adlddispfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispfrag Mulliken"
            }
          },
          "title": "MdciAdld",
          "type": "object"
        },
        "MdcisdEnergies": {
          "properties": {
            "method": {
              "const": "MDCI(SD)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "MdcisdEnergies",
          "type": "object"
        },
        "Mdcisd_t_Energies": {
          "properties": {
            "method": {
              "const": "MDCI(SD(T))",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mdcisd_t_Energies",
          "type": "object"
        },
        "Mp2Energy": {
          "description": "This class contains information about the MP2 energy",
          "properties": {
            "method": {
              "const": "MP2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2Energy",
          "type": "object"
        },
        "Mp2OOEnergy": {
          "description": "This class contains information about the orbital-optimized MP2 energy",
          "properties": {
            "method": {
              "const": "MP2(OO)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2OOEnergy",
          "type": "object"
        },
        "NaturalOrbitals": {
          "description": "This class contains the information about the natural orbitals in a broken symmetry calculation\n\nAttributes\n----------\nnel: StrictNonNegativeInt\n    Number of electrons\nnsomo: StrictNonNegativeInt\n    Number of SOMO\nndomo: StrictNonNegativeInt\n    Number of DOMO\nnvmo: StrictNonNegativeInt\n    Number of Virtual MO\nnnatoorbs: StrictNonNegativeInt\n    Number of natural orbitals\noccuno: list[list[StrictFloat]]\n    Number of occupation\noccunso: list[list[StrictFiniteFloat]]\n    Number of occupation SO",
          "properties": {
            "nel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nel"
            },
            "nsomo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nsomo"
            },
            "ndomo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ndomo"
            },
            "nvmo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nvmo"
            },
            "nnatoorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nnatoorbs"
            },
            "occuno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occuno"
            },
            "occunso": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occunso"
            }
          },
          "title": "NaturalOrbitals",
          "type": "object"
        },
        "NucGradient": {
          "description": "This class contains information about the SCF nuclear gradients\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms in the calculation\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ngradnorm: StrictNonNegativeFiniteFloat\n    Total norm of all gradients\ngrad: list[list[StrictFiniteFloat]]\n    Gradient for each atom in each dimension",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "gradnorm": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Gradnorm"
            },
            "grad": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Grad"
            }
          },
          "title": "NucGradient",
          "type": "object"
        },
        "PalFlags": {
          "description": "This class contains the information about the PAL flags\n\nAttributes\n----------\ndiskflag: StrictPositiveInt\n    Number of Disk-Flag set",
          "properties": {
            "diskflag": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Diskflag"
            }
          },
          "title": "PalFlags",
          "type": "object"
        },
        "Polarizability": {
          "description": "This class contains information about the polarizability of the molecule\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type and relaxation of Density like Electron Density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicpolar: StrictBool\n    Should the dipole atom calculation be done\nrawcartesian: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Raw data of the cartesian product\ndiagonalizedtensor: list[StrictFiniteFloat]\n    Diagonalized tenors\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the polarization vector\nisotropicpolar: StrictFiniteFloat\n    Isotropic polarity",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "doatomicpolar": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicpolar"
            },
            "rawcartesian": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rawcartesian"
            },
            "diagonalizedtensor": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Diagonalizedtensor"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            },
            "isotropicpolar": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotropicpolar"
            }
          },
          "title": "Polarizability",
          "type": "object"
        },
        "PopulationAnalysis": {
          "description": "Has the Information about the different population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno : list[list[StrictPositiveInt]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\natomiccharges: list[list[StrictFiniteFloat]]\n    Charges of the atoms according to the population analysis",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            }
          },
          "title": "PopulationAnalysis",
          "type": "object"
        },
        "QuadrupoleMoment": {
          "description": "Has the Information about the quadrupole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type of density like electron density\nmult: StrictInt\n    Multiplicity of the element\nstate: StrictInt\n    Electronic state\nirrep: StrictInt\n    Irreducible representation\ndoatomicquad: StrictBool\n    Should the quadrupole atom calculation be done\nisotropicquadmoment: StrictFloat\n    Isotopic quadruple moment\nquadeleccontrib: list[list[StrictNegativeFloat]]\n    Contribution of the electrons on the quadrupole moment in all three dimension\nquadnuccontrib: list[list[StrictPositiveFloat]]\n    Contribution of the nucleus on the quadrupole moment in all three dimension\nquadtotal: list[list[StrictFiniteFloat]]\n    Total quadruple moment in all three dimension\nquaddiagonalized: list[list[StrictFinteFloat]]\n    Diagonalized quadruple matrix",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "doatomicquad": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicquad"
            },
            "isotropicquadmoment": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotropicquadmoment"
            },
            "quadeleccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadeleccontrib"
            },
            "quadnuccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadnuccontrib"
            },
            "quadtotal": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadtotal"
            },
            "quaddiagonalized": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quaddiagonalized"
            }
          },
          "title": "QuadrupoleMoment",
          "type": "object"
        },
        "RoCiEnergy": {
          "description": "This class contains infos about the restricted open shell CI energies\n\nAttributes\n----------\nmultiplicities: list[list[StrictPositiveFloat]]\n    list of the multiplicities of the states\nenergies: list[Lis[StrictFiniteFloat]]\n    Energies of the stats\nrefenergy: StrictFiniteFloat\n    Reference energy\ncorrenergy: StrictFiniteFloat\n    Correlation energy\ntotalenergy: StrictFiniteFloat\n    Total energy",
          "properties": {
            "multiplicities": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicities"
            },
            "energies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energies"
            },
            "refenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "title": "RoCiEnergy",
          "type": "object"
        },
        "ScfEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"SCF\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types",
          "properties": {
            "method": {
              "const": "SCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "ScfEnergy",
          "type": "object"
        },
        "SinglePointData": {
          "description": "Has the Information about single points in ORCA\n\nAttributes\n----------\nconverged: bool\n    Whether the singlepoint calculation has converged\nfinalenergy: StrictFiniteFloat\n    The energy printed as `FINAL SINGLE POINT ENERGY` in the\n    ORCA output",
          "properties": {
            "converged": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Converged"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            }
          },
          "title": "SinglePointData",
          "type": "object"
        },
        "SolvDetails": {
          "description": "This class contains information about the solvation Calculation\n\nAttributes\n---------\nsolvent: StrictStr\n    Name of the solvent\nepsilon: StrictPositiveFloat\n    Dielectric constant of the solvent\nrefrac: StrictPositiveFloat\n    Refraction index of the solvent\nrsolv: StrictPositiveFloat\n    Radiation of the solvent\nsurfacetype: StrictStr\n    Type of the solvation surface\nnpoints: StrictPositiveInt\n    Number of points\nsurfacearea: StrictPositiveFloat\n    Surface area\ncpcmdielenergy: StricFinitetFloat\n    Total solvation energy",
          "properties": {
            "solvent": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Solvent"
            },
            "epsilon": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Epsilon"
            },
            "refrac": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refrac"
            },
            "rsolv": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rsolv"
            },
            "surfacetype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Surfacetype"
            },
            "npoints": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Npoints"
            },
            "surfacearea": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Surfacearea"
            },
            "cpcmdielenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cpcmdielenergy"
            }
          },
          "title": "SolvDetails",
          "type": "object"
        },
        "Spectrum": {
          "description": "This class contains the information about calculated spectra like UVVis or ECD spectra\n\nAttributes\n----------\ndensity_name: StrictStr\n    Name of property with used theory\ntemperature: StrictNonNegativeFloat\n    Assumed temperature in the calculation\nmethod: StrictPositiveInt\n    Method used in this calculation\nrelcorrection: StrictPositiveInt\n    Type of relativistic treatment in quasi degenerate perturbation theory in this calculation\ndenstype: StrictNonNegativeInt\n    Used density type in this calculation\nderitype: StrictNonNegativeInt\n    Type of derived used in this calculation\ndenslevel: StrictNonNegativeInt\n    Source of density\nrepresentation: StrictStr\n    Used representation (passible Unknown, Length, Velocity)\npointgroup: StrictStr\n    Pointgroup of the molecule\nntrans: StrictNonNegativeInt\n    Number of transition states modeled in the calculation\ndohighermoments: StrictBool\n    Are higher moments supposed to be used\nstates: list[tuple[StrictNonNegativeInt, StrictNonNegativeInt, StrictPositiveInt, StrictNonNegativeInt]]\n    Contains the initial and final states\nmultiplicities: list[tuple[StrictPositiveFloat, StrictPositiveFloat]]\n    Contains the multiplicity of the initial and final state\nexcitationenergies: list[list[StrictFiniteFloat]]\n    Contains the excitation energies for all modeled transition",
          "properties": {
            "density_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Density Name"
            },
            "temperature": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Temperature"
            },
            "method": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "relcorrection": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Relcorrection"
            },
            "denstype": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Denstype"
            },
            "deritype": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Deritype"
            },
            "denslevel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Denslevel"
            },
            "representation": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Representation"
            },
            "pointgroup": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pointgroup"
            },
            "ntrans": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ntrans"
            },
            "dohighermoments": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dohighermoments"
            },
            "states": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "States"
            },
            "multiplicities": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "exclusiveMinimum": 0,
                        "type": "number"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicities"
            },
            "excitationenergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Excitationenergies"
            }
          },
          "title": "Spectrum",
          "type": "object"
        },
        "SpinSpinCoupling": {
          "description": "This class contains the information about the spin spin coupling\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult: StrictPositiveInt\n    Multiplicity\nirrep: StrictNonNegativeInt\n    Irreducible representation\nstate: StrictInt\n    Electronic state\nnumofnucpairs: StrictPositiveInt\n    Number of nuclei pairs to calculate\nnumofnucpairsdso: StrictPositiveInt\n    Number of nuclear pairs to calculate DSO\nnumofnucpairspso: StrictPositiveInt\n    Number of nuclear pairs to calculate PSO\nnumofnucpairsfc: StrictPositiveInt\n    Number of nuclear pairs to calculate FC\nnumofnucpairssd: StrictPositiveInt\n    Number of nuclear pairs to calculate SD\npairsinfo: list[tuple[StrictPositiveInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    Index1, atom number 1, index 2 and atom number 2 of atoms that builds a pair\npairsdistances: list[list[StrictPositiveFloat]]\n    Distance of each pair\npairstotalssciso: list[list[StrictPositiveFloat]]\n    Spi-Spin coupling constant of each pair",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "irrep": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "numofnucpairs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairs"
            },
            "numofnucpairsdso": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairsdso"
            },
            "numofnucpairspso": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairspso"
            },
            "numofnucpairsfc": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairsfc"
            },
            "numofnucpairssd": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairssd"
            },
            "pairsinfo": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairsinfo"
            },
            "pairsdistances": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairsdistances"
            },
            "pairstotalssciso": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairstotalssciso"
            }
          },
          "title": "SpinSpinCoupling",
          "type": "object"
        },
        "Tensor": {
          "description": "This class contains the A-Tensors of the epr calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : int\n    Electronic state\nirrep : int\n    Irreducible representation of the electronic state\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelem: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\npfac: list[StrictPositiveFloat]\n    Prefactor in MHz\naraw: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Raw tensors of each tensor\naeigenvalues: list[list[list[StrictFiniteFloat]]]\n    Eigenvalue of each tensor\naiso: list[StrictFiniteFloat]\n    Iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors of each tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elem": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elem"
            },
            "isotope": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotope"
            },
            "i": {
              "anyOf": [
                {
                  "items": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "I"
            },
            "pfac": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pfac"
            },
            "araw": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Araw"
            },
            "aeigenvalues": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aeigenvalues"
            },
            "aiso": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aiso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "Tensor",
          "type": "object"
        },
        "ThermochemistryEnergy": {
          "description": "This class contains information about the thermochemistry and energies calculated in the calculation\n\nAttributes\n----------\ntemperature: StrictNonNegativeFloat\n    The temperature simulated in the calculation\npressure: StrictNonNegativeFloat\n   The pressure simulated in the calculation\ntotalmass: StrictPositiveFloat\n   The total mass of the molecule(s)\nspindegeneracy: StrictNonNegativeInt\n    Degeneracy of the spin\nelenergy: StrictFiniteFloat\n    Electron energy\ntransenergy: StrictFiniteFloat\n    Energy of the transition\nrotenergy: StrictFiniteFloat\n    Energy of the rotation\nvibenergy: StrictFiniteFloat\n    Energy of the vibration\nfreqscalingfactor: StrictPositiveFloat\n    Scaling factor of the frequencies\nfreq: list[list[StrictFiniteFloat]]\n    list of all frequencies\nzpe: StrictPositiveFloat\n    Zero point energy\ninnerenergyu: StrictFiniteFloat\n    Inner Energy of the system\nenthalpyh: StrictFiniteFloat\n    Enthalpy of the system\nqel: StrictFiniteFloat\n    Gibbs electron energy\nqrot: StrictNonNegativeFloat\n    Gibbs energy for Rotations\nqvib: StrictNonNegativeFloat\n    Gibbs energy for vibration\nentropys: StrictFiniteFloat\n    Entropy of the system\nfreeenergyg: StrictFiniteFloat\n    Gibbs (free) energy of the system\nislinear: StrictBool\n    Is the molecular linear (true), else false",
          "properties": {
            "temperature": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Temperature"
            },
            "pressure": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pressure"
            },
            "totalmass": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalmass"
            },
            "spindegeneracy": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spindegeneracy"
            },
            "elenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elenergy"
            },
            "transenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Transenergy"
            },
            "rotenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rotenergy"
            },
            "vibenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vibenergy"
            },
            "numoffreqs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffreqs"
            },
            "freqscalingfactor": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freqscalingfactor"
            },
            "freq": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freq"
            },
            "zpe": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Zpe"
            },
            "innerenergyu": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Innerenergyu"
            },
            "enthalpyh": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enthalpyh"
            },
            "qel": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qel"
            },
            "qrot": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qrot"
            },
            "qvib": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qvib"
            },
            "entropys": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Entropys"
            },
            "freeenergyg": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freeenergyg"
            },
            "islinear": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Islinear"
            }
          },
          "title": "ThermochemistryEnergy",
          "type": "object"
        },
        "VdwCorrection": {
          "description": "This class contains the VDW-correction for DFT-Calculation\n\nAttributes\n----------\nvdw: StrictFiniteFloat\n    Used correction for the VDW effect\nvdw_atomic: list[list[StrictFiniteFloat]]\n    atomic decomposition of London dispersion energy (ADLD)",
          "properties": {
            "vdw": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vdw"
            },
            "vdw_atomic": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vdw Atomic"
            }
          },
          "title": "VdwCorrection",
          "type": "object"
        }
      },
      "description": "Has all the information calculated in the ORCA job\n\nAttributes\n----------\ncalculation_info: CalcInfo\n    contains general information about the calculation\ncalculation_status: CalculationStatus\n    contains information about the Status of the calculation\ncalculation_timings : CalculationTiming\n    contains timings of the calculation\npal_flags: PalFlags default = None\n    Contains information about the parallel Jobs used in the calculation",
      "properties": {
        "calculation_info": {
          "anyOf": [
            {
              "$ref": "#/$defs/CalcInfo"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "calculation_status": {
          "anyOf": [
            {
              "$ref": "#/$defs/CalculationStatus"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "calculation_timings": {
          "anyOf": [
            {
              "$ref": "#/$defs/CalculationTiming"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "pal_flags": {
          "anyOf": [
            {
              "$ref": "#/$defs/PalFlags"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "geometries": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Geometries"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Geometries"
        }
      },
      "title": "PropertyResults",
      "type": "object"
    },
    "RegexFlag": {
      "title": "RegexFlag",
      "description": "An enumeration.",
      "type": "string",
      "enum": [
        256,
        2,
        4,
        32,
        8,
        16,
        64,
        128
      ]
    },
    "GetItem": {
      "description": "This class contains the get_item function for nearly all other classes",
      "properties": {},
      "title": "GetItem",
      "type": "object"
    },
    "Cite": {
      "$defs": {
        "Paper": {
          "description": "This class contains the information about the minimum literature that needs to bee cited\n\nAttributes\n----------\nauthor: list[StrictStr]\n    Name of the Authors\ntitle: StrictStr\n    Title of the paper\njournal: StrictStr\n    Journal that published the paper\nyear: StrictPositiveInt\n    Year of the publication\nvolume: StrictPositiveInt | None default = None\n    Volume of the Journal\nnumber: StrictPositiveInt | None default = None\n    number of the paper\npages: StrictStr\n    Number of pages\ndoi: StrictStr\n    Doi of the paper\ntype: StrictStr\n    Type of the literature",
          "properties": {
            "author": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Author"
            },
            "title": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Title"
            },
            "journal": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Journal"
            },
            "year": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Year"
            },
            "volume": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Volume"
            },
            "number": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Number"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pages"
            },
            "doi": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doi"
            },
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Type"
            }
          },
          "title": "Paper",
          "type": "object"
        }
      },
      "description": "This class contains the keys for the papers that are necessary to cite\n\nAttributes\n----------\nORCA2022: Paper | None, default None\n    Key for the ORCA 2022 paper\nSHARK: Paper | None, default None\n    Key for the SHARK paper",
      "properties": {
        "ORCA2022": {
          "anyOf": [
            {
              "$ref": "#/$defs/Paper"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "SHARK": {
          "anyOf": [
            {
              "$ref": "#/$defs/Paper"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "Cite",
      "type": "object"
    },
    "Molecule": {
      "$defs": {
        "Atoms": {
          "description": "Contains information about the Atoms in the calculation\n\nAttributes\n----------\nbasis: list[Base]\n    Contains the information about the basis\nbasisauxc: list[Base] | None default None\n    Contains the information about the basis aux c\nbasisauxj: list[Base] | None default None\n    Contains the information about the basis auxj\nbasisauxjk: list[Base] | None default None\n    Contains the information about the basis auxjk\ncoords: list[StrictFiniteFloat]\n    Coordinates of the atom\nelementlabel: StrictStr\n    Label of the element according to the PSE\nelementnumber: StrictNonNegativeInt\n    Number of the element according to the PSE\nidx StrictNonNegativeInt\n    Index of the atom\nloewdincharge: StrictFiniteFloat\n    loewdincharge at the atom\nmullicancharge: StrictFiniteFloat\n    mullikencharge at the atom\nnuclearcharge: StrictFiniteFloat\n    nuclearcharge at the atom",
          "properties": {
            "basis": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basis"
            },
            "basisauxc": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxc"
            },
            "basisauxj": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxj"
            },
            "basisauxjk": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/Base"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Basisauxjk"
            },
            "coords": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coords"
            },
            "elementlabel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elementlabel"
            },
            "elementnumber": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elementnumber"
            },
            "idx": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Idx"
            },
            "loewdincharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Loewdincharge"
            },
            "mullikencharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mullikencharge"
            },
            "nuclearcharge": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuclearcharge"
            }
          },
          "title": "Atoms",
          "type": "object"
        },
        "Base": {
          "description": "Contains the information about the base of the atoms\n\nAttributes\n----------\ncoefficients: list[StrictFloat]\n    Coefficients of the basis functions\nexponents: list[StrictFloat]\n    Exponents of the Basis functions\nshell: StrictStr\n    Shell of the Basis set",
          "properties": {
            "coefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coefficients"
            },
            "exponents": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exponents"
            },
            "shell": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shell"
            }
          },
          "title": "Base",
          "type": "object"
        },
        "MO": {
          "description": "This class contains information about\n\nAttributes\n----------\nmocoefficients: list[StrictFloat]\n    Coefficient of the molecular orbitals\noccupancy: StrictNonNegativeFloat\n    Occupancy of the molecular orbital\norbitalenergy: StrictFloat\n    Energy of the molecular orbital\norbitalsymlabel: StrictStr\n    Symmetry label of the molecular orbital\norbitalsymmetry: StrictInt\n    Symmetry of the molecular orbital",
          "properties": {
            "mocoefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mocoefficients"
            },
            "occupancy": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occupancy"
            },
            "orbitalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalenergy"
            },
            "orbitalsymlabel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymlabel"
            },
            "orbitalsymmetry": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymmetry"
            }
          },
          "title": "MO",
          "type": "object"
        },
        "MolecularOrbitals": {
          "description": "This class contains Information about the molecular orbital\n\nAttributes\n----------\nenergyunit: StrictStr\n    Unit of the energy\nmos: MO\n    Information about the molecular Orbitals\norbitallabels: list[StrictStr]\n    Orbital label of each orbital",
          "properties": {
            "energyunit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energyunit"
            },
            "mos": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/$defs/MO"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mos"
            },
            "orbitallabels": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitallabels"
            }
          },
          "title": "MolecularOrbitals",
          "type": "object"
        },
        "TdDft": {
          "description": "This class contains the information about the TD-DFT\n\nAttributes\n----------\niroot: StrictInt\n    The root to be optimized\norbwin: list[StrictPositiveInt]\n    Orbital Window\nx: StrictNonNegativeFloat\n    AO basis amplitudes for cis/tda-td-dft\nxy: StrictNonNegativeFloat\n    AO basis amplitudes for rpa/td-dft",
          "properties": {
            "iroot": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Iroot"
            },
            "orbwin": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbwin"
            },
            "x": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "X"
            },
            "x+y": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "X+Y"
            }
          },
          "title": "TdDft",
          "type": "object"
        }
      },
      "description": "This class contains the information about the Molecule\n\nAttributes\n----------\natoms: list[Atoms]\n    Contains information about the Atoms\nbasename: StrictStr\n    The basename of the calculation\nmolecularorbital: MolecularOrbital\n    Contains information about the molecular orbitals\nmultiplicity: StrictInt\n    multiplicity of the molecule\ncharge: StrictInt\n    charge of the molecule\nhftyp: StrictStr\n    Used shell-type (e.g., UHF/RHF) in the calculation\norigin: tuple[StrictFloat, StrictFloat, StrictFloat]\n    Origin of the molecule\ns_matrix: list[list[StrictFloat]]\n    Overlap matrix\nh_matrix: list[list[StrictFloat]]\n    Hcore matrix (1-el integrals)\nf_matrix: f_matrix: list[list[list[StrictFloat]]]\n    Fock matrix/matrices\nj_matrix: list[list[list[StrictFloat]]]\n    Coulomb integrals (2-el integrals)\nk_matrix: list[list[list[StrictFloat]]]\n    Exchange integrals (2-el integrals)\npointgroup: StrictStr\n    Pointgroup of the molecule\ntd_dft: TdDft | None default = None\n    Contains information about td-dft calculation",
      "properties": {
        "atoms": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Atoms"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atoms"
        },
        "basename": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Basename"
        },
        "molecularorbitals": {
          "anyOf": [
            {
              "$ref": "#/$defs/MolecularOrbitals"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "coordinateunits": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coordinateunits"
        },
        "multiplicity": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Multiplicity"
        },
        "charge": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Charge"
        },
        "hftyp": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hftyp"
        },
        "origin": {
          "maxItems": 3,
          "minItems": 3,
          "prefixItems": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "title": "Origin",
          "type": "array"
        },
        "s-matrix": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "S-Matrix"
        },
        "h-matrix": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "H-Matrix"
        },
        "f-matrix": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "F-Matrix"
        },
        "j-matrix": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "J-Matrix"
        },
        "k-matrix": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "K-Matrix"
        },
        "pointgroup": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pointgroup"
        },
        "td-dft": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/TdDft"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Td-Dft"
        }
      },
      "required": [
        "origin"
      ],
      "title": "Molecule",
      "type": "object"
    },
    "OrcaHeader": {
      "description": "This class contains the information about the Orca Header\n\nAttributes\n----------\ndate: StrictStr\n    Time and Date of the calculation\ngit: StrictStr\n    Git version\nversion: StrictStr\n    Orca-version",
      "properties": {
        "date": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Date"
        },
        "git": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Git"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Version"
        }
      },
      "title": "OrcaHeader",
      "type": "object"
    },
    "Atoms": {
      "$defs": {
        "Base": {
          "description": "Contains the information about the base of the atoms\n\nAttributes\n----------\ncoefficients: list[StrictFloat]\n    Coefficients of the basis functions\nexponents: list[StrictFloat]\n    Exponents of the Basis functions\nshell: StrictStr\n    Shell of the Basis set",
          "properties": {
            "coefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Coefficients"
            },
            "exponents": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exponents"
            },
            "shell": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shell"
            }
          },
          "title": "Base",
          "type": "object"
        }
      },
      "description": "Contains information about the Atoms in the calculation\n\nAttributes\n----------\nbasis: list[Base]\n    Contains the information about the basis\nbasisauxc: list[Base] | None default None\n    Contains the information about the basis aux c\nbasisauxj: list[Base] | None default None\n    Contains the information about the basis auxj\nbasisauxjk: list[Base] | None default None\n    Contains the information about the basis auxjk\ncoords: list[StrictFiniteFloat]\n    Coordinates of the atom\nelementlabel: StrictStr\n    Label of the element according to the PSE\nelementnumber: StrictNonNegativeInt\n    Number of the element according to the PSE\nidx StrictNonNegativeInt\n    Index of the atom\nloewdincharge: StrictFiniteFloat\n    loewdincharge at the atom\nmullicancharge: StrictFiniteFloat\n    mullikencharge at the atom\nnuclearcharge: StrictFiniteFloat\n    nuclearcharge at the atom",
      "properties": {
        "basis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Base"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Basis"
        },
        "basisauxc": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Base"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Basisauxc"
        },
        "basisauxj": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Base"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Basisauxj"
        },
        "basisauxjk": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Base"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Basisauxjk"
        },
        "coords": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coords"
        },
        "elementlabel": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elementlabel"
        },
        "elementnumber": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elementnumber"
        },
        "idx": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Idx"
        },
        "loewdincharge": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loewdincharge"
        },
        "mullikencharge": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mullikencharge"
        },
        "nuclearcharge": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nuclearcharge"
        }
      },
      "title": "Atoms",
      "type": "object"
    },
    "Base": {
      "description": "Contains the information about the base of the atoms\n\nAttributes\n----------\ncoefficients: list[StrictFloat]\n    Coefficients of the basis functions\nexponents: list[StrictFloat]\n    Exponents of the Basis functions\nshell: StrictStr\n    Shell of the Basis set",
      "properties": {
        "coefficients": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Coefficients"
        },
        "exponents": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Exponents"
        },
        "shell": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shell"
        }
      },
      "title": "Base",
      "type": "object"
    },
    "Paper": {
      "description": "This class contains the information about the minimum literature that needs to bee cited\n\nAttributes\n----------\nauthor: list[StrictStr]\n    Name of the Authors\ntitle: StrictStr\n    Title of the paper\njournal: StrictStr\n    Journal that published the paper\nyear: StrictPositiveInt\n    Year of the publication\nvolume: StrictPositiveInt | None default = None\n    Volume of the Journal\nnumber: StrictPositiveInt | None default = None\n    number of the paper\npages: StrictStr\n    Number of pages\ndoi: StrictStr\n    Doi of the paper\ntype: StrictStr\n    Type of the literature",
      "properties": {
        "author": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Author"
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Title"
        },
        "journal": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Journal"
        },
        "year": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Year"
        },
        "volume": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Volume"
        },
        "number": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Number"
        },
        "pages": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pages"
        },
        "doi": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doi"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Type"
        }
      },
      "title": "Paper",
      "type": "object"
    },
    "MolecularOrbitals": {
      "$defs": {
        "MO": {
          "description": "This class contains information about\n\nAttributes\n----------\nmocoefficients: list[StrictFloat]\n    Coefficient of the molecular orbitals\noccupancy: StrictNonNegativeFloat\n    Occupancy of the molecular orbital\norbitalenergy: StrictFloat\n    Energy of the molecular orbital\norbitalsymlabel: StrictStr\n    Symmetry label of the molecular orbital\norbitalsymmetry: StrictInt\n    Symmetry of the molecular orbital",
          "properties": {
            "mocoefficients": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mocoefficients"
            },
            "occupancy": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occupancy"
            },
            "orbitalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalenergy"
            },
            "orbitalsymlabel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymlabel"
            },
            "orbitalsymmetry": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orbitalsymmetry"
            }
          },
          "title": "MO",
          "type": "object"
        }
      },
      "description": "This class contains Information about the molecular orbital\n\nAttributes\n----------\nenergyunit: StrictStr\n    Unit of the energy\nmos: MO\n    Information about the molecular Orbitals\norbitallabels: list[StrictStr]\n    Orbital label of each orbital",
      "properties": {
        "energyunit": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Energyunit"
        },
        "mos": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/MO"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mos"
        },
        "orbitallabels": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbitallabels"
        }
      },
      "title": "MolecularOrbitals",
      "type": "object"
    },
    "TdDft": {
      "description": "This class contains the information about the TD-DFT\n\nAttributes\n----------\niroot: StrictInt\n    The root to be optimized\norbwin: list[StrictPositiveInt]\n    Orbital Window\nx: StrictNonNegativeFloat\n    AO basis amplitudes for cis/tda-td-dft\nxy: StrictNonNegativeFloat\n    AO basis amplitudes for rpa/td-dft",
      "properties": {
        "iroot": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Iroot"
        },
        "orbwin": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orbwin"
        },
        "x": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "X"
        },
        "x+y": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "X+Y"
        }
      },
      "title": "TdDft",
      "type": "object"
    },
    "AutoCiEnergy": {
      "description": "This class contains information about the Auto CI Energy\n\nAttributes\n-----------\nmethod: Literal[\"AUTOCI\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types.\nnumofel: StrictNonNegativeInt\n    Number of electrons\nnumofcorrel: StrictNonNegativeInt\n    Number of corr-electrons\nnumofalphacorrel: StrictNonNegativeInt\n    Number of corr-electrons with an alpha spin\nnumofbetacorell: StrictNonNegativeInt\n    Number of corr-electrons with a beta spin\nrefenergy: StrictFiniteFloat\n    Energy reference\ncorrenergy: StrictFiniteFloat\n    Total energy contribution of the electron-correlation",
      "properties": {
        "method": {
          "const": "AUTOCI",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofel"
        },
        "numofcorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcorrel"
        },
        "numofalphacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofalphacorrel"
        },
        "numofbetacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofbetacorrel"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "AutoCiEnergy",
      "type": "object"
    },
    "BrokenSym": {
      "description": "This class contains the information about the broken symmetry calculation\n\nAttributes\n----------\nenhighspin: StrictFiniteFloat\n    Energy of the high spin case\nenbrokensym: StrictFiniteFloat\n    Energy of the broken symmetry case\nshighspin: StrictPositiveFloat\n    Spin of the high spin case\ns2highspin: StrictPositiveFloat\n    s² of the high spin case\ns2brokensym: StrictPositiveFloat\n    s² of the broken symmetry case",
      "properties": {
        "enhighspin": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enhighspin"
        },
        "enbrokensym": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enbrokensym"
        },
        "shighspin": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Shighspin"
        },
        "s2highspin": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "S2Highspin"
        },
        "s2brokensym": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "S2Brokensym"
        }
      },
      "title": "BrokenSym",
      "type": "object"
    },
    "CalcInfo": {
      "description": "Contains the information about the Job done by ORCA\n\nAttributes\n----------\ncharge: StrictInt\n    Charge of the molecule\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nnumofatoms: StrictPositiveInt\n    Numbers of atoms in the molecule\nnumofelectrons: StrictNonNegativeInt\n    Number of electrons in the molecule\nnumoffcelectrons: StrictNonNegativeInt\n    Number of fc electrons\nnumofcorrelectrons: StrictNonNegativeInt\n    Number of corr electrons\nnumofbasisfuncts: PositiveInt\n    Number of basis function\nnumofauxcbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary C basis function\nnumofauxjbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary J basis function\nnumofauxjkbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary JK basis function\nnumofcabsbasisfuncts: StrictNonNegativeInt\n    Number of CABs basis function",
      "properties": {
        "charge": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Charge"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "numofatoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofatoms"
        },
        "numofelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofelectrons"
        },
        "numoffcelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffcelectrons"
        },
        "numofcorrelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcorrelectrons"
        },
        "numofbasisfuncts": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofbasisfuncts"
        },
        "numofauxcbasisfuncts": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofauxcbasisfuncts"
        },
        "numofauxjbasisfuncts": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofauxjbasisfuncts"
        },
        "numofauxjkbasisfuncts": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofauxjkbasisfuncts"
        },
        "numofcabsbasisfuncts": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcabsbasisfuncts"
        }
      },
      "title": "CalcInfo",
      "type": "object"
    },
    "CalculationStatus": {
      "description": "Contains information about the calculation Status\n\nAttributes\n----------\nprogname: StrictStr\n    Name of the program\nstatus: StrictStr\n    gives the status of the Calculation, if it terminated normally or if it get stuck\nversion: StrictStr\n    gives the status of the Calculation, if it terminated normally or if it get stuck",
      "properties": {
        "progname": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Progname"
        },
        "status": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Status"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Version"
        }
      },
      "title": "CalculationStatus",
      "type": "object"
    },
    "CalculationTiming": {
      "description": "Has the Information about the calculation Timing\n\nAttributes\n----------\ngstep: StrictNonNegativeFloat\n    Time of geometry steps\ngtoint: StrictNonNegativeFloat\n    Time of integral generation\nprop: StrictNonNegativeFloat\n    Time of property generation\nscf: StrictNonNegativeFloat\n    Time of solving the SCF\nscfgrad: StrictNonNegativeFloat\n    Time of gradient calculation\nsum: StrictNonNegativeFloat\n    Total time of the calculation",
      "properties": {
        "gstep": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gstep"
        },
        "gtoint": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gtoint"
        },
        "prop": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Prop"
        },
        "scf": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scf"
        },
        "scfgrad": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scfgrad"
        },
        "sum": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sum"
        }
      },
      "title": "CalculationTiming",
      "type": "object"
    },
    "CasEnergy": {
      "description": "This class contains information about the CASSCF energy",
      "properties": {
        "method": {
          "const": "CASSCF",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofelectrons"
        },
        "numoffcelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffcelectrons"
        },
        "numofactiveel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveel"
        },
        "numofactiveorbs": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveorbs"
        },
        "numofmultiplicities": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofmultiplicities"
        },
        "totalnumofroots": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalnumofroots"
        },
        "finalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalenergy"
        },
        "casscfenergies": {
          "anyOf": [
            {
              "items": {
                "maxItems": 5,
                "minItems": 5,
                "prefixItems": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Casscfenergies"
        }
      },
      "required": [
        "method"
      ],
      "title": "CasEnergy",
      "type": "object"
    },
    "CasEnergyBase": {
      "description": "Base class for information about CAS energies\n\nAttributes\n----------\nnumofelectrons: StrictNonNegativeInt\n    Number of electrons\nnumoffcelectrons: StrictNonNegativeInt\n    Number of FC electrons\nnumofactiveel: StrictNonNegativeInt\n    Number of active electrons\nnumofactiveorbs: StrictNonNegativeInt\n    number oof active orbitals\nnumofmultiplicities: StrictPositiveInt\n    Number of multiplicities\ntotalnumofroots: StrictNonNegativeInt\n    Total number of roots\nfinalenergy: StrictFiniteFloat\n    Final energy\nenergies: list[list[StrictFiniteFloat]]\n    list of all CasSCF energies\nirreps: list[list[StrictFiniteFloat]]\n    list of all irreducible representations of CASSCF states\nmultiplicities: list[list[StrictFiniteFloat]]\n    list of all multiplicities of CASSCF states\nnumofroots: list[list[StrictFiniteFloat]]\n    list of number of roots for all CASSCF states",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofelectrons"
        },
        "numoffcelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffcelectrons"
        },
        "numofactiveel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveel"
        },
        "numofactiveorbs": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveorbs"
        },
        "numofmultiplicities": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofmultiplicities"
        },
        "totalnumofroots": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalnumofroots"
        },
        "finalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalenergy"
        },
        "casscfenergies": {
          "anyOf": [
            {
              "items": {
                "maxItems": 5,
                "minItems": 5,
                "prefixItems": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Casscfenergies"
        }
      },
      "title": "CasEnergyBase",
      "type": "object"
    },
    "Caspt2Energy": {
      "description": "This class contains information about NEVPT2/CASPT2 energies",
      "properties": {
        "method": {
          "const": "CASSCF IC-PT2: NEVPT2/CASPT2",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofelectrons"
        },
        "numoffcelectrons": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffcelectrons"
        },
        "numofactiveel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveel"
        },
        "numofactiveorbs": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofactiveorbs"
        },
        "numofmultiplicities": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofmultiplicities"
        },
        "totalnumofroots": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalnumofroots"
        },
        "finalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalenergy"
        },
        "casscfenergies": {
          "anyOf": [
            {
              "items": {
                "maxItems": 5,
                "minItems": 5,
                "prefixItems": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Casscfenergies"
        }
      },
      "required": [
        "method"
      ],
      "title": "Caspt2Energy",
      "type": "object"
    },
    "ChemicalShift": {
      "description": "This class contains the information about the chemical shift for NMR calculations\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    Index of the nuclei\nelems: list[StrictPositiveInt]\n    Number of the place of the Element in the periodic table\nstot: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Total tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors\nstoteigen: list[list[list[StrictFiniteFloat]]]\n    Eigenvalues",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "numofnucs": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucs"
        },
        "nuc": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nuc"
        },
        "elems": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elems"
        },
        "stot": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stot"
        },
        "orientation": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orientation"
        },
        "stoteigen": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Stoteigen"
        }
      },
      "title": "ChemicalShift",
      "type": "object"
    },
    "CiPsi": {
      "description": "This class contains the information about the CI PSI calculation\n\nAttributes\n----------\nmultiplicity: StrictPositiveInt\n    Multiplicity of the system\nfinalenergy: StrictFiniteFloat\n    Final calculated energies\nnumofroots: StrictNonNegativeInt\n    Number of roots\nenergies: list[list[StrictFiniteFloat]]\n    list of calculated energies",
      "properties": {
        "multiplicity": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Multiplicity"
        },
        "finalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalenergy"
        },
        "numofroots": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofroots"
        },
        "energies": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Energies"
        }
      },
      "title": "CiPsi",
      "type": "object"
    },
    "CisEnergy": {
      "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"TDA/CIS\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types\nblock: list[list[StrictNonNegativeInt]]\nnblocks: StrictNonNegativeInt\nnroots: list[list[StrictNonNegativeInt]]\nntotalroots: StrictNonNegativeInt\nrelcorr: str\nroot: list[list[StrictNonNegativeInt]]\ndcorr: float\n    (D) correction algorithm\ne0: float\n    Energy of the ground state\nmode: str\nmultp1: bool\n    if the higher multiplicity was also done",
      "properties": {
        "method": {
          "const": "TDA/CIS",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "block": {
          "items": {
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "type": "array"
          },
          "title": "Block",
          "type": "array"
        },
        "nblocks": {
          "minimum": 0,
          "title": "Nblocks",
          "type": "integer"
        },
        "nroots": {
          "items": {
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "type": "array"
          },
          "title": "Nroots",
          "type": "array"
        },
        "ntotalroots": {
          "minimum": 0,
          "title": "Ntotalroots",
          "type": "integer"
        },
        "relcorr": {
          "title": "Relcorr",
          "type": "string"
        },
        "root": {
          "items": {
            "items": {
              "minimum": 0,
              "type": "integer"
            },
            "type": "array"
          },
          "title": "Root",
          "type": "array"
        },
        "dcorr": {
          "title": "Dcorr",
          "type": "number"
        },
        "e0": {
          "title": "E0",
          "type": "number"
        },
        "mode": {
          "title": "Mode",
          "type": "string"
        },
        "multp1": {
          "title": "Multp1",
          "type": "boolean"
        }
      },
      "required": [
        "method",
        "block",
        "nblocks",
        "nroots",
        "ntotalroots",
        "relcorr",
        "root",
        "dcorr",
        "e0",
        "mode",
        "multp1"
      ],
      "title": "CisEnergy",
      "type": "object"
    },
    "Coordinates": {
      "description": "Contains the coordinates of the atoms of the molecule\n\nAttributes\n----------\ntype: StrictStr\n    The type of the coordinates\nunits: StrictStr\n    The unit of the coordinates\ncartesians: list[tuple[StrictStr, StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Contains the name",
      "properties": {
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Type"
        },
        "units": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Units"
        },
        "cartesians": {
          "anyOf": [
            {
              "items": {
                "maxItems": 4,
                "minItems": 4,
                "prefixItems": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cartesians"
        }
      },
      "title": "Coordinates",
      "type": "object"
    },
    "DftEnergy": {
      "description": "This class contains the information about the DFT-energy.\n\nAttributes\n----------\nnalphael: StrictNonNegativeInt\n    Number of alpha electrons\nnbetael: StrictNonNegativeInt\n    Number of beta electrons\nntotalel: StrictNonNegativeInt\n    Total number of electrons\neexchange: StrictFiniteFloat\n    Calculated exchange energy\necorr: StrictFiniteFloat\n    Calculated correlation energy\necnl: StrictFiniteFloat\n    Calculated energy of the charge neutral level\nexc: StrictFiniteFloat\n    Calculated exchange-correlation energy\neembed: StrictFiniteFloat\n    Calculated energy from embedded DFT\nfinalen: StrictFiniteFloat\n    Total calculated energy",
      "properties": {
        "nalphael": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nalphael"
        },
        "nbetael": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nbetael"
        },
        "ntotalel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ntotalel"
        },
        "eexchange": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eexchange"
        },
        "ecorr": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ecorr"
        },
        "ecnl": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ecnl"
        },
        "exc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Exc"
        },
        "eembed": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Eembed"
        },
        "finalen": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalen"
        }
      },
      "title": "DftEnergy",
      "type": "object"
    },
    "Dipole": {
      "description": "Has the Information about the dipole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Typ and relaxation of the density\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicdipole: StrictBool\n    Should the dipole atom calculation be done\ndipoleeleccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the electrons on the dipole moment in all three dimension\ndipolenuccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the nucleus on the dipole moment in all three dimension\ndipolemagnitude: StrictNonNegativeFloat\n    Float absolute dipole moment independent of direction\ndipoletotal: list[list[StrictFiniteFloat]]\n    Total dipole moment in all three dimension",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "doatomicdipole": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doatomicdipole"
        },
        "dipoleeleccontrib": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipoleeleccontrib"
        },
        "dipolenuccontrib": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipolenuccontrib"
        },
        "dipolemagnitude": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipolemagnitude"
        },
        "dipoletotal": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipoletotal"
        }
      },
      "title": "Dipole",
      "type": "object"
    },
    "EfgTensor": {
      "description": "This class contains the Tensors of the EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelems: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\nqfac: list[StrictFiniteFloat]\n    Prefactor in MHz\nv: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Possible raw tensors of each tensor\nveigenvalues: list[list[StrictFiniteFloat]]\n    eigenvalue of each tensor\nviso: list[tuple[StrictFiniteFloat]]\n    iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    eigenvectors of each tensor",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "numofnucs": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucs"
        },
        "nuc": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nuc"
        },
        "elems": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elems"
        },
        "isotope": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Isotope"
        },
        "i": {
          "anyOf": [
            {
              "items": {
                "minimum": 0,
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "I"
        },
        "qfac": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qfac"
        },
        "v": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "V"
        },
        "veigenvalues": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Veigenvalues"
        },
        "viso": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Viso"
        },
        "orientation": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orientation"
        }
      },
      "title": "EfgTensor",
      "type": "object"
    },
    "EnergyExtrapolation": {
      "description": "This class contains information about the used Energy extrapolation\n\nAttributes\n----------\ndoep1: StrictBool\n    Do extrapolation with one method\ndoep2: StrictBool\n    Do extrapolation with two methods and the same basis set\ndoep3: StrictBool\n    Do extrapolation with two methods and three basis sets\ndogradients: StrictBool\n    Extrapolate energy gradient\nnumofenergies: StrictPositiveInt\n    How many energies are used\nscfenergies: list[list[StrictFiniteFloat]]\n    list of the used energies\nscfcbs: StrictFiniteFloat\n    SCF Energy extrapolated for complete basis set\ncorrenergies: list[list[StrictFiniteFloat]]\n    Used correlation energies\ncorrcbs: StrictFiniteFloat\n    Extrapolated correlation energy for correlation energy\nccsdtenergyx: StrictFiniteFloat default = None\n    CCSD(T] energy extrapolation, not used if only doep1 = true\ntotalcbs: StrictFiniteFloat\n    Total extrapolated energy",
      "properties": {
        "doep1": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doep1"
        },
        "doep2": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doep2"
        },
        "doep3": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doep3"
        },
        "dogradients": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dogradients"
        },
        "numofenergies": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofenergies"
        },
        "scfenergies": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scfenergies"
        },
        "scfcbs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scfcbs"
        },
        "correnergies": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergies"
        },
        "corrcbs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrcbs"
        },
        "ccsdtenergyx": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ccsdtenergyx"
        },
        "totalcbs": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalcbs"
        }
      },
      "title": "EnergyExtrapolation",
      "type": "object"
    },
    "MdcisdEnergies": {
      "properties": {
        "method": {
          "const": "MDCI(SD)",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofel"
        },
        "numofcorrel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcorrel"
        },
        "numofalphacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofalphacorrel"
        },
        "numofbetacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofbetacorrel"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        },
        "aacorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aacorren"
        },
        "bbcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bbcorren"
        },
        "abcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Abcorren"
        },
        "corrds": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrds"
        },
        "corrdt": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrdt"
        },
        "corrss": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrss"
        },
        "corrst": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrst"
        },
        "triplesenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triplesenergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "MdcisdEnergies",
      "type": "object"
    },
    "Mdcisd_t_Energies": {
      "properties": {
        "method": {
          "const": "MDCI(SD(T))",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofel"
        },
        "numofcorrel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcorrel"
        },
        "numofalphacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofalphacorrel"
        },
        "numofbetacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofbetacorrel"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        },
        "aacorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aacorren"
        },
        "bbcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bbcorren"
        },
        "abcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Abcorren"
        },
        "corrds": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrds"
        },
        "corrdt": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrdt"
        },
        "corrss": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrss"
        },
        "corrst": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrst"
        },
        "triplesenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triplesenergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "Mdcisd_t_Energies",
      "type": "object"
    },
    "Mp2Energy": {
      "description": "This class contains information about the MP2 energy",
      "properties": {
        "method": {
          "const": "MP2",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "Mp2Energy",
      "type": "object"
    },
    "Mp2OOEnergy": {
      "description": "This class contains information about the orbital-optimized MP2 energy",
      "properties": {
        "method": {
          "const": "MP2(OO)",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "Mp2OOEnergy",
      "type": "object"
    },
    "RootModel": {
      "description": "!!! abstract \"Usage Documentation\"\n    [`RootModel` and Custom Root Types](../concepts/models.md#rootmodel-and-custom-root-types)\n\nA Pydantic `BaseModel` for the root object of the model.\n\nAttributes:\n    root: The root object of the model.\n    __pydantic_root_model__: Whether the model is a RootModel.\n    __pydantic_private__: Private fields in the model.\n    __pydantic_extra__: Extra fields in the model.",
      "title": "RootModel"
    },
    "ScfEnergy": {
      "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"SCF\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types",
      "properties": {
        "method": {
          "const": "SCF",
          "title": "Method",
          "type": "string"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        }
      },
      "required": [
        "method"
      ],
      "title": "ScfEnergy",
      "type": "object"
    },
    "Geometry": {
      "$defs": {
        "Coordinates": {
          "description": "Contains the coordinates of the atoms of the molecule\n\nAttributes\n----------\ntype: StrictStr\n    The type of the coordinates\nunits: StrictStr\n    The unit of the coordinates\ncartesians: list[tuple[StrictStr, StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Contains the name",
          "properties": {
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Type"
            },
            "units": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Units"
            },
            "cartesians": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cartesians"
            }
          },
          "title": "Coordinates",
          "type": "object"
        }
      },
      "description": "Has the Information about the geometry of the Molecule used in the ORCA job\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms\nncorelessecp: StrictNonNegativeInt\n    Number of core-less ECPs\nnghostatoms: StrictNonNegativeInt\n    Number of ghost atoms\ncoordinates: Coordinates\n    Coordinates of all the atoms\nfragments: list[list[StrictPostivieInt]]\n    Contains Fragment IDs of atoms",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "ncorelessecp": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ncorelessecp"
        },
        "nghostatoms": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nghostatoms"
        },
        "coordinates": {
          "anyOf": [
            {
              "$ref": "#/$defs/Coordinates"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "fragments": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fragments"
        }
      },
      "title": "Geometry",
      "type": "object"
    },
    "Geometries": {
      "$defs": {
        "AutoCiEnergy": {
          "description": "This class contains information about the Auto CI Energy\n\nAttributes\n-----------\nmethod: Literal[\"AUTOCI\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types.\nnumofel: StrictNonNegativeInt\n    Number of electrons\nnumofcorrel: StrictNonNegativeInt\n    Number of corr-electrons\nnumofalphacorrel: StrictNonNegativeInt\n    Number of corr-electrons with an alpha spin\nnumofbetacorell: StrictNonNegativeInt\n    Number of corr-electrons with a beta spin\nrefenergy: StrictFiniteFloat\n    Energy reference\ncorrenergy: StrictFiniteFloat\n    Total energy contribution of the electron-correlation",
          "properties": {
            "method": {
              "const": "AUTOCI",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "AutoCiEnergy",
          "type": "object"
        },
        "BrokenSym": {
          "description": "This class contains the information about the broken symmetry calculation\n\nAttributes\n----------\nenhighspin: StrictFiniteFloat\n    Energy of the high spin case\nenbrokensym: StrictFiniteFloat\n    Energy of the broken symmetry case\nshighspin: StrictPositiveFloat\n    Spin of the high spin case\ns2highspin: StrictPositiveFloat\n    s² of the high spin case\ns2brokensym: StrictPositiveFloat\n    s² of the broken symmetry case",
          "properties": {
            "enhighspin": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enhighspin"
            },
            "enbrokensym": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enbrokensym"
            },
            "shighspin": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Shighspin"
            },
            "s2highspin": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "S2Highspin"
            },
            "s2brokensym": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "S2Brokensym"
            }
          },
          "title": "BrokenSym",
          "type": "object"
        },
        "CalcInfo": {
          "description": "Contains the information about the Job done by ORCA\n\nAttributes\n----------\ncharge: StrictInt\n    Charge of the molecule\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nnumofatoms: StrictPositiveInt\n    Numbers of atoms in the molecule\nnumofelectrons: StrictNonNegativeInt\n    Number of electrons in the molecule\nnumoffcelectrons: StrictNonNegativeInt\n    Number of fc electrons\nnumofcorrelectrons: StrictNonNegativeInt\n    Number of corr electrons\nnumofbasisfuncts: PositiveInt\n    Number of basis function\nnumofauxcbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary C basis function\nnumofauxjbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary J basis function\nnumofauxjkbasisfuncts: StrictNonNegativeInt\n    Number of auxiliary JK basis function\nnumofcabsbasisfuncts: StrictNonNegativeInt\n    Number of CABs basis function",
          "properties": {
            "charge": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Charge"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "numofatoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofatoms"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofcorrelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrelectrons"
            },
            "numofbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbasisfuncts"
            },
            "numofauxcbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxcbasisfuncts"
            },
            "numofauxjbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxjbasisfuncts"
            },
            "numofauxjkbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofauxjkbasisfuncts"
            },
            "numofcabsbasisfuncts": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcabsbasisfuncts"
            }
          },
          "title": "CalcInfo",
          "type": "object"
        },
        "CasEnergy": {
          "description": "This class contains information about the CASSCF energy",
          "properties": {
            "method": {
              "const": "CASSCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "CasEnergy",
          "type": "object"
        },
        "Caspt2Energy": {
          "description": "This class contains information about NEVPT2/CASPT2 energies",
          "properties": {
            "method": {
              "const": "CASSCF IC-PT2: NEVPT2/CASPT2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofelectrons"
            },
            "numoffcelectrons": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffcelectrons"
            },
            "numofactiveel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveel"
            },
            "numofactiveorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofactiveorbs"
            },
            "numofmultiplicities": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofmultiplicities"
            },
            "totalnumofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalnumofroots"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "casscfenergies": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 5,
                    "minItems": 5,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Casscfenergies"
            }
          },
          "required": [
            "method"
          ],
          "title": "Caspt2Energy",
          "type": "object"
        },
        "ChemicalShift": {
          "description": "This class contains the information about the chemical shift for NMR calculations\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    Index of the nuclei\nelems: list[StrictPositiveInt]\n    Number of the place of the Element in the periodic table\nstot: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Total tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors\nstoteigen: list[list[list[StrictFiniteFloat]]]\n    Eigenvalues",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elems": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elems"
            },
            "stot": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Stot"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            },
            "stoteigen": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Stoteigen"
            }
          },
          "title": "ChemicalShift",
          "type": "object"
        },
        "CiPsi": {
          "description": "This class contains the information about the CI PSI calculation\n\nAttributes\n----------\nmultiplicity: StrictPositiveInt\n    Multiplicity of the system\nfinalenergy: StrictFiniteFloat\n    Final calculated energies\nnumofroots: StrictNonNegativeInt\n    Number of roots\nenergies: list[list[StrictFiniteFloat]]\n    list of calculated energies",
          "properties": {
            "multiplicity": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicity"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            },
            "numofroots": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofroots"
            },
            "energies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energies"
            }
          },
          "title": "CiPsi",
          "type": "object"
        },
        "CisEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"TDA/CIS\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types\nblock: list[list[StrictNonNegativeInt]]\nnblocks: StrictNonNegativeInt\nnroots: list[list[StrictNonNegativeInt]]\nntotalroots: StrictNonNegativeInt\nrelcorr: str\nroot: list[list[StrictNonNegativeInt]]\ndcorr: float\n    (D) correction algorithm\ne0: float\n    Energy of the ground state\nmode: str\nmultp1: bool\n    if the higher multiplicity was also done",
          "properties": {
            "method": {
              "const": "TDA/CIS",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "block": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Block",
              "type": "array"
            },
            "nblocks": {
              "minimum": 0,
              "title": "Nblocks",
              "type": "integer"
            },
            "nroots": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Nroots",
              "type": "array"
            },
            "ntotalroots": {
              "minimum": 0,
              "title": "Ntotalroots",
              "type": "integer"
            },
            "relcorr": {
              "title": "Relcorr",
              "type": "string"
            },
            "root": {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "title": "Root",
              "type": "array"
            },
            "dcorr": {
              "title": "Dcorr",
              "type": "number"
            },
            "e0": {
              "title": "E0",
              "type": "number"
            },
            "mode": {
              "title": "Mode",
              "type": "string"
            },
            "multp1": {
              "title": "Multp1",
              "type": "boolean"
            }
          },
          "required": [
            "method",
            "block",
            "nblocks",
            "nroots",
            "ntotalroots",
            "relcorr",
            "root",
            "dcorr",
            "e0",
            "mode",
            "multp1"
          ],
          "title": "CisEnergy",
          "type": "object"
        },
        "Coordinates": {
          "description": "Contains the coordinates of the atoms of the molecule\n\nAttributes\n----------\ntype: StrictStr\n    The type of the coordinates\nunits: StrictStr\n    The unit of the coordinates\ncartesians: list[tuple[StrictStr, StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Contains the name",
          "properties": {
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Type"
            },
            "units": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Units"
            },
            "cartesians": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cartesians"
            }
          },
          "title": "Coordinates",
          "type": "object"
        },
        "DftEnergy": {
          "description": "This class contains the information about the DFT-energy.\n\nAttributes\n----------\nnalphael: StrictNonNegativeInt\n    Number of alpha electrons\nnbetael: StrictNonNegativeInt\n    Number of beta electrons\nntotalel: StrictNonNegativeInt\n    Total number of electrons\neexchange: StrictFiniteFloat\n    Calculated exchange energy\necorr: StrictFiniteFloat\n    Calculated correlation energy\necnl: StrictFiniteFloat\n    Calculated energy of the charge neutral level\nexc: StrictFiniteFloat\n    Calculated exchange-correlation energy\neembed: StrictFiniteFloat\n    Calculated energy from embedded DFT\nfinalen: StrictFiniteFloat\n    Total calculated energy",
          "properties": {
            "nalphael": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nalphael"
            },
            "nbetael": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nbetael"
            },
            "ntotalel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ntotalel"
            },
            "eexchange": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Eexchange"
            },
            "ecorr": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ecorr"
            },
            "ecnl": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ecnl"
            },
            "exc": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exc"
            },
            "eembed": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Eembed"
            },
            "finalen": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalen"
            }
          },
          "title": "DftEnergy",
          "type": "object"
        },
        "Dipole": {
          "description": "Has the Information about the dipole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Typ and relaxation of the density\nmult: StrictPositiveInt\n    Multiplicity of the molecule\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicdipole: StrictBool\n    Should the dipole atom calculation be done\ndipoleeleccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the electrons on the dipole moment in all three dimension\ndipolenuccontrib: list[list[StrictFiniteFloat]]\n    Contribution of the nucleus on the dipole moment in all three dimension\ndipolemagnitude: StrictNonNegativeFloat\n    Float absolute dipole moment independent of direction\ndipoletotal: list[list[StrictFiniteFloat]]\n    Total dipole moment in all three dimension",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "doatomicdipole": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicdipole"
            },
            "dipoleeleccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipoleeleccontrib"
            },
            "dipolenuccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipolenuccontrib"
            },
            "dipolemagnitude": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipolemagnitude"
            },
            "dipoletotal": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dipoletotal"
            }
          },
          "title": "Dipole",
          "type": "object"
        },
        "EfgTensor": {
          "description": "This class contains the Tensors of the EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelems: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\nqfac: list[StrictFiniteFloat]\n    Prefactor in MHz\nv: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Possible raw tensors of each tensor\nveigenvalues: list[list[StrictFiniteFloat]]\n    eigenvalue of each tensor\nviso: list[tuple[StrictFiniteFloat]]\n    iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    eigenvectors of each tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elems": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elems"
            },
            "isotope": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotope"
            },
            "i": {
              "anyOf": [
                {
                  "items": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "I"
            },
            "qfac": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qfac"
            },
            "v": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "V"
            },
            "veigenvalues": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Veigenvalues"
            },
            "viso": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Viso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "EfgTensor",
          "type": "object"
        },
        "Energy": {
          "description": "Base class for energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: StrictStr | None = None\n    String that identifies the method that was used for the energy calculation.\n    Is used for discriminating different energy types\nmult: list[list[StrictPositiveInt]] | None = None\n    List of electronic multiplicities\ntotalenergy: list[list[StrictFiniteFloat]]\n    The total calculated Energy",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "title": "Energy",
          "type": "object"
        },
        "EnergyExtrapolation": {
          "description": "This class contains information about the used Energy extrapolation\n\nAttributes\n----------\ndoep1: StrictBool\n    Do extrapolation with one method\ndoep2: StrictBool\n    Do extrapolation with two methods and the same basis set\ndoep3: StrictBool\n    Do extrapolation with two methods and three basis sets\ndogradients: StrictBool\n    Extrapolate energy gradient\nnumofenergies: StrictPositiveInt\n    How many energies are used\nscfenergies: list[list[StrictFiniteFloat]]\n    list of the used energies\nscfcbs: StrictFiniteFloat\n    SCF Energy extrapolated for complete basis set\ncorrenergies: list[list[StrictFiniteFloat]]\n    Used correlation energies\ncorrcbs: StrictFiniteFloat\n    Extrapolated correlation energy for correlation energy\nccsdtenergyx: StrictFiniteFloat default = None\n    CCSD(T] energy extrapolation, not used if only doep1 = true\ntotalcbs: StrictFiniteFloat\n    Total extrapolated energy",
          "properties": {
            "doep1": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep1"
            },
            "doep2": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep2"
            },
            "doep3": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doep3"
            },
            "dogradients": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dogradients"
            },
            "numofenergies": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofenergies"
            },
            "scfenergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scfenergies"
            },
            "scfcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Scfcbs"
            },
            "correnergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergies"
            },
            "corrcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrcbs"
            },
            "ccsdtenergyx": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ccsdtenergyx"
            },
            "totalcbs": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalcbs"
            }
          },
          "title": "EnergyExtrapolation",
          "type": "object"
        },
        "EnergyList": {
          "description": "RootModel for identifying different ORCA energy types based on their `method` string",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/ScfEnergy"
              },
              {
                "$ref": "#/$defs/MdcisdEnergies"
              },
              {
                "$ref": "#/$defs/Mdcisd_t_Energies"
              },
              {
                "$ref": "#/$defs/CasEnergy"
              },
              {
                "$ref": "#/$defs/Caspt2Energy"
              },
              {
                "$ref": "#/$defs/AutoCiEnergy"
              },
              {
                "$ref": "#/$defs/Mp2Energy"
              },
              {
                "$ref": "#/$defs/Mp2OOEnergy"
              },
              {
                "$ref": "#/$defs/CisEnergy"
              },
              {
                "$ref": "#/$defs/Energy"
              }
            ]
          },
          "title": "EnergyList",
          "type": "array"
        },
        "Geometry": {
          "description": "Has the Information about the geometry of the Molecule used in the ORCA job\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms\nncorelessecp: StrictNonNegativeInt\n    Number of core-less ECPs\nnghostatoms: StrictNonNegativeInt\n    Number of ghost atoms\ncoordinates: Coordinates\n    Coordinates of all the atoms\nfragments: list[list[StrictPostivieInt]]\n    Contains Fragment IDs of atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "ncorelessecp": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ncorelessecp"
            },
            "nghostatoms": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nghostatoms"
            },
            "coordinates": {
              "anyOf": [
                {
                  "$ref": "#/$defs/Coordinates"
                },
                {
                  "type": "null"
                }
              ],
              "default": null
            },
            "fragments": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Fragments"
            }
          },
          "title": "Geometry",
          "type": "object"
        },
        "Gtensor": {
          "description": "This class contains information about the G-Tensor in EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n   Used method for this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ng_matrix: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Matrix of the G-Tensor\ng_elec: StrictFiniteFloat\n    The free electron G-value contribution\ng_rmc: StrictFiniteFloat\n    Reduced mass correction\ng_tot: list[list[StrictFiniteFloat]]\n    Total G-tensor\ng_iso: StrictFiniteFloat\n    Isotropic part of the G-tensor\ng_dso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Diamagnetic contribution to the G-tensor\ng_pso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Paramagnetic contribution to the G-tensor\ndelta_g: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Delta G-Tensor w.r.t the free electron\ndelta_g_iso: StrictFiniteFloat\n    Error of the isotropic part of the G-tensor\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the G-tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "g_matrix": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Matrix"
            },
            "g_elec": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Elec"
            },
            "g_rmc": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Rmc"
            },
            "g_tot": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Tot"
            },
            "g_iso": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Iso"
            },
            "g_dso": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Dso"
            },
            "g_pso": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "G Pso"
            },
            "delta_g": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Delta G"
            },
            "delta_g_iso": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Delta G Iso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "Gtensor",
          "type": "object"
        },
        "Hessian": {
          "description": "Contains the information about the Hessian matrix and vibration Mods.\n\nAttributes\n----------\nhessian: list[list[list[StrictFloat]]]\n    Hessian-Matrix for the molecule\nmodes: list[list[list[StrictFloat]]]\n    Vibration-modes",
          "properties": {
            "hessian": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Hessian"
            },
            "modes": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Modes"
            }
          },
          "title": "Hessian",
          "type": "object"
        },
        "HirshfeldPopulationAnalysis": {
          "description": "Has the Information about the Hirshfeld population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictPositiveInt]]\n    Atom number according to the position in the periodic table\ndensa: StrictNonNegativeFiniteFloat\n    Density of alpha electrons\ndensb: StrictNonNegativeFiniteFloat\n    Density of beta electrons\natomiccharges: list[list[StrictFiniteFloat]]\n    Total charges of the atoms according to the Hirshfeld population analysis\nspin: list[list[StrictFiniteFloat]]\n    list of the spin densities, at the atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "densa": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densa"
            },
            "densb": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densb"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            },
            "spin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spin"
            }
          },
          "title": "HirshfeldPopulationAnalysis",
          "type": "object"
        },
        "Led": {
          "description": "This class contains information about the LED calculation\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt\n    Number of used fragments\nelectrostref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Electrostatics reference\nexchangeref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Exchange reference\ndispcontr: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Strong Pair Dispersion contribution\ndispweak: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Dispersion Weak pairs\nsumnondisstrong: StrictFiniteFloat\n    Sum of non dispersive correlation strong pairs\nsumnondisweak: StrictFiniteFloat\n    Sum of non dispersive correlation weak pairs",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "electrostref": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Electrostref"
            },
            "exchangeref": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Exchangeref"
            },
            "dispcontr": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dispcontr"
            },
            "dispweak": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dispweak"
            },
            "sumnondisstrong": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sumnondisstrong"
            },
            "sumnondisweak": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sumnondisweak"
            },
            "corrint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrint"
            },
            "refint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refint"
            },
            "totint": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totint"
            }
          },
          "title": "Led",
          "type": "object"
        },
        "MayerPopulationAnalysis": {
          "description": "Has the Information about the Mayer population analyses\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictFiniteFloat]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\nbondthresh: StrictPositiveFiniteFloat\n    Threshold for the bound order to be printed\nnbondordersprint: StrictPositiveInt\n    Number of bounds\nbondorders: list[list[StrictFiniteFloat]]\n    Bound order of each Bound\ncomponents: list[tuple[StrictNonNegativeInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    The indices and atomic numbers of the bonding atoms\nna : list[list[StrictFiniteFloat]]\n    Mulliken gross atomic population\nza: list[list[StrictFiniteFloat]]\n    Total nuclear charge\nqa: list[list[StrictFiniteFloat]]\n    Mulliken gross atomic charge\nva: list[list[StrictFiniteFloat]]\n    Mayer's total valence\nbva: list[list[StrictFiniteFloat]]\n    Mayer's bonded valence\nfa: list[list[StrictFiniteFloat]]\n    Mayer's free valence",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "bondthresh": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bondthresh"
            },
            "nbondordersprint": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nbondordersprint"
            },
            "bondorders": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bondorders"
            },
            "components": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Components"
            },
            "na": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Na"
            },
            "za": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Za"
            },
            "qa": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qa"
            },
            "va": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Va"
            },
            "bva": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bva"
            },
            "fa": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Fa"
            }
          },
          "title": "MayerPopulationAnalysis",
          "type": "object"
        },
        "MbisPopAnalysis": {
          "description": "This class contains the information about the MIBS population analysis\n\nAttributes\n----------\nnatoms: PositiveInt\n    Number of atoms\natno: list[list[PositiveInt]]\n    list with the Atom number according to the PSE\nthresh: PositiveFloat\n    Threshold for printing orbitals\nniter: PositiveInt\n    Number of iterations\nlargeprint: StrictBool\n    Has \"Largeprint\" been used\ndensa: PositiveFloat\n    Alpha densely\ndensb: PositiveFloat\n    Beta densely\natomiccharges: list[list[StrictFloat]]\n    list with atomic charges\nspin: list[list[StrictFloat]]\n    list of the spin density\nnpopval: list[list[NonNegativeFloat]]\n    Population value of each atoms\nsigmaval: list[list[StrictFloat]]\n    list of sigma value of the atoms",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "thresh": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Thresh"
            },
            "niter": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Niter"
            },
            "largeprint": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Largeprint"
            },
            "densa": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densa"
            },
            "densb": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Densb"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            },
            "spin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spin"
            },
            "npopval": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "minimum": 0,
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Npopval"
            },
            "sigmaval": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Sigmaval"
            }
          },
          "title": "MbisPopAnalysis",
          "type": "object"
        },
        "MdciAdex": {
          "description": "This class contains information about the atomic decomposition of\nexchange (ADEX).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adex scheme\nadexatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Loewdin populations\nadexfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Loewdin populations\nadexatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Mulliken populations\nadexfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Mulliken populations",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "adexatomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexatomic Loewdin"
            },
            "adexfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexfrag Loewdin"
            },
            "adexatomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexatomic Mulliken"
            },
            "adexfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adexfrag Mulliken"
            }
          },
          "title": "MdciAdex",
          "type": "object"
        },
        "MdciAdld": {
          "description": "This class contains information about the atomic decomposition of\nLondon dispersion (ADLD).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adld scheme\nadldcorratomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Loewdin populations\nadldcorrfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Loewdin populations\nadlddispatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Loewdin populations\nadlddispfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment dispersion contributions based on Loewdin populations\nadldcorratomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Mulliken populations\nadldcorrfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Mulliken populations\nadlddispatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations\nadlddispfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations",
          "properties": {
            "numoffragments": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffragments"
            },
            "adldcorratomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorratomic Loewdin"
            },
            "adldcorrfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorrfrag Loewdin"
            },
            "adlddispatomic_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispatomic Loewdin"
            },
            "adlddispfrag_loewdin": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispfrag Loewdin"
            },
            "adldcorratomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorratomic Mulliken"
            },
            "adldcorrfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adldcorrfrag Mulliken"
            },
            "adlddispatomic_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispatomic Mulliken"
            },
            "adlddispfrag_mulliken": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Adlddispfrag Mulliken"
            }
          },
          "title": "MdciAdld",
          "type": "object"
        },
        "MdcisdEnergies": {
          "properties": {
            "method": {
              "const": "MDCI(SD)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "MdcisdEnergies",
          "type": "object"
        },
        "Mdcisd_t_Energies": {
          "properties": {
            "method": {
              "const": "MDCI(SD(T))",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "numofel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofel"
            },
            "numofcorrel": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofcorrel"
            },
            "numofalphacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofalphacorrel"
            },
            "numofbetacorrel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofbetacorrel"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "aacorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aacorren"
            },
            "bbcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Bbcorren"
            },
            "abcorren": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Abcorren"
            },
            "corrds": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrds"
            },
            "corrdt": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrdt"
            },
            "corrss": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrss"
            },
            "corrst": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Corrst"
            },
            "triplesenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Triplesenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mdcisd_t_Energies",
          "type": "object"
        },
        "Mp2Energy": {
          "description": "This class contains information about the MP2 energy",
          "properties": {
            "method": {
              "const": "MP2",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2Energy",
          "type": "object"
        },
        "Mp2OOEnergy": {
          "description": "This class contains information about the orbital-optimized MP2 energy",
          "properties": {
            "method": {
              "const": "MP2(OO)",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            },
            "refenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "Mp2OOEnergy",
          "type": "object"
        },
        "NaturalOrbitals": {
          "description": "This class contains the information about the natural orbitals in a broken symmetry calculation\n\nAttributes\n----------\nnel: StrictNonNegativeInt\n    Number of electrons\nnsomo: StrictNonNegativeInt\n    Number of SOMO\nndomo: StrictNonNegativeInt\n    Number of DOMO\nnvmo: StrictNonNegativeInt\n    Number of Virtual MO\nnnatoorbs: StrictNonNegativeInt\n    Number of natural orbitals\noccuno: list[list[StrictFloat]]\n    Number of occupation\noccunso: list[list[StrictFiniteFloat]]\n    Number of occupation SO",
          "properties": {
            "nel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nel"
            },
            "nsomo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nsomo"
            },
            "ndomo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ndomo"
            },
            "nvmo": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nvmo"
            },
            "nnatoorbs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nnatoorbs"
            },
            "occuno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occuno"
            },
            "occunso": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Occunso"
            }
          },
          "title": "NaturalOrbitals",
          "type": "object"
        },
        "NucGradient": {
          "description": "This class contains information about the SCF nuclear gradients\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms in the calculation\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ngradnorm: StrictNonNegativeFiniteFloat\n    Total norm of all gradients\ngrad: list[list[StrictFiniteFloat]]\n    Gradient for each atom in each dimension",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "gradnorm": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Gradnorm"
            },
            "grad": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Grad"
            }
          },
          "title": "NucGradient",
          "type": "object"
        },
        "Polarizability": {
          "description": "This class contains information about the polarizability of the molecule\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type and relaxation of Density like Electron Density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicpolar: StrictBool\n    Should the dipole atom calculation be done\nrawcartesian: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Raw data of the cartesian product\ndiagonalizedtensor: list[StrictFiniteFloat]\n    Diagonalized tenors\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the polarization vector\nisotropicpolar: StrictFiniteFloat\n    Isotropic polarity",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "doatomicpolar": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicpolar"
            },
            "rawcartesian": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rawcartesian"
            },
            "diagonalizedtensor": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Diagonalizedtensor"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 3,
                    "minItems": 3,
                    "prefixItems": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            },
            "isotropicpolar": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotropicpolar"
            }
          },
          "title": "Polarizability",
          "type": "object"
        },
        "PopulationAnalysis": {
          "description": "Has the Information about the different population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno : list[list[StrictPositiveInt]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\natomiccharges: list[list[StrictFiniteFloat]]\n    Charges of the atoms according to the population analysis",
          "properties": {
            "natoms": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Natoms"
            },
            "atno": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atno"
            },
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "atomiccharges": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Atomiccharges"
            }
          },
          "title": "PopulationAnalysis",
          "type": "object"
        },
        "QuadrupoleMoment": {
          "description": "Has the Information about the quadrupole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type of density like electron density\nmult: StrictInt\n    Multiplicity of the element\nstate: StrictInt\n    Electronic state\nirrep: StrictInt\n    Irreducible representation\ndoatomicquad: StrictBool\n    Should the quadrupole atom calculation be done\nisotropicquadmoment: StrictFloat\n    Isotopic quadruple moment\nquadeleccontrib: list[list[StrictNegativeFloat]]\n    Contribution of the electrons on the quadrupole moment in all three dimension\nquadnuccontrib: list[list[StrictPositiveFloat]]\n    Contribution of the nucleus on the quadrupole moment in all three dimension\nquadtotal: list[list[StrictFiniteFloat]]\n    Total quadruple moment in all three dimension\nquaddiagonalized: list[list[StrictFinteFloat]]\n    Diagonalized quadruple matrix",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "doatomicquad": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Doatomicquad"
            },
            "isotropicquadmoment": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotropicquadmoment"
            },
            "quadeleccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadeleccontrib"
            },
            "quadnuccontrib": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadnuccontrib"
            },
            "quadtotal": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quadtotal"
            },
            "quaddiagonalized": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Quaddiagonalized"
            }
          },
          "title": "QuadrupoleMoment",
          "type": "object"
        },
        "RoCiEnergy": {
          "description": "This class contains infos about the restricted open shell CI energies\n\nAttributes\n----------\nmultiplicities: list[list[StrictPositiveFloat]]\n    list of the multiplicities of the states\nenergies: list[Lis[StrictFiniteFloat]]\n    Energies of the stats\nrefenergy: StrictFiniteFloat\n    Reference energy\ncorrenergy: StrictFiniteFloat\n    Correlation energy\ntotalenergy: StrictFiniteFloat\n    Total energy",
          "properties": {
            "multiplicities": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicities"
            },
            "energies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Energies"
            },
            "refenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refenergy"
            },
            "correnergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Correnergy"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "title": "RoCiEnergy",
          "type": "object"
        },
        "ScfEnergy": {
          "description": "Has the Information about energies that were calculated in the ORCA job\n\nAttributes\n----------\nmethod: Literal[\"SCF\"]\nString that identifies the method that was used for the energy calculation.\nIs used for identifying different energy types",
          "properties": {
            "method": {
              "const": "SCF",
              "title": "Method",
              "type": "string"
            },
            "mult": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "totalenergy": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalenergy"
            }
          },
          "required": [
            "method"
          ],
          "title": "ScfEnergy",
          "type": "object"
        },
        "SinglePointData": {
          "description": "Has the Information about single points in ORCA\n\nAttributes\n----------\nconverged: bool\n    Whether the singlepoint calculation has converged\nfinalenergy: StrictFiniteFloat\n    The energy printed as `FINAL SINGLE POINT ENERGY` in the\n    ORCA output",
          "properties": {
            "converged": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Converged"
            },
            "finalenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Finalenergy"
            }
          },
          "title": "SinglePointData",
          "type": "object"
        },
        "SolvDetails": {
          "description": "This class contains information about the solvation Calculation\n\nAttributes\n---------\nsolvent: StrictStr\n    Name of the solvent\nepsilon: StrictPositiveFloat\n    Dielectric constant of the solvent\nrefrac: StrictPositiveFloat\n    Refraction index of the solvent\nrsolv: StrictPositiveFloat\n    Radiation of the solvent\nsurfacetype: StrictStr\n    Type of the solvation surface\nnpoints: StrictPositiveInt\n    Number of points\nsurfacearea: StrictPositiveFloat\n    Surface area\ncpcmdielenergy: StricFinitetFloat\n    Total solvation energy",
          "properties": {
            "solvent": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Solvent"
            },
            "epsilon": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Epsilon"
            },
            "refrac": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Refrac"
            },
            "rsolv": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rsolv"
            },
            "surfacetype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Surfacetype"
            },
            "npoints": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Npoints"
            },
            "surfacearea": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Surfacearea"
            },
            "cpcmdielenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Cpcmdielenergy"
            }
          },
          "title": "SolvDetails",
          "type": "object"
        },
        "Spectrum": {
          "description": "This class contains the information about calculated spectra like UVVis or ECD spectra\n\nAttributes\n----------\ndensity_name: StrictStr\n    Name of property with used theory\ntemperature: StrictNonNegativeFloat\n    Assumed temperature in the calculation\nmethod: StrictPositiveInt\n    Method used in this calculation\nrelcorrection: StrictPositiveInt\n    Type of relativistic treatment in quasi degenerate perturbation theory in this calculation\ndenstype: StrictNonNegativeInt\n    Used density type in this calculation\nderitype: StrictNonNegativeInt\n    Type of derived used in this calculation\ndenslevel: StrictNonNegativeInt\n    Source of density\nrepresentation: StrictStr\n    Used representation (passible Unknown, Length, Velocity)\npointgroup: StrictStr\n    Pointgroup of the molecule\nntrans: StrictNonNegativeInt\n    Number of transition states modeled in the calculation\ndohighermoments: StrictBool\n    Are higher moments supposed to be used\nstates: list[tuple[StrictNonNegativeInt, StrictNonNegativeInt, StrictPositiveInt, StrictNonNegativeInt]]\n    Contains the initial and final states\nmultiplicities: list[tuple[StrictPositiveFloat, StrictPositiveFloat]]\n    Contains the multiplicity of the initial and final state\nexcitationenergies: list[list[StrictFiniteFloat]]\n    Contains the excitation energies for all modeled transition",
          "properties": {
            "density_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Density Name"
            },
            "temperature": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Temperature"
            },
            "method": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "relcorrection": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Relcorrection"
            },
            "denstype": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Denstype"
            },
            "deritype": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Deritype"
            },
            "denslevel": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Denslevel"
            },
            "representation": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Representation"
            },
            "pointgroup": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pointgroup"
            },
            "ntrans": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Ntrans"
            },
            "dohighermoments": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Dohighermoments"
            },
            "states": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "minimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "States"
            },
            "multiplicities": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "exclusiveMinimum": 0,
                        "type": "number"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "number"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Multiplicities"
            },
            "excitationenergies": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Excitationenergies"
            }
          },
          "title": "Spectrum",
          "type": "object"
        },
        "SpinSpinCoupling": {
          "description": "This class contains the information about the spin spin coupling\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult: StrictPositiveInt\n    Multiplicity\nirrep: StrictNonNegativeInt\n    Irreducible representation\nstate: StrictInt\n    Electronic state\nnumofnucpairs: StrictPositiveInt\n    Number of nuclei pairs to calculate\nnumofnucpairsdso: StrictPositiveInt\n    Number of nuclear pairs to calculate DSO\nnumofnucpairspso: StrictPositiveInt\n    Number of nuclear pairs to calculate PSO\nnumofnucpairsfc: StrictPositiveInt\n    Number of nuclear pairs to calculate FC\nnumofnucpairssd: StrictPositiveInt\n    Number of nuclear pairs to calculate SD\npairsinfo: list[tuple[StrictPositiveInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    Index1, atom number 1, index 2 and atom number 2 of atoms that builds a pair\npairsdistances: list[list[StrictPositiveFloat]]\n    Distance of each pair\npairstotalssciso: list[list[StrictPositiveFloat]]\n    Spi-Spin coupling constant of each pair",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "irrep": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "numofnucpairs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairs"
            },
            "numofnucpairsdso": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairsdso"
            },
            "numofnucpairspso": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairspso"
            },
            "numofnucpairsfc": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairsfc"
            },
            "numofnucpairssd": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucpairssd"
            },
            "pairsinfo": {
              "anyOf": [
                {
                  "items": {
                    "maxItems": 4,
                    "minItems": 4,
                    "prefixItems": [
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      },
                      {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                      }
                    ],
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairsinfo"
            },
            "pairsdistances": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "exclusiveMinimum": 0,
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairsdistances"
            },
            "pairstotalssciso": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pairstotalssciso"
            }
          },
          "title": "SpinSpinCoupling",
          "type": "object"
        },
        "Tensor": {
          "description": "This class contains the A-Tensors of the epr calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : int\n    Electronic state\nirrep : int\n    Irreducible representation of the electronic state\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelem: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\npfac: list[StrictPositiveFloat]\n    Prefactor in MHz\naraw: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Raw tensors of each tensor\naeigenvalues: list[list[list[StrictFiniteFloat]]]\n    Eigenvalue of each tensor\naiso: list[StrictFiniteFloat]\n    Iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors of each tensor",
          "properties": {
            "method": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Method"
            },
            "level": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Level"
            },
            "mult": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Mult"
            },
            "state": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "State"
            },
            "irrep": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Irrep"
            },
            "numofnucs": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numofnucs"
            },
            "nuc": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Nuc"
            },
            "elem": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elem"
            },
            "isotope": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Isotope"
            },
            "i": {
              "anyOf": [
                {
                  "items": {
                    "minimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "I"
            },
            "pfac": {
              "anyOf": [
                {
                  "items": {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pfac"
            },
            "araw": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Araw"
            },
            "aeigenvalues": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aeigenvalues"
            },
            "aiso": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Aiso"
            },
            "orientation": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "maxItems": 3,
                      "minItems": 3,
                      "prefixItems": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Orientation"
            }
          },
          "title": "Tensor",
          "type": "object"
        },
        "ThermochemistryEnergy": {
          "description": "This class contains information about the thermochemistry and energies calculated in the calculation\n\nAttributes\n----------\ntemperature: StrictNonNegativeFloat\n    The temperature simulated in the calculation\npressure: StrictNonNegativeFloat\n   The pressure simulated in the calculation\ntotalmass: StrictPositiveFloat\n   The total mass of the molecule(s)\nspindegeneracy: StrictNonNegativeInt\n    Degeneracy of the spin\nelenergy: StrictFiniteFloat\n    Electron energy\ntransenergy: StrictFiniteFloat\n    Energy of the transition\nrotenergy: StrictFiniteFloat\n    Energy of the rotation\nvibenergy: StrictFiniteFloat\n    Energy of the vibration\nfreqscalingfactor: StrictPositiveFloat\n    Scaling factor of the frequencies\nfreq: list[list[StrictFiniteFloat]]\n    list of all frequencies\nzpe: StrictPositiveFloat\n    Zero point energy\ninnerenergyu: StrictFiniteFloat\n    Inner Energy of the system\nenthalpyh: StrictFiniteFloat\n    Enthalpy of the system\nqel: StrictFiniteFloat\n    Gibbs electron energy\nqrot: StrictNonNegativeFloat\n    Gibbs energy for Rotations\nqvib: StrictNonNegativeFloat\n    Gibbs energy for vibration\nentropys: StrictFiniteFloat\n    Entropy of the system\nfreeenergyg: StrictFiniteFloat\n    Gibbs (free) energy of the system\nislinear: StrictBool\n    Is the molecular linear (true), else false",
          "properties": {
            "temperature": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Temperature"
            },
            "pressure": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Pressure"
            },
            "totalmass": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Totalmass"
            },
            "spindegeneracy": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Spindegeneracy"
            },
            "elenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Elenergy"
            },
            "transenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Transenergy"
            },
            "rotenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Rotenergy"
            },
            "vibenergy": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vibenergy"
            },
            "numoffreqs": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Numoffreqs"
            },
            "freqscalingfactor": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freqscalingfactor"
            },
            "freq": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freq"
            },
            "zpe": {
              "anyOf": [
                {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Zpe"
            },
            "innerenergyu": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Innerenergyu"
            },
            "enthalpyh": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Enthalpyh"
            },
            "qel": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qel"
            },
            "qrot": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qrot"
            },
            "qvib": {
              "anyOf": [
                {
                  "minimum": 0,
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Qvib"
            },
            "entropys": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Entropys"
            },
            "freeenergyg": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Freeenergyg"
            },
            "islinear": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Islinear"
            }
          },
          "title": "ThermochemistryEnergy",
          "type": "object"
        },
        "VdwCorrection": {
          "description": "This class contains the VDW-correction for DFT-Calculation\n\nAttributes\n----------\nvdw: StrictFiniteFloat\n    Used correction for the VDW effect\nvdw_atomic: list[list[StrictFiniteFloat]]\n    atomic decomposition of London dispersion energy (ADLD)",
          "properties": {
            "vdw": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vdw"
            },
            "vdw_atomic": {
              "anyOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "title": "Vdw Atomic"
            }
          },
          "title": "VdwCorrection",
          "type": "object"
        }
      },
      "description": "Contains the geometry dependent calculated results in the ORCA job\n\nAttributes\n----------\ngeometry: Geometry | None default = None\n    Contains information about the molecule\nenergy: EnergyList | None default = None\n    Contains information about the energies\nsingle_point_data: SinglePointData | None default = None\n    Contains information about the singlepoint\nmulliken_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains information about the Mulliken Population analyse\nloewdin_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains information about the Loewdin Population analyse\nchelpg_population_analysis: list[PopulationAnalysis] | None default = None\n    Contains the information about the charges from electrostatic potentials using a grid-based population analysis (CHELPG)\nhirshfeld_population_analysis: list[HirshfeldPopulationAnalysis] | None default = None\n    Contains information about the Hirshfeld population analyse\nmayer_population_analysis: list[MayerPopulationAnalysis] | None default = None\n    Contains information about the Mayer population analyse\nmbis_population_analysis: list[MbisPopAnalysis] | None default = None\n    Contains information about the MBIS population analysis\ncalculation_info: CalcInfo | None default = None\n    Contains information of the Calculation\ndipole_moment: list[Dipole] | None default = None\n    Contains information about the dipole moment\nnuclear_gradient: list[NucGradient] | None default = None\n    Contains information about the nuclear gradients for geometry Optimization\ndft_energy: list[DftEnergy] | None default = None\n    Contains information about all energies calculated for DFT\nvdw_correction: VdwCorrection | None default = None\n    Contains information about the Van-der-Waals correction\nhessian: Hessian | None default = None\n    Contains information about the Hessian-matrix\nsolvation_details: SolvDetails | None default = None\n    Contains information about the used solvent and the solvent model\npolarizability: list[Polarizability] | None default = None\n    Contains information about the polarizability of the molecule\nabsorption_spectrum: list[Spectrum] | None default = None\n    Contains the information about the calculated UVVis spectra\necd_spectrum: list[Spectrum] | None default = None\n    Contains the information about the calculated ecd spectra\na_tensor: list[Tensor] | None default = None\n    Contains all the A-Tensor of the EPR calculation\nefg_tensor: list[EfgTensor] | None default = None\n    Contains all the EFG-Tensor of the EPR calculation\ng_tensor: list[Gtensor] | None default = None\n    Contains all the G-Tensor of the EPR calculation\nspin_spin_coupling: SpinSpinCoupling | None default = None\n    Contains information about the Spin-SpinCoupling\nchemical_shift: list[ChemicalShift] | None default = None\n    Contains information about the chemical shift on SCF level\nnatural_orbitals: NaturalOrbitals | None default = None\n    Contains information about the natural orbitals\nmdci_led: Led | None default = None\n    Contains information about the local energy decomposition (LED)\nmdci_adld: MdciAdld | None default = None\n    Contains information about the mdci atomic decomposition of London dispersion (ADLD)\nmdci_adex: MdciAdex | None default = None\n    Contains information about the atomic decomposition of exchange (ADEX)\nbroken_symmetry: BrokenSym | None default = None\n    Contains information about the broken symmetry calculation\nquadrupole_moment: list[QuadrupleMoment] | None default = None\n    Contains the information about the SCF calculated quadruple moment\ncipsi_energies: list[CiPsi] | None default = None\n    Contains the information about the CIPSI calculation\nenergy_extrapolation: EnergyExtrapolation | None default = None\n    Contains information about the energy extrapolation\nroci_energy: list[RoCiEnergy] | None default = None\n    Contains information about the ROCI energy\nthermochemistry_energies: list[ThermochemistryEnergy] | None = None\n    Contains information about thermostatistical corrections\n    and final free energies",
      "properties": {
        "geometry": {
          "anyOf": [
            {
              "$ref": "#/$defs/Geometry"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "energy": {
          "anyOf": [
            {
              "$ref": "#/$defs/EnergyList"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "single_point_data": {
          "anyOf": [
            {
              "$ref": "#/$defs/SinglePointData"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "mulliken_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PopulationAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mulliken Population Analysis"
        },
        "loewdin_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PopulationAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Loewdin Population Analysis"
        },
        "chelpg_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PopulationAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Chelpg Population Analysis"
        },
        "hirshfeld_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/HirshfeldPopulationAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hirshfeld Population Analysis"
        },
        "mayer_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/MayerPopulationAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mayer Population Analysis"
        },
        "mbis_population_analysis": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/MbisPopAnalysis"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mbis Population Analysis"
        },
        "calculation_info": {
          "anyOf": [
            {
              "$ref": "#/$defs/CalcInfo"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "dipole_moment": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Dipole"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dipole Moment"
        },
        "nuclear_gradient": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/NucGradient"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nuclear Gradient"
        },
        "dft_energy": {
          "anyOf": [
            {
              "$ref": "#/$defs/DftEnergy"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "vdw_correction": {
          "anyOf": [
            {
              "$ref": "#/$defs/VdwCorrection"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "hessian": {
          "anyOf": [
            {
              "$ref": "#/$defs/Hessian"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "solvation_details": {
          "anyOf": [
            {
              "$ref": "#/$defs/SolvDetails"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "polarizability": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Polarizability"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Polarizability"
        },
        "absorption_spectrum": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Spectrum"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Absorption Spectrum"
        },
        "ecd_spectrum": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Spectrum"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ecd Spectrum"
        },
        "a_tensor": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Tensor"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "A Tensor"
        },
        "efg_tensor": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/EfgTensor"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Efg Tensor"
        },
        "g_tensor": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Gtensor"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Tensor"
        },
        "spin_spin_coupling": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/SpinSpinCoupling"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spin Spin Coupling"
        },
        "chemical_shift": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ChemicalShift"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Chemical Shift"
        },
        "natural_orbitals": {
          "anyOf": [
            {
              "$ref": "#/$defs/NaturalOrbitals"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "mdci_led": {
          "anyOf": [
            {
              "$ref": "#/$defs/Led"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "mdci_adld": {
          "anyOf": [
            {
              "$ref": "#/$defs/MdciAdld"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "mdci_adex": {
          "anyOf": [
            {
              "$ref": "#/$defs/MdciAdex"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "broken_symmetry": {
          "anyOf": [
            {
              "$ref": "#/$defs/BrokenSym"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "quadrupole_moment": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/QuadrupoleMoment"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadrupole Moment"
        },
        "cipsi_energies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CiPsi"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cipsi Energies"
        },
        "energy_extrapolation": {
          "anyOf": [
            {
              "$ref": "#/$defs/EnergyExtrapolation"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "roci_energy": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RoCiEnergy"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Roci Energy"
        },
        "thermochemistry_energies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ThermochemistryEnergy"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thermochemistry Energies"
        }
      },
      "title": "Geometries",
      "type": "object"
    },
    "Gtensor": {
      "description": "This class contains information about the G-Tensor in EPR calculation\n\nAttributes\n----------\nmethod: StrictStr\n   Used method for this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ng_matrix: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Matrix of the G-Tensor\ng_elec: StrictFiniteFloat\n    The free electron G-value contribution\ng_rmc: StrictFiniteFloat\n    Reduced mass correction\ng_tot: list[list[StrictFiniteFloat]]\n    Total G-tensor\ng_iso: StrictFiniteFloat\n    Isotropic part of the G-tensor\ng_dso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Diamagnetic contribution to the G-tensor\ng_pso: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Paramagnetic contribution to the G-tensor\ndelta_g: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Delta G-Tensor w.r.t the free electron\ndelta_g_iso: StrictFiniteFloat\n    Error of the isotropic part of the G-tensor\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the G-tensor",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "g_matrix": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Matrix"
        },
        "g_elec": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Elec"
        },
        "g_rmc": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Rmc"
        },
        "g_tot": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Tot"
        },
        "g_iso": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Iso"
        },
        "g_dso": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Dso"
        },
        "g_pso": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "G Pso"
        },
        "delta_g": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Delta G"
        },
        "delta_g_iso": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Delta G Iso"
        },
        "orientation": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orientation"
        }
      },
      "title": "Gtensor",
      "type": "object"
    },
    "Hessian": {
      "description": "Contains the information about the Hessian matrix and vibration Mods.\n\nAttributes\n----------\nhessian: list[list[list[StrictFloat]]]\n    Hessian-Matrix for the molecule\nmodes: list[list[list[StrictFloat]]]\n    Vibration-modes",
      "properties": {
        "hessian": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Hessian"
        },
        "modes": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Modes"
        }
      },
      "title": "Hessian",
      "type": "object"
    },
    "HirshfeldPopulationAnalysis": {
      "description": "Has the Information about the Hirshfeld population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictPositiveInt]]\n    Atom number according to the position in the periodic table\ndensa: StrictNonNegativeFiniteFloat\n    Density of alpha electrons\ndensb: StrictNonNegativeFiniteFloat\n    Density of beta electrons\natomiccharges: list[list[StrictFiniteFloat]]\n    Total charges of the atoms according to the Hirshfeld population analysis\nspin: list[list[StrictFiniteFloat]]\n    list of the spin densities, at the atoms",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "atno": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atno"
        },
        "densa": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Densa"
        },
        "densb": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Densb"
        },
        "atomiccharges": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atomiccharges"
        },
        "spin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spin"
        }
      },
      "title": "HirshfeldPopulationAnalysis",
      "type": "object"
    },
    "Led": {
      "description": "This class contains information about the LED calculation\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt\n    Number of used fragments\nelectrostref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Electrostatics reference\nexchangeref: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Exchange reference\ndispcontr: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Strong Pair Dispersion contribution\ndispweak: list[tuple[StrictFiniteFloat, StrictFiniteFloat]]\n    Dispersion Weak pairs\nsumnondisstrong: StrictFiniteFloat\n    Sum of non dispersive correlation strong pairs\nsumnondisweak: StrictFiniteFloat\n    Sum of non dispersive correlation weak pairs",
      "properties": {
        "numoffragments": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffragments"
        },
        "electrostref": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Electrostref"
        },
        "exchangeref": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Exchangeref"
        },
        "dispcontr": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dispcontr"
        },
        "dispweak": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dispweak"
        },
        "sumnondisstrong": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sumnondisstrong"
        },
        "sumnondisweak": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sumnondisweak"
        },
        "corrint": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrint"
        },
        "refint": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refint"
        },
        "totint": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totint"
        }
      },
      "title": "Led",
      "type": "object"
    },
    "MayerPopulationAnalysis": {
      "description": "Has the Information about the Mayer population analyses\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno: list[list[StrictFiniteFloat]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\nbondthresh: StrictPositiveFiniteFloat\n    Threshold for the bound order to be printed\nnbondordersprint: StrictPositiveInt\n    Number of bounds\nbondorders: list[list[StrictFiniteFloat]]\n    Bound order of each Bound\ncomponents: list[tuple[StrictNonNegativeInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    The indices and atomic numbers of the bonding atoms\nna : list[list[StrictFiniteFloat]]\n    Mulliken gross atomic population\nza: list[list[StrictFiniteFloat]]\n    Total nuclear charge\nqa: list[list[StrictFiniteFloat]]\n    Mulliken gross atomic charge\nva: list[list[StrictFiniteFloat]]\n    Mayer's total valence\nbva: list[list[StrictFiniteFloat]]\n    Mayer's bonded valence\nfa: list[list[StrictFiniteFloat]]\n    Mayer's free valence",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "atno": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atno"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "bondthresh": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bondthresh"
        },
        "nbondordersprint": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nbondordersprint"
        },
        "bondorders": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bondorders"
        },
        "components": {
          "anyOf": [
            {
              "items": {
                "maxItems": 4,
                "minItems": 4,
                "prefixItems": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Components"
        },
        "na": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Na"
        },
        "za": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Za"
        },
        "qa": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qa"
        },
        "va": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Va"
        },
        "bva": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bva"
        },
        "fa": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fa"
        }
      },
      "title": "MayerPopulationAnalysis",
      "type": "object"
    },
    "MbisPopAnalysis": {
      "description": "This class contains the information about the MIBS population analysis\n\nAttributes\n----------\nnatoms: PositiveInt\n    Number of atoms\natno: list[list[PositiveInt]]\n    list with the Atom number according to the PSE\nthresh: PositiveFloat\n    Threshold for printing orbitals\nniter: PositiveInt\n    Number of iterations\nlargeprint: StrictBool\n    Has \"Largeprint\" been used\ndensa: PositiveFloat\n    Alpha densely\ndensb: PositiveFloat\n    Beta densely\natomiccharges: list[list[StrictFloat]]\n    list with atomic charges\nspin: list[list[StrictFloat]]\n    list of the spin density\nnpopval: list[list[NonNegativeFloat]]\n    Population value of each atoms\nsigmaval: list[list[StrictFloat]]\n    list of sigma value of the atoms",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "atno": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atno"
        },
        "thresh": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Thresh"
        },
        "niter": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Niter"
        },
        "largeprint": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Largeprint"
        },
        "densa": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Densa"
        },
        "densb": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Densb"
        },
        "atomiccharges": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atomiccharges"
        },
        "spin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spin"
        },
        "npopval": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npopval"
        },
        "sigmaval": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sigmaval"
        }
      },
      "title": "MbisPopAnalysis",
      "type": "object"
    },
    "MdciAdex": {
      "description": "This class contains information about the atomic decomposition of\nexchange (ADEX).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adex scheme\nadexatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Loewdin populations\nadexfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Loewdin populations\nadexatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic exchange contributions based on Mulliken populations\nadexfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment exchange contributions based on Mulliken populations",
      "properties": {
        "numoffragments": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffragments"
        },
        "adexatomic_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adexatomic Loewdin"
        },
        "adexfrag_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adexfrag Loewdin"
        },
        "adexatomic_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adexatomic Mulliken"
        },
        "adexfrag_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adexfrag Mulliken"
        }
      },
      "title": "MdciAdex",
      "type": "object"
    },
    "MdciAdld": {
      "description": "This class contains information about the atomic decomposition of\nLondon dispersion (ADLD).\n\nAttributes\n----------\nnumoffragments: StrictPositiveInt | None = None\n    Number of fragments defined in the adld scheme\nadldcorratomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Loewdin populations\nadldcorrfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Loewdin populations\nadlddispatomic_loewdin: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Loewdin populations\nadlddispfrag_loewdin: list[list[StrictFiniteFloat]] | None = None\n    fragment dispersion contributions based on Loewdin populations\nadldcorratomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic correlation contributions based on Mulliken populations\nadldcorrfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    fragment correlation contributions based on Mulliken populations\nadlddispatomic_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations\nadlddispfrag_mulliken: list[list[StrictFiniteFloat]] | None = None\n    atomic dispersion contributions based on Mulliken populations",
      "properties": {
        "numoffragments": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffragments"
        },
        "adldcorratomic_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adldcorratomic Loewdin"
        },
        "adldcorrfrag_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adldcorrfrag Loewdin"
        },
        "adlddispatomic_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adlddispatomic Loewdin"
        },
        "adlddispfrag_loewdin": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adlddispfrag Loewdin"
        },
        "adldcorratomic_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adldcorratomic Mulliken"
        },
        "adldcorrfrag_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adldcorrfrag Mulliken"
        },
        "adlddispatomic_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adlddispatomic Mulliken"
        },
        "adlddispfrag_mulliken": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Adlddispfrag Mulliken"
        }
      },
      "title": "MdciAdld",
      "type": "object"
    },
    "NaturalOrbitals": {
      "description": "This class contains the information about the natural orbitals in a broken symmetry calculation\n\nAttributes\n----------\nnel: StrictNonNegativeInt\n    Number of electrons\nnsomo: StrictNonNegativeInt\n    Number of SOMO\nndomo: StrictNonNegativeInt\n    Number of DOMO\nnvmo: StrictNonNegativeInt\n    Number of Virtual MO\nnnatoorbs: StrictNonNegativeInt\n    Number of natural orbitals\noccuno: list[list[StrictFloat]]\n    Number of occupation\noccunso: list[list[StrictFiniteFloat]]\n    Number of occupation SO",
      "properties": {
        "nel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nel"
        },
        "nsomo": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nsomo"
        },
        "ndomo": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ndomo"
        },
        "nvmo": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nvmo"
        },
        "nnatoorbs": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nnatoorbs"
        },
        "occuno": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Occuno"
        },
        "occunso": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Occunso"
        }
      },
      "title": "NaturalOrbitals",
      "type": "object"
    },
    "NucGradient": {
      "description": "This class contains information about the SCF nuclear gradients\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Number of atoms in the calculation\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ngradnorm: StrictNonNegativeFiniteFloat\n    Total norm of all gradients\ngrad: list[list[StrictFiniteFloat]]\n    Gradient for each atom in each dimension",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "gradnorm": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Gradnorm"
        },
        "grad": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Grad"
        }
      },
      "title": "NucGradient",
      "type": "object"
    },
    "Polarizability": {
      "description": "This class contains information about the polarizability of the molecule\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type and relaxation of Density like Electron Density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\ndoatomicpolar: StrictBool\n    Should the dipole atom calculation be done\nrawcartesian: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Raw data of the cartesian product\ndiagonalizedtensor: list[StrictFiniteFloat]\n    Diagonalized tenors\norientation: list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]\n    Orientation of the polarization vector\nisotropicpolar: StrictFiniteFloat\n    Isotropic polarity",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "doatomicpolar": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doatomicpolar"
        },
        "rawcartesian": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rawcartesian"
        },
        "diagonalizedtensor": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diagonalizedtensor"
        },
        "orientation": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orientation"
        },
        "isotropicpolar": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Isotropicpolar"
        }
      },
      "title": "Polarizability",
      "type": "object"
    },
    "PopulationAnalysis": {
      "description": "Has the Information about the different population analysis\n\nAttributes\n----------\nnatoms: StrictPositiveInt\n    Numbers of atoms\natno : list[list[StrictPositiveInt]]\n    Atom-number according to the position in the periodic table\nmethod : StrictStr\n    Underlying electronic structure method\nlevel : StrictStr\n    Source of density e.g. linearized, un-relaxed, relaxed\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : StrictInt\n    Electronic state\nirrep : StrictInt\n    Irreducible representation of the electronic state\natomiccharges: list[list[StrictFiniteFloat]]\n    Charges of the atoms according to the population analysis",
      "properties": {
        "natoms": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Natoms"
        },
        "atno": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atno"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "atomiccharges": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Atomiccharges"
        }
      },
      "title": "PopulationAnalysis",
      "type": "object"
    },
    "QuadrupoleMoment": {
      "description": "Has the Information about the quadrupole-Moment calculated by the ORCA Job\n\nAttributes\n----------\nmethod: StrictStr\n    Used method: SCF, DFT, CC or similar\nlevel: StrictStr\n    Type of density like electron density\nmult: StrictInt\n    Multiplicity of the element\nstate: StrictInt\n    Electronic state\nirrep: StrictInt\n    Irreducible representation\ndoatomicquad: StrictBool\n    Should the quadrupole atom calculation be done\nisotropicquadmoment: StrictFloat\n    Isotopic quadruple moment\nquadeleccontrib: list[list[StrictNegativeFloat]]\n    Contribution of the electrons on the quadrupole moment in all three dimension\nquadnuccontrib: list[list[StrictPositiveFloat]]\n    Contribution of the nucleus on the quadrupole moment in all three dimension\nquadtotal: list[list[StrictFiniteFloat]]\n    Total quadruple moment in all three dimension\nquaddiagonalized: list[list[StrictFinteFloat]]\n    Diagonalized quadruple matrix",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "doatomicquad": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Doatomicquad"
        },
        "isotropicquadmoment": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Isotropicquadmoment"
        },
        "quadeleccontrib": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadeleccontrib"
        },
        "quadnuccontrib": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadnuccontrib"
        },
        "quadtotal": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quadtotal"
        },
        "quaddiagonalized": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Quaddiagonalized"
        }
      },
      "title": "QuadrupoleMoment",
      "type": "object"
    },
    "RoCiEnergy": {
      "description": "This class contains infos about the restricted open shell CI energies\n\nAttributes\n----------\nmultiplicities: list[list[StrictPositiveFloat]]\n    list of the multiplicities of the states\nenergies: list[Lis[StrictFiniteFloat]]\n    Energies of the stats\nrefenergy: StrictFiniteFloat\n    Reference energy\ncorrenergy: StrictFiniteFloat\n    Correlation energy\ntotalenergy: StrictFiniteFloat\n    Total energy",
      "properties": {
        "multiplicities": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Multiplicities"
        },
        "energies": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Energies"
        },
        "refenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        },
        "totalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        }
      },
      "title": "RoCiEnergy",
      "type": "object"
    },
    "SinglePointData": {
      "description": "Has the Information about single points in ORCA\n\nAttributes\n----------\nconverged: bool\n    Whether the singlepoint calculation has converged\nfinalenergy: StrictFiniteFloat\n    The energy printed as `FINAL SINGLE POINT ENERGY` in the\n    ORCA output",
      "properties": {
        "converged": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Converged"
        },
        "finalenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Finalenergy"
        }
      },
      "title": "SinglePointData",
      "type": "object"
    },
    "SolvDetails": {
      "description": "This class contains information about the solvation Calculation\n\nAttributes\n---------\nsolvent: StrictStr\n    Name of the solvent\nepsilon: StrictPositiveFloat\n    Dielectric constant of the solvent\nrefrac: StrictPositiveFloat\n    Refraction index of the solvent\nrsolv: StrictPositiveFloat\n    Radiation of the solvent\nsurfacetype: StrictStr\n    Type of the solvation surface\nnpoints: StrictPositiveInt\n    Number of points\nsurfacearea: StrictPositiveFloat\n    Surface area\ncpcmdielenergy: StricFinitetFloat\n    Total solvation energy",
      "properties": {
        "solvent": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Solvent"
        },
        "epsilon": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Epsilon"
        },
        "refrac": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refrac"
        },
        "rsolv": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rsolv"
        },
        "surfacetype": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Surfacetype"
        },
        "npoints": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Npoints"
        },
        "surfacearea": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Surfacearea"
        },
        "cpcmdielenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cpcmdielenergy"
        }
      },
      "title": "SolvDetails",
      "type": "object"
    },
    "Spectrum": {
      "description": "This class contains the information about calculated spectra like UVVis or ECD spectra\n\nAttributes\n----------\ndensity_name: StrictStr\n    Name of property with used theory\ntemperature: StrictNonNegativeFloat\n    Assumed temperature in the calculation\nmethod: StrictPositiveInt\n    Method used in this calculation\nrelcorrection: StrictPositiveInt\n    Type of relativistic treatment in quasi degenerate perturbation theory in this calculation\ndenstype: StrictNonNegativeInt\n    Used density type in this calculation\nderitype: StrictNonNegativeInt\n    Type of derived used in this calculation\ndenslevel: StrictNonNegativeInt\n    Source of density\nrepresentation: StrictStr\n    Used representation (passible Unknown, Length, Velocity)\npointgroup: StrictStr\n    Pointgroup of the molecule\nntrans: StrictNonNegativeInt\n    Number of transition states modeled in the calculation\ndohighermoments: StrictBool\n    Are higher moments supposed to be used\nstates: list[tuple[StrictNonNegativeInt, StrictNonNegativeInt, StrictPositiveInt, StrictNonNegativeInt]]\n    Contains the initial and final states\nmultiplicities: list[tuple[StrictPositiveFloat, StrictPositiveFloat]]\n    Contains the multiplicity of the initial and final state\nexcitationenergies: list[list[StrictFiniteFloat]]\n    Contains the excitation energies for all modeled transition",
      "properties": {
        "density_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Density Name"
        },
        "temperature": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Temperature"
        },
        "method": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "relcorrection": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Relcorrection"
        },
        "denstype": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Denstype"
        },
        "deritype": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Deritype"
        },
        "denslevel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Denslevel"
        },
        "representation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Representation"
        },
        "pointgroup": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pointgroup"
        },
        "ntrans": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Ntrans"
        },
        "dohighermoments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Dohighermoments"
        },
        "states": {
          "anyOf": [
            {
              "items": {
                "maxItems": 4,
                "minItems": 4,
                "prefixItems": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "minimum": 0,
                    "type": "integer"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "States"
        },
        "multiplicities": {
          "anyOf": [
            {
              "items": {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Multiplicities"
        },
        "excitationenergies": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Excitationenergies"
        }
      },
      "title": "Spectrum",
      "type": "object"
    },
    "SpinSpinCoupling": {
      "description": "This class contains the information about the spin spin coupling\n\nAttributes\n----------\nmethod: StrictStr\n    Used Method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult: StrictPositiveInt\n    Multiplicity\nirrep: StrictNonNegativeInt\n    Irreducible representation\nstate: StrictInt\n    Electronic state\nnumofnucpairs: StrictPositiveInt\n    Number of nuclei pairs to calculate\nnumofnucpairsdso: StrictPositiveInt\n    Number of nuclear pairs to calculate DSO\nnumofnucpairspso: StrictPositiveInt\n    Number of nuclear pairs to calculate PSO\nnumofnucpairsfc: StrictPositiveInt\n    Number of nuclear pairs to calculate FC\nnumofnucpairssd: StrictPositiveInt\n    Number of nuclear pairs to calculate SD\npairsinfo: list[tuple[StrictPositiveInt, StrictPositiveInt, StrictPositiveInt, StrictPositiveInt]]\n    Index1, atom number 1, index 2 and atom number 2 of atoms that builds a pair\npairsdistances: list[list[StrictPositiveFloat]]\n    Distance of each pair\npairstotalssciso: list[list[StrictPositiveFloat]]\n    Spi-Spin coupling constant of each pair",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "irrep": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "numofnucpairs": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucpairs"
        },
        "numofnucpairsdso": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucpairsdso"
        },
        "numofnucpairspso": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucpairspso"
        },
        "numofnucpairsfc": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucpairsfc"
        },
        "numofnucpairssd": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucpairssd"
        },
        "pairsinfo": {
          "anyOf": [
            {
              "items": {
                "maxItems": 4,
                "minItems": 4,
                "prefixItems": [
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pairsinfo"
        },
        "pairsdistances": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pairsdistances"
        },
        "pairstotalssciso": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pairstotalssciso"
        }
      },
      "title": "SpinSpinCoupling",
      "type": "object"
    },
    "Tensor": {
      "description": "This class contains the A-Tensors of the epr calculation\n\nAttributes\n----------\nmethod: StrictStr\n    Used method in this calculation\nlevel: StrictStr\n    Type and relaxation of density\nmult : StrictPositiveInt\n    Multiplicity of the electronic state\nstate : int\n    Electronic state\nirrep : int\n    Irreducible representation of the electronic state\nnumofnucs: StrictPositiveInt\n    Number of calculated nuclei\nnuc: list[StrictPositiveInt]\n    list of used nuclei\nelem: list[StrictPositiveInt]\n    Atomic number of the nucleus\nisotope: list[StrictPositiveFloat]\n    Used isotope of the element\ni: list[StrictNonNegativeFloat]\n    Spin of nucleus\npfac: list[StrictPositiveFloat]\n    Prefactor in MHz\naraw: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Raw tensors of each tensor\naeigenvalues: list[list[list[StrictFiniteFloat]]]\n    Eigenvalue of each tensor\naiso: list[StrictFiniteFloat]\n    Iso value of each tensor\norientation: list[list[tuple[StrictFiniteFloat, StrictFiniteFloat, StrictFiniteFloat]]]\n    Eigenvectors of each tensor",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "level": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Level"
        },
        "mult": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "state": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State"
        },
        "irrep": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Irrep"
        },
        "numofnucs": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofnucs"
        },
        "nuc": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Nuc"
        },
        "elem": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elem"
        },
        "isotope": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Isotope"
        },
        "i": {
          "anyOf": [
            {
              "items": {
                "minimum": 0,
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "I"
        },
        "pfac": {
          "anyOf": [
            {
              "items": {
                "exclusiveMinimum": 0,
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pfac"
        },
        "araw": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Araw"
        },
        "aeigenvalues": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aeigenvalues"
        },
        "aiso": {
          "anyOf": [
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aiso"
        },
        "orientation": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "maxItems": 3,
                  "minItems": 3,
                  "prefixItems": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Orientation"
        }
      },
      "title": "Tensor",
      "type": "object"
    },
    "ThermochemistryEnergy": {
      "description": "This class contains information about the thermochemistry and energies calculated in the calculation\n\nAttributes\n----------\ntemperature: StrictNonNegativeFloat\n    The temperature simulated in the calculation\npressure: StrictNonNegativeFloat\n   The pressure simulated in the calculation\ntotalmass: StrictPositiveFloat\n   The total mass of the molecule(s)\nspindegeneracy: StrictNonNegativeInt\n    Degeneracy of the spin\nelenergy: StrictFiniteFloat\n    Electron energy\ntransenergy: StrictFiniteFloat\n    Energy of the transition\nrotenergy: StrictFiniteFloat\n    Energy of the rotation\nvibenergy: StrictFiniteFloat\n    Energy of the vibration\nfreqscalingfactor: StrictPositiveFloat\n    Scaling factor of the frequencies\nfreq: list[list[StrictFiniteFloat]]\n    list of all frequencies\nzpe: StrictPositiveFloat\n    Zero point energy\ninnerenergyu: StrictFiniteFloat\n    Inner Energy of the system\nenthalpyh: StrictFiniteFloat\n    Enthalpy of the system\nqel: StrictFiniteFloat\n    Gibbs electron energy\nqrot: StrictNonNegativeFloat\n    Gibbs energy for Rotations\nqvib: StrictNonNegativeFloat\n    Gibbs energy for vibration\nentropys: StrictFiniteFloat\n    Entropy of the system\nfreeenergyg: StrictFiniteFloat\n    Gibbs (free) energy of the system\nislinear: StrictBool\n    Is the molecular linear (true), else false",
      "properties": {
        "temperature": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Temperature"
        },
        "pressure": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pressure"
        },
        "totalmass": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalmass"
        },
        "spindegeneracy": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Spindegeneracy"
        },
        "elenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Elenergy"
        },
        "transenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Transenergy"
        },
        "rotenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Rotenergy"
        },
        "vibenergy": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vibenergy"
        },
        "numoffreqs": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numoffreqs"
        },
        "freqscalingfactor": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freqscalingfactor"
        },
        "freq": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freq"
        },
        "zpe": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Zpe"
        },
        "innerenergyu": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Innerenergyu"
        },
        "enthalpyh": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Enthalpyh"
        },
        "qel": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qel"
        },
        "qrot": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qrot"
        },
        "qvib": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Qvib"
        },
        "entropys": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Entropys"
        },
        "freeenergyg": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Freeenergyg"
        },
        "islinear": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Islinear"
        }
      },
      "title": "ThermochemistryEnergy",
      "type": "object"
    },
    "VdwCorrection": {
      "description": "This class contains the VDW-correction for DFT-Calculation\n\nAttributes\n----------\nvdw: StrictFiniteFloat\n    Used correction for the VDW effect\nvdw_atomic: list[list[StrictFiniteFloat]]\n    atomic decomposition of London dispersion energy (ADLD)",
      "properties": {
        "vdw": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vdw"
        },
        "vdw_atomic": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Vdw Atomic"
        }
      },
      "title": "VdwCorrection",
      "type": "object"
    },
    "MdciEnergies": {
      "description": "This class contains information about the MDCI energy calculation done after a SCF energy calculation\n\nAttributes\n----------\nnumofel: PositiveInt\n    Number of electrons\nnumofcorrel: StrictPositiveInt\n    Number of corr-electrons\nnumofalphacorrel: StrictNonNegativeInt\n    Number of corr-electrons with an alpha spin\nnumofbetacorell: StrictNonNegativeInt\n    Number of corr-electrons with a beta spin\nrefenergy: list[list[StrictFiniteFloat]]\n    Energy reference\ncorrenergy: list[list[StrictFiniteFloat]]\n    Total energy contribution of the electron-correlation\naacorren: list[list[StrictFiniteFloat]]\n    Energy contribution of the alpha alpha electron-correlation\nbbcorren: list[list[StrictFiniteFloat]]\n    Energy contribution of the beta beta electron-correlation\nabcorren: list[list[StrictFiniteFloat]]\n    Energy contribution of the alpha beta electron-correlation\ncorrds: list[list[StrictFiniteFloat]]\n    singlet pair energy of double amplitudes\ncorrdt: list[list[StrictFiniteFloat]]\n    Triplet pair energy of double amplitudes\ncorrss: list[list[StrictFiniteFloat]]\n    Singlet pair energy of quadratic single amplitudes\ncorrst: list[list[StrictFiniteFloat]]\n    Triplet pair energy of quadratic single amplitudes\ntriplesenergy: list[list[StrictFiniteFloat]]\n    Triplets correlation energy",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "numofel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofel"
        },
        "numofcorrel": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofcorrel"
        },
        "numofalphacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofalphacorrel"
        },
        "numofbetacorrel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Numofbetacorrel"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        },
        "aacorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Aacorren"
        },
        "bbcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bbcorren"
        },
        "abcorren": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Abcorren"
        },
        "corrds": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrds"
        },
        "corrdt": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrdt"
        },
        "corrss": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrss"
        },
        "corrst": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Corrst"
        },
        "triplesenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Triplesenergy"
        }
      },
      "title": "MdciEnergies",
      "type": "object"
    },
    "Mp2EnergyBase": {
      "description": "This is the base class for MP2 energies\n\nAttributes\n----------\nrefenergy: StrictFiniteFloat\n    Reference energy\ncorrenergy: StrictFiniteFloat\n    MP2 correlation energy",
      "properties": {
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Method"
        },
        "mult": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "exclusiveMinimum": 0,
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mult"
        },
        "totalenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Totalenergy"
        },
        "refenergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Refenergy"
        },
        "correnergy": {
          "anyOf": [
            {
              "items": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Correnergy"
        }
      },
      "title": "Mp2EnergyBase",
      "type": "object"
    },
    "PalFlags": {
      "description": "This class contains the information about the PAL flags\n\nAttributes\n----------\ndiskflag: StrictPositiveInt\n    Number of Disk-Flag set",
      "properties": {
        "diskflag": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Diskflag"
        }
      },
      "title": "PalFlags",
      "type": "object"
    }
  }
}